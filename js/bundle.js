var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ALDEventDef;
(function (ALDEventDef) {
    ALDEventDef["None"] = "";
    ALDEventDef["ReportAdClickSuccess"] = "\u5E7F\u544A\u5BFC\u51FA\u6210\u529F";
    ALDEventDef["ReportAdClickFail"] = "\u5E7F\u544A\u5BFC\u51FA\u5931\u8D25";
    //todo:添加你自己的阿拉丁事件
})(ALDEventDef = exports.ALDEventDef || (exports.ALDEventDef = {}));
//阿拉丁相关接口
var ALD = /** @class */ (function () {
    function ALD() {
    }
    ALD.aldSendOpenId = function (openid) {
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window["wx"].aldSendOpenid(openid);
            console.log("ALD 上报 openid : ", openid);
        }
        else if (Laya.Browser.onQQMiniGame) {
            Laya.Browser.window["qq"].aldSendOpenid(openid);
            console.log("ALD 上报 openid : ", openid);
        }
    };
    ALD.aldSendEvent = function (event, data) {
        var eventName = event;
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window["wx"].aldSendEvent(eventName, data);
        }
        else if (Laya.Browser.onQQMiniGame) {
            Laya.Browser.window["qq"].aldSendEvent(eventName, data);
        }
    };
    ALD.aldSendReportAdClickSuccess = function (data) {
        var type = ALDEventDef.ReportAdClickSuccess + " " + data.title + ":" + String(data.appid);
        var ald = ALD;
        console.log("ALD点击", data);
        ald.aldSendEvent(type, {
            "导出成功": data.title + ":" + String(data.appid)
        });
    };
    ALD.aldSendReportAdClickFail = function (data) {
        var type = ALDEventDef.ReportAdClickFail + " " + data.title + ":" + String(data.appid);
        var ald = ALD;
        console.log("ALD点击", data);
        ald.aldSendEvent(type, {
            "导出失败": data.title + ":" + String(data.appid)
        });
    };
    return ALD;
}());
exports.default = ALD;
},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig = /** @class */ (function () {
    function AppConfig() {
    }
    AppConfig.AppID = "wx6767e1fba201de19";
    AppConfig.ResServer = "https://oss.renyouwangluo.cn/biaozhahuixuanbiao"; //资源服务器地址
    AppConfig.LocalTestReServer = "res"; //本地测试资源服务器地址
    AppConfig.Versions = "0.0.0";
    AppConfig.onTTMiniGame = false; //是否是头条小游戏
    return AppConfig;
}());
exports.default = AppConfig;
},{}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppSwitchConfig_1 = require("./Config/AppSwitchConfig");
var CachedWXBannerAd = /** @class */ (function () {
    function CachedWXBannerAd() {
    }
    CachedWXBannerAd.preloadBanner = function () {
        var wxWuDianBanners = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wxWuDianBanners;
        var bannerTodayBannerMax = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerTodayBannerMax;
        var preLoadBanners = new Array();
        for (var i = 0; i < wxWuDianBanners.length; ++i) {
            preLoadBanners.push(wxWuDianBanners[i]);
        }
        if (preLoadBanners.length > bannerTodayBannerMax) {
            var delNum = preLoadBanners.length - bannerTodayBannerMax;
            for (var i = 0; i < delNum; ++i) {
                preLoadBanners.splice(Math.floor(Math.random() * preLoadBanners.length), 1);
            }
        }
        console.log("开始预创建微信Bannaer", preLoadBanners);
        console.log("Bannaer 最大数限制 ：", bannerTodayBannerMax);
        var counter = 0;
        Laya.timer.loop(2000, CachedWXBannerAd._preLoopObj, function () {
            if (counter >= preLoadBanners.length) {
                Laya.timer.clearAll(CachedWXBannerAd._preLoopObj);
                return;
            }
            var bannerid = preLoadBanners[counter];
            var banner = CachedWXBannerAd._bannerCache[bannerid];
            if (null == banner) {
                banner = CachedWXBannerAd.create(bannerid);
                if (null != banner) {
                    CachedWXBannerAd._bannerCache[bannerid] = banner;
                    console.log("预创建微信Bannaer", bannerid, "完成");
                }
            }
            ++counter;
        });
    };
    CachedWXBannerAd.getBanner = function (bannerid) {
        if (null == bannerid || "" == bannerid)
            return null;
        var banner = CachedWXBannerAd._bannerCache[bannerid];
        if (null == banner) {
            banner = CachedWXBannerAd.create(bannerid);
            if (null != banner) {
                CachedWXBannerAd._bannerCache[bannerid] = banner;
            }
        }
        return banner;
    };
    CachedWXBannerAd.create = function (bannerid) {
        if (Laya.Browser.onMiniGame) {
            var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            var banner = Laya.Browser.window["wx"].createBannerAd({
                adUnitId: bannerid,
                adIntervals: 30,
                style: {
                    left: 0,
                    top: (Laya.stage.height - 240) / Laya.stage.height * sh,
                    width: sw,
                }
            });
            if (banner) {
                banner.onLoad(function (res) {
                    console.log("CachedWXBanner 广告 加载完成", bannerid);
                    console.log(res);
                });
                banner.onError(function (err) {
                    console.log("CachedWXBanner 广告 加载失败", bannerid);
                    console.log(err);
                });
                banner.onResize(function (res) {
                    console.log(banner.style.realWidth, banner.style.realHeight);
                });
            }
            return banner;
        }
        else {
            return null;
        }
    };
    CachedWXBannerAd.show = function () {
        if (null != CachedWXBannerAd._curBanner) {
            CachedWXBannerAd._curBanner.hide();
            CachedWXBannerAd._curBanner = null;
        }
        var wuDianBanners = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wxWuDianBanners;
        var bannerid = wuDianBanners[Math.floor(Math.random() * wuDianBanners.length)];
        var banner = CachedWXBannerAd.getBanner(bannerid);
        if (banner) {
            CachedWXBannerAd._curBanner = banner;
            var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            CachedWXBannerAd._curBanner.style.top = (Laya.stage.height - 240) / Laya.stage.height * sh;
            CachedWXBannerAd._curBanner.show();
            console.log("CachedWXBanner 广告显示 bannerid ： ", bannerid);
        }
        var time = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerFreshTimer;
        //Laya.timer.once(time * 1000,CachedWXBannerAd,CachedWXBannerAd.changeShow);
    };
    CachedWXBannerAd.hide = function () {
        Laya.timer.clearAll(CachedWXBannerAd);
        if (null != CachedWXBannerAd._curBanner) {
            CachedWXBannerAd._curBanner.hide();
            CachedWXBannerAd._curBanner = null;
        }
        console.log("CachedWXBanner 广告隐藏");
    };
    CachedWXBannerAd.changeShow = function () {
        if (null != CachedWXBannerAd._curBanner) {
            CachedWXBannerAd._curBanner.hide();
            CachedWXBannerAd._curBanner = null;
        }
        CachedWXBannerAd.show();
    };
    CachedWXBannerAd.clear = function () {
        Laya.timer.clearAll(CachedWXBannerAd);
        for (var key in CachedWXBannerAd._bannerCache) {
            var banner = CachedWXBannerAd._bannerCache[key];
            if (null != banner) {
                banner.destroy();
            }
            CachedWXBannerAd._bannerCache[key] = null;
        }
    };
    CachedWXBannerAd._bannerCache = {};
    CachedWXBannerAd._curBanner = null;
    CachedWXBannerAd._preLoopObj = {};
    return CachedWXBannerAd;
}());
exports.default = CachedWXBannerAd;
},{"./Config/AppSwitchConfig":4}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("../AppConfig");
var AppSwitchData = /** @class */ (function () {
    function AppSwitchData() {
        this.version = "";
        this.banner = 0;
        this.wudian = 0;
        this.wudianAvailableTime = {
            "0": 0, "1": 0, "2": 0, "3": 0,
            "4": 0, "5": 0, "6": 0, "7": 0,
            "8": 0, "9": 0, "10": 0, "11": 0,
            "12": 0, "13": 0, "14": 0, "15": 0,
            "16": 0, "17": 0, "18": 0, "19": 0,
            "20": 0, "21": 0, "22": 0, "23": 0
        };
        this.mailiang = 1;
        this.mailianglist = new Array();
        this.mailiangSceneList = new Array();
        this.wxWuDianBanners = new Array();
        this.btnMoveTimer = 1;
        this.bannerMoveTimer = 0.5;
        this.bannerFreshTimer = 200;
        this.bannerCreateFailNum = 3;
        this.bannerTodayBannerMax = 10;
        this.adSwitch = 1;
        this.wudianSceneList = new Array();
        this.indexpopup = 0;
        this.endpagepopup = 0;
        this.morefunpopup = 0;
        this.endpage = 0;
        this.morefun = 0;
        this.index = 0;
        this.shipintubiao = 0;
        this.firstWudian = 0;
        this.secondWudian = 0;
    }
    Object.defineProperty(AppSwitchData.prototype, "wudianTimeAvaliable", {
        /**
         * 得到当前时间开关是否打开
         *
         * @readonly
         * @type {boolean}
         * @memberof AppSwitchData
         */
        get: function () {
            return this.wudianAvailableTime[new Date().getHours()] == 1;
        },
        enumerable: true,
        configurable: true
    });
    return AppSwitchData;
}());
exports.AppSwitchData = AppSwitchData;
var AppSwitchConfig = /** @class */ (function () {
    function AppSwitchConfig() {
        this._data = new Array();
    }
    AppSwitchConfig.getInstance = function () {
        if (null == AppSwitchConfig._instance) {
            AppSwitchConfig._instance = AppSwitchConfig.load();
        }
        return AppSwitchConfig._instance;
    };
    AppSwitchConfig.load = function () {
        var config = new AppSwitchConfig();
        var json = Laya.loader.getRes(AppConfig_1.default.ResServer + "/json/appswitch.json");
        if (json) {
            for (var i = 0; i < json.length; ++i) {
                var row = json[i];
                var rowData = new AppSwitchData();
                rowData.version = String(row["version"]);
                rowData.banner = Number(row["banner"]);
                rowData.wudian = Number(row["wudian"]);
                rowData.wudianAvailableTime = Object(row["wudianTime"]);
                rowData.mailiang = Number(row["mailiang"]);
                var mailianglist = row["mailianglist"];
                if (null != mailianglist) {
                    for (var j = 0; j < mailianglist.length; ++j) {
                        var flag = Number(mailianglist[j]);
                        rowData.mailianglist.push(flag);
                    }
                }
                var mailiangScenelist = row["mailiangScenelist"];
                if (null != mailiangScenelist) {
                    for (var j = 0; j < mailiangScenelist.length; ++j) {
                        var sceneValue = Number(mailiangScenelist[j]);
                        rowData.mailiangSceneList.push(sceneValue);
                    }
                }
                var wxwudianbanners = row["wxwudianbanners"];
                if (null != wxwudianbanners) {
                    for (var j = 0; j < wxwudianbanners.length; ++j) {
                        var bannerid = String(wxwudianbanners[j]);
                        rowData.wxWuDianBanners.push(bannerid);
                    }
                }
                rowData.btnMoveTimer = Number(row["btnMoveTimer"]);
                rowData.bannerMoveTimer = Number(row["bannerMoveTimer"]);
                rowData.bannerCreateFailNum = Number(row["createFailNum"]);
                rowData.bannerFreshTimer = Number(row["bannerFreshTimer"]);
                rowData.bannerTodayBannerMax = Number(row["todayBannerMax"]);
                rowData.adSwitch = Number(row["adSwitch"]);
                var wudianSceneList = row["wudianSceneList"];
                if (null != wudianSceneList) {
                    for (var j = 0; j < wudianSceneList.length; ++j) {
                        var wudianSceneValue = Number(wudianSceneList[j]);
                        rowData.wudianSceneList.push(wudianSceneValue);
                    }
                }
                rowData.indexpopup = Number(row["indexpopup"]);
                rowData.endpagepopup = Number(row["endpagepopup"]);
                rowData.morefunpopup = Number(row["morefunpopup"]);
                rowData.endpage = Number(row["endpage"]);
                rowData.morefun = Number(row["morefun"]);
                rowData.index = Number(row["index"]);
                rowData.shipintubiao = Number(row["shipintubiao"]);
                rowData.firstWudian = Number(row["firstWudian"]);
                rowData.secondWudian = Number(row["secondWudian"]);
                config._data.push(rowData);
            }
            return config;
        }
        else {
            config._data.push(new AppSwitchData());
            return config;
        }
    };
    AppSwitchConfig.prototype.getAppSwitchData = function () {
        return this._data[0];
    };
    return AppSwitchConfig;
}());
exports.default = AppSwitchConfig;
},{"../AppConfig":2}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventDef;
(function (EventDef) {
    EventDef[EventDef["None"] = 0] = "None";
    EventDef[EventDef["App_CloseFirstLoadingView"] = 500] = "App_CloseFirstLoadingView";
    EventDef[EventDef["AD_OnShareAdFail"] = 501] = "AD_OnShareAdFail";
    //当界面打开
    EventDef[EventDef["Game_OnViewOpen"] = 600] = "Game_OnViewOpen";
    //当界面关闭
    EventDef[EventDef["Game_OnViewClose"] = 601] = "Game_OnViewClose";
    //当玩家金币变动
    EventDef[EventDef["Game_OnUserMoneyChange"] = 701] = "Game_OnUserMoneyChange";
    //当玩家钻石变动
    EventDef[EventDef["Game_OnUserCrystalChange"] = 702] = "Game_OnUserCrystalChange";
    //当关卡开始
    EventDef[EventDef["Game_OnLevelStart"] = 1000] = "Game_OnLevelStart";
    //当关卡结束
    EventDef[EventDef["Game_OnLevelComplate"] = 1001] = "Game_OnLevelComplate";
    //误点预加载完毕
    EventDef[EventDef["AD_WudianBanner_LoadComplete"] = 2217] = "AD_WudianBanner_LoadComplete";
    //显示误点Banner
    EventDef[EventDef["AD_WudianBanner_Show"] = 2218] = "AD_WudianBanner_Show";
    //影藏误点Banner
    EventDef[EventDef["AD_WudianBanner_Hide"] = 2219] = "AD_WudianBanner_Hide";
    //预加载Banner
    EventDef[EventDef["AD_WudianBanner_PreLoad"] = 2220] = "AD_WudianBanner_PreLoad";
    //Tips:在这条添加定义你自己需要的事件，从10000号开始。记得分段分类管理不同类型事件。如果事件有传递参数 "必须" 在事件后面用注释写明事件参数结构。
    EventDef[EventDef["AD_OpenSideView"] = 2101] = "AD_OpenSideView";
    EventDef[EventDef["AD_CloseSideView"] = 2102] = "AD_CloseSideView";
    EventDef[EventDef["AD_OpenBottomLoopView"] = 2103] = "AD_OpenBottomLoopView";
    EventDef[EventDef["AD_CloseBottomLoopView"] = 2104] = "AD_CloseBottomLoopView";
    EventDef[EventDef["AD_OpenBanner"] = 2105] = "AD_OpenBanner";
    EventDef[EventDef["AD_CloseBanner"] = 2106] = "AD_CloseBanner";
    EventDef[EventDef["Skin_UnlockSuccess"] = 2200] = "Skin_UnlockSuccess";
})(EventDef = exports.EventDef || (exports.EventDef = {}));
},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventDispatcher = laya.events.EventDispatcher;
var EventMgr = /** @class */ (function (_super) {
    __extends(EventMgr, _super);
    function EventMgr() {
        return _super.call(this) || this;
    }
    ;
    //广播事件
    EventMgr.prototype.dispatch = function (InName, agv) {
        EventMgr.eventDispatcher.event(InName, agv);
    };
    //注册事件
    EventMgr.prototype.regEvemt = function (InName, caller, listener, arg) {
        EventMgr.eventDispatcher.on(InName, caller, listener, (arg == null) ? null : ([arg]));
    };
    //注册单次事件
    EventMgr.prototype.regOnceEvent = function (InName, caller, listener, arg) {
        EventMgr.eventDispatcher.once(InName, caller, listener, (arg == null) ? null : ([arg]));
    };
    //移除事件注册
    EventMgr.prototype.removeEvent = function (InName, caller, listener, arg) {
        EventMgr.eventDispatcher.off(InName, caller, listener);
    };
    EventMgr.eventDispatcher = new EventDispatcher();
    EventMgr.instance = new EventMgr();
    return EventMgr;
}(EventDispatcher));
exports.default = EventMgr;
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var GameMgr_1 = require("./Mgr/GameMgr");
var TwinkleSprite_1 = require("./View/TwinkleSprite");
var LoopAdBox_1 = require("./ShareAd/View/LoopAdBox");
var LoopAdView_1 = require("./ShareAd/View/LoopAdView");
var MyPopAdView_1 = require("./script/MyAdView/MyPopAdView");
var MyLoopAdBox_1 = require("./script/MyMgr/MyLoopAdBox");
var HorizontalLoopAdView_1 = require("./ShareAd/View/HorizontalLoopAdView");
var BannerAdView_1 = require("./ShareAd/View/BannerAdView");
var Advertisement_1 = require("./script/MyView/Advertisement");
var ClickGetPrize_1 = require("./View/ClickGetPrize/ClickGetPrize");
var FriendInviteView_1 = require("./script/MyView/FriendInviteView");
var HideAdvVideoIco_1 = require("./script/MyAdView/HideAdvVideoIco");
var SingleAdView_1 = require("./ShareAd/View/SingleAdView");
var SingleAniADView_1 = require("./ShareAd/View/SingleAniADView");
var GameMain_1 = require("./script/MyView/GameMain");
var GameOver_1 = require("./script/MyView/GameOver");
var TouchPad_1 = require("./script/GameLogic/TouchPad");
var SingleRdMoveAdView_1 = require("./ShareAd/View/SingleRdMoveAdView");
var GamePlaying_1 = require("./script/MyView/GamePlaying");
var GetUnlockSkin_1 = require("./script/MyView/GetUnlockSkin");
var LoadingView_1 = require("./View/LoadingView/LoadingView");
var MoreGame_1 = require("./script/MyView/MoreGame");
var PrizeDraw_1 = require("./script/MyView/PrizeDraw");
var SignInView_1 = require("./script/MyView/SignInView");
var SkipSuccess_1 = require("./script/MyView/SkipSuccess");
var TipsView_1 = require("./View/TipsView/TipsView");
var UniversalBottomZone_1 = require("./View/Common/UniversalBottomZone");
var UnlockSkinView_1 = require("./script/MyView/UnlockSkinView");
var UnlockSkinSuccess_1 = require("./script/MyView/UnlockSkinSuccess");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("Mgr/GameMgr.ts", GameMgr_1.default);
        reg("View/TwinkleSprite.ts", TwinkleSprite_1.default);
        reg("ShareAd/View/LoopAdBox.ts", LoopAdBox_1.default);
        reg("ShareAd/View/LoopAdView.ts", LoopAdView_1.default);
        reg("script/MyAdView/MyPopAdView.ts", MyPopAdView_1.default);
        reg("script/MyMgr/MyLoopAdBox.ts", MyLoopAdBox_1.default);
        reg("ShareAd/View/HorizontalLoopAdView.ts", HorizontalLoopAdView_1.default);
        reg("ShareAd/View/BannerAdView.ts", BannerAdView_1.default);
        reg("script/MyView/Advertisement.ts", Advertisement_1.default);
        reg("View/ClickGetPrize/ClickGetPrize.ts", ClickGetPrize_1.default);
        reg("script/MyView/FriendInviteView.ts", FriendInviteView_1.default);
        reg("script/MyAdView/HideAdvVideoIco.ts", HideAdvVideoIco_1.default);
        reg("ShareAd/View/SingleAdView.ts", SingleAdView_1.default);
        reg("ShareAd/View/SingleAniADView.ts", SingleAniADView_1.default);
        reg("script/MyView/GameMain.ts", GameMain_1.default);
        reg("script/MyView/GameOver.ts", GameOver_1.default);
        reg("script/GameLogic/TouchPad.ts", TouchPad_1.default);
        reg("ShareAd/View/SingleRdMoveAdView.ts", SingleRdMoveAdView_1.default);
        reg("script/MyView/GamePlaying.ts", GamePlaying_1.default);
        reg("script/MyView/GetUnlockSkin.ts", GetUnlockSkin_1.default);
        reg("View/LoadingView/LoadingView.ts", LoadingView_1.default);
        reg("script/MyView/MoreGame.ts", MoreGame_1.default);
        reg("script/MyView/PrizeDraw.ts", PrizeDraw_1.default);
        reg("script/MyView/SignInView.ts", SignInView_1.default);
        reg("script/MyView/SkipSuccess.ts", SkipSuccess_1.default);
        reg("View/TipsView/TipsView.ts", TipsView_1.default);
        reg("View/Common/UniversalBottomZone.ts", UniversalBottomZone_1.default);
        reg("script/MyView/UnlockSkinView.ts", UnlockSkinView_1.default);
        reg("script/MyView/UnlockSkinSuccess.ts", UnlockSkinSuccess_1.default);
    };
    GameConfig.width = 750;
    GameConfig.height = 1334;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "vertical";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "GameMain.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./Mgr/GameMgr":10,"./ShareAd/View/BannerAdView":23,"./ShareAd/View/HorizontalLoopAdView":24,"./ShareAd/View/LoopAdBox":25,"./ShareAd/View/LoopAdView":26,"./ShareAd/View/SingleAdView":27,"./ShareAd/View/SingleAniADView":28,"./ShareAd/View/SingleRdMoveAdView":29,"./View/ClickGetPrize/ClickGetPrize":33,"./View/Common/UniversalBottomZone":34,"./View/LoadingView/LoadingView":35,"./View/TipsView/TipsView":36,"./View/TwinkleSprite":37,"./script/GameLogic/TouchPad":46,"./script/MyAdView/HideAdvVideoIco":47,"./script/MyAdView/MyPopAdView":48,"./script/MyMgr/MyLoopAdBox":49,"./script/MyView/Advertisement":51,"./script/MyView/FriendInviteView":52,"./script/MyView/GameMain":53,"./script/MyView/GameOver":54,"./script/MyView/GamePlaying":55,"./script/MyView/GetUnlockSkin":56,"./script/MyView/MoreGame":57,"./script/MyView/PrizeDraw":58,"./script/MyView/SignInView":59,"./script/MyView/SkipSuccess":60,"./script/MyView/UnlockSkinSuccess":61,"./script/MyView/UnlockSkinView":62}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("../Net/HttpUnit");
var AppConfig_1 = require("../AppConfig");
var WXAPI_1 = require("../WXAPI");
var User_1 = require("../User/User");
var OPPOAPI_1 = require("../OPPOAPI");
/**
 * 用于买量上报,以及停留时间上报的的类，本质上是对wx和买量接口做一个集成化的封装方便使用
 *
 * @export
 * @class MaiLiang
 */
var MaiLiang = /** @class */ (function () {
    function MaiLiang() {
    }
    /**
     * 发送数据的类
     *
     * @protected
     * @static
     * @param {requestData} req
     * @memberof MaiLiang
     */
    MaiLiang.request = function (req) {
        if (req.url.indexOf("https://") > -1 ||
            req.url.indexOf("http://") > -1) {
            req.url = req.url;
        }
        else {
            req.url = MaiLiang.mainUrl + req.url;
        }
        var completeFunc = function (res) {
            console.log(res, "MaiLiang http Success");
            res = JSON.parse(res);
            if (res.Status == "200") {
                if (res.Result["OpenId"] != null && res.Result["OpenId"] != "") {
                    MaiLiang.MaiLiangOpenId = res.Result["OpenId"];
                    MaiLiang.time = req.data.posttime;
                    console.log("获得买量系统OpenId " + MaiLiang.MaiLiangOpenId);
                }
                else {
                    console.log("上报买量系统停留时间成功");
                }
                if (req.onSuccess) {
                    req.onSuccess(res);
                }
            }
            else {
                if (req.onFail) {
                    req.onFail(res);
                }
            }
            req.onSuccess = null;
            req = null;
        };
        var errorFunc = function (res) {
            console.log(res, "MaiLiang http fail");
            if (req.onFail) {
                req.onFail(res);
            }
            req.onFail = null;
            req = null;
        };
        var xhr = new Laya.HttpRequest();
        xhr.once(Laya.Event.COMPLETE, this, completeFunc);
        xhr.once(Laya.Event.ERROR, this, errorFunc);
        if (req.meth == "get") {
            var para = "";
            for (var _i = 0, _a = Object.keys(req.data); _i < _a.length; _i++) {
                var key = _a[_i];
                var value = req.data[key];
                para += key + "=" + value + "&";
            }
            req.url = req.url + "?" + para;
            xhr.send(req.url, null, req.meth);
        }
        else {
            var para = "";
            for (var _b = 0, _c = Object.keys(req.data); _b < _c.length; _b++) {
                var key = _c[_b];
                var value = req.data[key];
                para += key + "=" + value + "&";
            }
            xhr.send(req.url, para, req.meth, null, ["Content-Type", "application/x-www-form-urlencoded"]);
        }
    };
    /**
     * 获得买量系统唯一标识ID,此ID的作用是用来上报游戏时间
     *
     * @param {Function} res
     * @memberof MaiLiang
     */
    MaiLiang.GetMaiLiangOpenId = function (onSuccess, onFail) {
        if (Laya.Browser.onMiniGame) {
            var option = WXAPI_1.default.getLaunchOptionsSync();
            if (option != null) {
                var key = option.query["key"];
                if (key != null && key != "" && User_1.default.openId != "") {
                    MaiLiang.key = key;
                    var req = new HttpUnit_1.requestData();
                    req.url = MaiLiang.uclick;
                    req.onSuccess = onSuccess;
                    req.onFail = onFail;
                    req.data.appid = AppConfig_1.default.AppID;
                    req.data.openid = "";
                    var time = new Date().getTime() / 1000;
                    req.data.posttime = time;
                    req.data.auth = 0;
                    req.data.key = key;
                    req.data.wxopenid = User_1.default.openId;
                    req.meth = "POST";
                    console.log("发送买量数据接口");
                    MaiLiang.request(req);
                }
                else {
                    console.log("发送买量数据接口失败，key或者OpenId为空");
                    onFail(null);
                }
            }
            else {
                console.log("上报买量数据失败无法获得option");
                onFail(null);
            }
        }
        else if (Laya.Browser.onQGMiniGame) {
            var option = OPPOAPI_1.default.getLaunchOptionsSync();
            HttpUnit_1.default.reportImport(option.referrerInfo.package, option.referrerInfo.extraData.appid, function (result) {
                if (1 == result.code) {
                    console.log("OPPO 上报买量数据成功");
                }
                else {
                    console.log("OPPO 上报买量数据失败", result.msg);
                }
            }, function (result) {
                console.log("OPPO 上报买量数据失败");
                for (var key in result) {
                    console.log(key, result[key]);
                }
            });
        }
        else {
            console.log("不在微信模式下调用，默认上报买量数据失败");
            onFail(null);
        }
    };
    /**
     * 上报买量接口停留时间
     *
        appid －主体小程序appid
        openid －买量系统唯一标识（不可空）
        posttime － 请求时间刻度（精确到秒）
        time － 停留时长（精确到秒）
     * @static
     * @memberof MaiLiang
     */
    MaiLiang.ReportStayTime = function (onSuccess, onFail) {
        if (Laya.Browser.onMiniGame) {
            if (MaiLiang.MaiLiangOpenId != "") {
                var req = new HttpUnit_1.requestData();
                req.url = MaiLiang.stay;
                req.onSuccess = onSuccess;
                req.onFail = onFail;
                req.data.appid = AppConfig_1.default.AppID;
                req.data.openid = MaiLiang.MaiLiangOpenId;
                var time = new Date().getTime() / 1000;
                req.data.posttime = time;
                var staytime = MaiLiang.time != 0 ? time - MaiLiang.time : 0;
                req.data.time = staytime;
                req.meth = "POST";
                console.log("发送停留时间至买量接口");
                MaiLiang.request(req);
            }
        }
        else {
            console.log("不在微信模式下调用，默认发送停留时间至买量接口失败");
            onFail(null);
        }
    };
    MaiLiang.mainUrl = "https://swtj.mrkzx.cn";
    MaiLiang.uclick = "/v1.1/api/Activity/uclick.html";
    MaiLiang.stay = "/v1.1/api/Activity/stay.html";
    MaiLiang.key = ""; //推广路径中同名参数，需要调用方法WXAPi.getLaunchOptionsSync()，从返回的参数中获得。
    MaiLiang.MaiLiangOpenId = ""; //买量系统唯一标识,执行GetMaiLiangOpenId()方法成功后自动获得。
    MaiLiang.time = 0; //买量系统唯一标识后，记录当前时间（精确到秒）。
    return MaiLiang;
}());
exports.default = MaiLiang;
},{"../AppConfig":2,"../Net/HttpUnit":17,"../OPPOAPI":20,"../User/User":31,"../WXAPI":39}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var User_1 = require("./User/User");
var layaMaxUI_1 = require("./ui/layaMaxUI");
var LoadingView_1 = require("./View/LoadingView/LoadingView");
var HttpUnit_1 = require("./Net/HttpUnit");
var WXAPI_1 = require("./WXAPI");
var AppConfig_1 = require("./AppConfig");
var EventMgr_1 = require("./Event/EventMgr");
var EventDef_1 = require("./Event/EventDef");
var OPPOAPI_1 = require("./OPPOAPI");
var QQMiniGameAPI_1 = require("./QQMiniGameAPI");
var TTAPI_1 = require("./TTAPI");
var ALD_1 = require("./ALD");
var Main = /** @class */ (function () {
    function Main() {
        this._loadingUI = null;
        this._loadingView = null;
        //预加载列表
        this._preLoadRes = new Array();
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        if (true == AppConfig_1.default.onTTMiniGame) {
            Laya.Browser.onMiniGame = false;
        }
        if (!Laya.Browser.onMiniGame
            && !Laya.Browser.onQGMiniGame
            && !Laya.Browser.onQQMiniGame
            && !AppConfig_1.default.onTTMiniGame) //如果不是小游戏，资源服务器设置为本地测试地址
         {
            AppConfig_1.default.ResServer = AppConfig_1.default.LocalTestReServer;
        }
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        Laya.loader.maxLoader = 50;
        this.initLoadingView();
        //加载重要配置，这些配置必须在游戏启动前加载完成
        var firstConfigs = [
            { url: AppConfig_1.default.ResServer + "/json/appswitch.json", type: Laya.Loader.JSON }
        ];
        var self = this;
        Laya.loader.load(firstConfigs, Laya.Handler.create(this, function () {
            self.loadRes(); //加载资源
        }));
        EventMgr_1.default.instance.regOnceEvent(EventDef_1.EventDef.App_CloseFirstLoadingView, this, this.closeloadingUI);
    };
    Main.prototype.initLoadingView = function () {
        this._loadingUI = new layaMaxUI_1.ui.View.LoadingUI();
        Laya.stage.addChild(this._loadingUI);
        this._loadingUI.width = Laya.stage.width;
        this._loadingUI.height = Laya.stage.height;
        this._loadingView = this._loadingUI.getComponent(LoadingView_1.default);
        this._loadingView.setProcess(0);
    };
    Main.prototype.postResToOpenDataContext = function (onComplate) {
        if (Laya.Browser.onMiniGame) {
            console.log("开始透传资源数据到开放域");
            Laya.loader.load([
                "openRes/Rank.atlas",
            ], Laya.Handler.create(null, function () {
                Laya.MiniAdpter.sendAtlasToOpenDataContext("openRes/Rank.atlas");
                console.log("透传资源数据到开放域  完毕！！！");
                if (onComplate) {
                    onComplate();
                }
            }));
        }
        else {
            if (onComplate) {
                onComplate();
            }
        }
    };
    Main.prototype.preLoad = function () {
        //这里添加你需要预加载的资源
        // this._preLoadRes.push({ url: AppConfig.ResServer + "/json/example.json", type: Laya.Loader.JSON });
    };
    Main.prototype.loadRes = function () {
        var _this = this;
        this.preLoad();
        var resource = this._preLoadRes;
        var self = this;
        if (Laya.Browser.onMiniGame) {
            //开始加载分包
            var loadSubResTask = Laya.Browser.window["wx"].loadSubpackage({
                name: 'subRes',
                success: function (res) {
                    // 分包加载成功,开始预加载资源
                    if (resource.length > 0) {
                        Laya.loader.load(resource, Laya.Handler.create(_this, function () {
                            self.onLoadResComplate(); //预加载完成
                        }), Laya.Handler.create(_this, function (res) {
                            //todo:跟新进度条
                            self._loadingView.setProcess(res / 2 + 0.5);
                        }));
                    }
                    else {
                        self.onLoadResComplate(); //预加载完成
                    }
                },
                fail: function (res) {
                    _this.loadRes(); //加载失败，重新加载
                }
            });
            loadSubResTask.onProgressUpdate(function (res) {
                self._loadingView.setProcess(res / 2);
            });
        }
        else if (Laya.Browser.onQGMiniGame) //oppo小游戏
         {
            //开始加载分包
            var loadSubResTask = Laya.Browser.window["qg"].loadSubpackage({
                name: 'subRes',
                success: function (res) {
                    // 分包加载成功,开始预加载资源
                    if (resource.length > 0) {
                        Laya.loader.load(resource, Laya.Handler.create(_this, function () {
                            self.onLoadResComplate(); //预加载完成
                        }), Laya.Handler.create(_this, function (res) {
                            //todo:跟新进度条
                            self._loadingView.setProcess(res / 2 + 0.5);
                        }));
                    }
                    else {
                        self.onLoadResComplate(); //预加载完成
                    }
                },
                fail: function (res) {
                    _this.loadRes(); //加载失败，重新加载
                }
            });
            loadSubResTask.onProgressUpdate(function (res) {
                // 加载进度百分比
                var progress = res["progress"];
                // 下载数据
                var totalBytesWritten = res["totalBytesWritten"];
                // 总长度
                var totalBytesExpectedToWrite = res["totalBytesExpectedToWrite"];
                self._loadingView.setProcess(progress / 2);
            });
        }
        else if (Laya.Browser.onQQMiniGame) {
            //开始加载分包
            var loadSubResTask = Laya.Browser.window["qq"].loadSubpackage({
                name: 'subRes',
                success: function (res) {
                    // 分包加载成功,开始预加载资源
                    if (resource.length > 0) {
                        Laya.loader.load(resource, Laya.Handler.create(_this, function () {
                            self.onLoadResComplate(); //预加载完成
                        }), Laya.Handler.create(_this, function (res) {
                            //todo:跟新进度条
                            self._loadingView.setProcess(res / 2 + 0.5);
                        }));
                    }
                    else {
                        self.onLoadResComplate(); //预加载完成
                    }
                },
                fail: function (res) {
                    _this.loadRes(); //加载失败，重新加载
                }
            });
            loadSubResTask.onProgressUpdate(function (res) {
                self._loadingView.setProcess(res / 2);
            });
        }
        else { //字节跳动没有分包
            if (resource.length > 0) {
                Laya.loader.load(resource, Laya.Handler.create(this, function () {
                    self.onLoadResComplate();
                }), Laya.Handler.create(this, function (res) {
                    self._loadingView.setProcess(res);
                }));
            }
            else {
                self.onLoadResComplate();
            }
        }
    };
    Main.prototype.onLoadResComplate = function () {
        var self = this;
        this._loadingView.setProcess(1);
        if (Laya.Browser.onMiniGame) {
            WXAPI_1.default.wxLogin(function (code) {
                var _this = this;
                User_1.default.code = code;
                HttpUnit_1.default.login(function (res) {
                    if (res.code == 1) {
                        console.log("登陆成功！！！");
                        User_1.default.token = res.data.token;
                        User_1.default.openId = res.data.openid;
                        ALD_1.default.aldSendOpenId(User_1.default.openId);
                        HttpUnit_1.default.getGameData(function (res) {
                            console.log("获取用户数据成功！！！");
                            if (1 == res.code) {
                                User_1.default.initiUser(res.data);
                            }
                            else {
                                User_1.default.initiUser(null);
                            }
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        }, function (res) {
                            console.log("获取用户数据失败！！！");
                            User_1.default.token = "";
                            User_1.default.openId = "";
                            User_1.default.initiUser(null);
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        });
                    }
                    else {
                        console.log("登陆失败！！！" + res);
                        User_1.default.initiUser(null);
                        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                        }));
                    }
                }, function (res) {
                    console.log("登陆失败！！！" + res);
                    User_1.default.initiUser(null);
                    GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                    }));
                });
            }, null);
        }
        else if (Laya.Browser.onQGMiniGame) //oppo小游戏
         {
            OPPOAPI_1.default.initAdService(function () {
            }, function () {
            }, function () {
            });
            OPPOAPI_1.default.Login(function (token) {
                var _this = this;
                User_1.default.code = token;
                HttpUnit_1.default.login(function (res) {
                    if (res.code == 1) {
                        console.log("登陆成功！！！");
                        User_1.default.token = res.data.token;
                        User_1.default.openId = res.data.openid;
                        HttpUnit_1.default.getGameData(function (res) {
                            console.log("获取用户数据成功！！！");
                            if (1 == res.code) {
                                User_1.default.initiUser(res.data);
                                console.log("获取用户数据--------------------Start");
                                for (var key in res.data) {
                                    console.log(key, res.data[key]);
                                }
                                console.log("获取用户数据--------------------End");
                            }
                            else {
                                User_1.default.initiUser(null);
                            }
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        }, function (res) {
                            console.log("获取用户数据失败！！！");
                            User_1.default.token = "";
                            User_1.default.openId = "";
                            User_1.default.initiUser(null);
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        });
                    }
                    else {
                        console.log("登陆失败！！！", res);
                        User_1.default.initiUser(null);
                        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                        }));
                    }
                }, function (res) {
                    console.log("登陆失败！！！", res);
                    User_1.default.initiUser(null);
                    GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                    }));
                });
            }, null);
        }
        else if (Laya.Browser.onQQMiniGame) //qq小游戏
         {
            QQMiniGameAPI_1.default.Login(function (code) {
                var _this = this;
                User_1.default.code = code;
                HttpUnit_1.default.login(function (res) {
                    if (res.code == 1) {
                        console.log("登陆成功！！！");
                        User_1.default.token = res.data.token;
                        User_1.default.openId = res.data.openid;
                        ALD_1.default.aldSendOpenId(User_1.default.openId);
                        HttpUnit_1.default.getGameData(function (res) {
                            console.log("获取用户数据成功！！！");
                            if (1 == res.code) {
                                User_1.default.initiUser(res.data);
                            }
                            else {
                                User_1.default.initiUser(null);
                            }
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        }, function (res) {
                            console.log("获取用户数据失败！！！");
                            User_1.default.token = "";
                            User_1.default.openId = "";
                            User_1.default.initiUser(null);
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        });
                    }
                    else {
                        console.log("登陆失败！！！" + res);
                        User_1.default.initiUser(null);
                        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                        }));
                    }
                }, function (res) {
                    console.log("登陆失败！！！" + res);
                    User_1.default.initiUser(null);
                    GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                    }));
                });
            }, null);
        }
        else if (AppConfig_1.default.onTTMiniGame) //头条，字节跳动
         {
            TTAPI_1.default.ttLogin(function (code) {
                var _this = this;
                User_1.default.code = code;
                HttpUnit_1.default.login(function (res) {
                    if (res.code == 1) {
                        console.log("登陆成功！！！");
                        User_1.default.token = res.data.token;
                        User_1.default.openId = res.data.openid;
                        HttpUnit_1.default.getGameData(function (res) {
                            console.log("获取用户数据成功！！！");
                            if (1 == res.code) {
                                User_1.default.initiUser(res.data);
                            }
                            else {
                                User_1.default.initiUser(null);
                            }
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        }, function (res) {
                            console.log("获取用户数据失败！！！");
                            User_1.default.token = "";
                            User_1.default.openId = "";
                            User_1.default.initiUser(null);
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        });
                    }
                    else {
                        console.log("登陆失败！！！" + res);
                        User_1.default.initiUser(null);
                        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                        }));
                    }
                }, function (res) {
                    console.log("登陆失败！！！" + res);
                    User_1.default.initiUser(null);
                    GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                    }));
                });
            }, null);
        }
        else {
            User_1.default.testInitUser(); //测试
            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(this, function () {
            }));
        }
    };
    Main.prototype.closeloadingUI = function () {
        if (this._loadingUI && !this._loadingUI.destroyed) {
            this._loadingUI.destroy();
        }
    };
    return Main;
}());
//激活启动类
new Main();
},{"./ALD":1,"./AppConfig":2,"./Event/EventDef":5,"./Event/EventMgr":6,"./GameConfig":7,"./Net/HttpUnit":17,"./OPPOAPI":20,"./QQMiniGameAPI":21,"./TTAPI":30,"./User/User":31,"./View/LoadingView/LoadingView":35,"./WXAPI":39,"./ui/layaMaxUI":63}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("./ViewMgr");
var User_1 = require("../User/User");
var HttpUnit_1 = require("../Net/HttpUnit");
var MaiLiang_1 = require("../MaiLiangAPI/MaiLiang");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var WXAPI_1 = require("../WXAPI");
var WudianMgr_1 = require("./WudianMgr");
var CachedWXBannerAd_1 = require("../CachedWXBannerAd");
var StorageMgr_1 = require("./StorageMgr");
var ColliderManager_1 = require("../script/GameLogic/ColliderManager");
var PlayerController_1 = require("../script/GameLogic/PlayerController");
var SkinMgr_1 = require("../script/GameLogic/SkinMgr");
//游戏管理器，游戏代码的入口
var GameMgr = /** @class */ (function (_super) {
    __extends(GameMgr, _super);
    function GameMgr() {
        var _this = _super.call(this) || this;
        _this._subResourcePath = "subRes/LayaScene_Main/Conventional/";
        GameMgr._instance = _this;
        return _this;
    }
    GameMgr.getInstance = function () { return GameMgr._instance; };
    GameMgr.prototype.onAwake = function () {
        MaiLiang_1.default.GetMaiLiangOpenId(function (res) {
            console.log("GameUI 买量数据上报成功");
            Laya.Browser.window["wx"].onShow(function () {
                MaiLiang_1.default.GetMaiLiangOpenId(null, null);
            });
            Laya.Browser.window["wx"].onHide(function () {
                MaiLiang_1.default.ReportStayTime(null, null);
            });
        }, function (res) {
            console.log("GameUI 买量数据上报失败");
        });
        WXAPI_1.default.SetShareMenu("", "", function () {
        }, function () {
        }, function () {
        });
        WudianMgr_1.default.UpdateIpBlockState();
        CachedWXBannerAd_1.default.preloadBanner();
    };
    GameMgr.prototype.onStart = function () {
        this.preCreateGame();
    };
    GameMgr.prototype.preCreateGame = function () {
        //todo：这里添加初始化主场景的代码。EventMgr.instance.dispatch(EventDef.App_CloseFirstLoadingView); 添加到你的关卡加载完成的回调中，关闭加载界面
        this.GetStorageData();
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.GameMain);
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.Advertisement);
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.App_CloseFirstLoadingView);
        this.LoadGameScene(this._currentLevel);
        // if (Laya.Browser.onQQMiniGame) {
        //     QQMiniGameAPI.LoadAppBoxAd(null, null);
        //     QQMiniGameAPI.SetShareMenu("速度要快，姿势要帅！赶紧来和我一起玩吧！", "subRes/Image/分享.png");
        //     CachedWXBannerAd.preloadBanner();
        //     Laya.timer.once(3000, this, () => {
        //         if (ViewMgr.instance.getView(ViewDef.ClickGetPrize) == null) {
        //             CachedWXBannerAd.show();
        //         }
        //     })
        // }
    };
    //游戏存档,仅当作示例，实际存档根据实际项目各自实现
    GameMgr.prototype.saveGameData = function () {
        HttpUnit_1.default.saveGameData(User_1.default.getSaveData(), function (res) {
            if (res.code == 1) {
                console.log("存档成功");
            }
            else {
                console.log("存档失败");
            }
        }, function (res) {
            console.log("存档失败");
        });
    };
    Object.defineProperty(GameMgr.prototype, "CurrentLevel", {
        get: function () {
            return this._currentLevel;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameMgr.prototype, "CurrentScene", {
        get: function () {
            return this._currentScene;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameMgr.prototype, "CurrentDiamond", {
        get: function () {
            return this._currentDia;
        },
        set: function (v) {
            console.log("钻石数量改变", v);
            this._currentDia = v;
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnUserMoneyChange, [v]);
            this.StorageState();
        },
        enumerable: true,
        configurable: true
    });
    /**
     *
     *
     * @memberof GameUI
     */
    GameMgr.prototype.GetStorageData = function () {
        var lev = StorageMgr_1.default.getStorage("CurrentLevel");
        if (lev == null || lev == "" || lev == "null") {
            lev = "0";
        }
        this._currentLevel = parseInt(lev);
        var dmcount = StorageMgr_1.default.getStorage("Diamonds_Count");
        if (dmcount == null || dmcount == "" || dmcount == "null") {
            dmcount = "0";
        }
        this._currentDia = parseInt(dmcount);
    };
    /**
     * 存储游戏数据到本地
     *
     * @memberof GameUI
     */
    GameMgr.prototype.StorageState = function () {
        var CurrentLevel = new StorageMgr_1.StorageReq();
        CurrentLevel.key = "CurrentLevel";
        CurrentLevel.data = this._currentLevel != null ? this._currentLevel : 0;
        StorageMgr_1.default.setStorage(CurrentLevel);
        var Diamonds_Count = new StorageMgr_1.StorageReq();
        Diamonds_Count.key = "Diamonds_Count";
        Diamonds_Count.data = this._currentDia != null ? this._currentDia : 0;
        StorageMgr_1.default.setStorage(Diamonds_Count);
    };
    /**
     * 界面加载完成
     *
     * @param {Laya.Scene3D} scene
     * @memberof GameUI
     */
    GameMgr.prototype.SceneLoaded = function (scene) {
        if (scene) {
            this._currentScene = scene;
            var zhujue_1 = this._currentScene.getChildByName("zhujue");
            var camera = this._currentScene.getChildByName("Main Camera");
            /* 设置皮肤加载 */
            SkinMgr_1.default.Instance.ChangeSkin(zhujue_1, function () {
                zhujue_1.addComponent(ColliderManager_1.default);
                zhujue_1.addComponent(PlayerController_1.default);
                Laya.stage.addChildAt(scene, 0);
            });
            camera.clearFlag = 1;
            camera.clearColor = new Laya.Vector4(218 / 255, 218 / 255, 218 / 255, 1);
            // EventMgr.instance.dispatch(EventDef.Game_onLoadcomplete);
            // this._touchpad.EnableInput();
            // this._level_Text.text = "LEVEL " + this._currentLevel;
            // this._reset_Btn.mouseEnabled = true;
            // (this._playing_View as Laya.Box).bgColor = "#00000000";
        }
    };
    GameMgr.prototype.RefreshSkin = function () {
        var zhujue = this._currentScene.getChildByName("zhujue");
        SkinMgr_1.default.Instance.ChangeSkin(zhujue, function () { });
    };
    /**
     * 加载新3d场景的方法
     * 先加载场景资源，然后将Stage中旧场景删除，最后将新场景资源加载进Stage并且设置好Stage，保证UI一定是在3D场景之前
     *
     * @memberof GameUI
     */
    GameMgr.prototype.LoadGameScene = function (level) {
        // (this._playing_View as Laya.Box).bgColor = "#dadada";
        if (this._currentScene) {
            this._currentScene.destroy();
        }
        if (level > 199) {
            level = Math.ceil(this.GetRdSeed(level + 12345) * 199);
            console.log("关卡超出边界,真实关卡为:" + level);
        }
        var url = this._subResourcePath + level + ".ls";
        Laya.Scene3D.load(url, Laya.Handler.create(this, this.SceneLoaded));
    };
    /**
     * 加载当前场景
     *
     * @memberof GameUI
     */
    GameMgr.prototype.LoadCurrentScene = function () {
        this.LoadGameScene(this._currentLevel);
    };
    /**
     * 加载下一个场景
     *
     * @memberof GameUI
     */
    GameMgr.prototype.LoadNextScene = function () {
        if (this._currentLevel == null || this._currentLevel < 0) {
            this._currentLevel = 0;
        }
        else {
            this._currentLevel++;
        }
        this.StorageState();
        this.LoadGameScene(this._currentLevel);
    };
    GameMgr.prototype.GetRdSeed = function (seed) {
        seed = (seed * 9301 + 49297) % 233280;
        return seed / (233280.0);
    };
    GameMgr._instance = null;
    return GameMgr;
}(Laya.Script));
exports.default = GameMgr;
},{"../CachedWXBannerAd":3,"../Event/EventDef":5,"../Event/EventMgr":6,"../MaiLiangAPI/MaiLiang":8,"../Net/HttpUnit":17,"../User/User":31,"../WXAPI":39,"../script/GameLogic/ColliderManager":41,"../script/GameLogic/PlayerController":44,"../script/GameLogic/SkinMgr":45,"./StorageMgr":12,"./ViewMgr":14,"./WudianMgr":15}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var StorageMgr_1 = require("./StorageMgr");
/**
 * 7天签到的数据类，用于保存签到数据
 *
 * @export
 * @class SignInData
 */
var SignInData = /** @class */ (function () {
    function SignInData(firstDay, dayPeriod) {
        this.SignInDays = [false, false, false, false, false, false, false]; //这7天的签到状态
        this.FirstDay = firstDay;
        this.DayPeriod = dayPeriod != null ? dayPeriod : 7;
    }
    return SignInData;
}());
exports.SignInData = SignInData;
/**
 * 签到管理器类
 * 签到内部的时间(天数)数据都统一成一年当中的某天，是一个number值
 * 例如类中CurrentSignInDay属性返回值就是“当前7天签到周期的第一天是今天的哪一天”
 * @export
 * @class SignMgr
 */
var SignMgr = /** @class */ (function () {
    function SignMgr() {
    }
    Object.defineProperty(SignMgr, "Instance", {
        get: function () {
            if (this._instance == null) {
                this._instance = new SignMgr();
            }
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SignMgr.prototype, "SignInData", {
        /**
         * 签到数据
         *
         * @readonly
         * @type {SignInData}
         * @memberof SignMgr
         */
        get: function () {
            if (this._signInData == null) {
                this.GetStorageData();
            }
            return this._signInData;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 获得签到数据,内部有对数据是否合法的判断
     *
     * @memberof SignInView
     */
    SignMgr.prototype.GetStorageData = function () {
        var datastring = StorageMgr_1.default.getStorage("SignData");
        var tempdata = null;
        if (datastring == null || datastring == "") {
            this._signInData = new SignInData(SignMgr.GetDayOfYear());
            this.SetStorageData();
        }
        else {
            try {
                this._signInData = JSON.parse(datastring);
                if (!this.IsDataValid(this._signInData)) {
                    this._signInData = new SignInData(SignMgr.GetDayOfYear());
                    this.SetStorageData();
                }
            }
            catch (error) {
                this._signInData = new SignInData(SignMgr.GetDayOfYear());
                this.SetStorageData();
            }
        }
    };
    /**
     * 保存签到数据
     *
     * @memberof SignInView
     */
    SignMgr.prototype.SetStorageData = function () {
        var signData = new StorageMgr_1.StorageReq();
        signData.key = "SignData";
        if (this._signInData == null) {
            this._signInData = new SignInData(SignMgr.GetDayOfYear());
        }
        signData.data = this._signInData;
        StorageMgr_1.default.setStorage(signData);
    };
    /**
     * 得到某天是一年中的第几天，如果不传入值就默认指的是今天
     *
     * @param {Date} [date]
     * @returns {number}
     * @memberof SignMgr
     */
    SignMgr.GetDayOfYear = function (date) {
        if (date == null) {
            date = new Date();
        }
        // 每个月份的天数 1   2   3   4   5   6   7   8   9   10  11  12
        var monthDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
        var year = date.getFullYear();
        if (year % 100 == 0 && year % 400 == 0) {
            monthDays[1] = 29;
        }
        else if (year % 100 != 0 && year % 4 == 0) {
            monthDays[1] = 29;
        }
        var month = date.getMonth();
        var day = date.getDate();
        var dayOfyear = day;
        for (var index = 0; index < month; index++) {
            var element = monthDays[index];
            dayOfyear += element;
        }
        return dayOfyear;
    };
    Object.defineProperty(SignMgr.prototype, "IsSignInToday", {
        /**
         * 今天是否已经签到了
         *
         * @readonly
         * @type {boolean}
         * @memberof SignMgr
         */
        get: function () {
            return this.SignInData.SignInDays[this.DayInPeriod] == true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SignMgr.prototype, "DayInPeriod", {
        /**
         * 得到今天是属于签到周期的哪一天，注意可能会超出范围
         *
         * @readonly
         * @type {number}
         * @memberof SignMgr
         */
        get: function () {
            return SignMgr.GetDayOfYear() - this.SignInData.FirstDay;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 签到,传入
     *
     * @memberof SignMgr
     */
    SignMgr.prototype.SignIn = function (day) {
        var tempday = this.DayInPeriod;
        if (day) {
            tempday = day;
        }
        this.SignInData.SignInDays[this.DayInPeriod] = true;
        this.SetStorageData();
    };
    Object.defineProperty(SignMgr.prototype, "DayOutRang", {
        /**
         * 今天是否还在上一个签到周期内,还是开始新的一个周期
         *
         * @readonly
         * @type {boolean}
         * @memberof SignMgr
         */
        get: function () {
            var day = SignMgr.GetDayOfYear() - this.SignInData.FirstDay;
            return this.SignInData.SignInDays.length <= day + 1;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 数据是否有效
     *
     * @returns {boolean}
     * @memberof SignMgr
     */
    SignMgr.prototype.IsDataValid = function (signData) {
        if (signData.DayPeriod == null || signData.DayPeriod < 0 || signData.DayPeriod > 365) {
            return false;
        }
        if (signData.FirstDay == null || signData.FirstDay < 0 || signData.FirstDay > 365) {
            return false;
        }
        if (signData.SignInDays == null || signData.SignInDays[0] == null || signData.SignInDays.length != signData.DayPeriod) {
            return false;
        }
        var day = SignMgr.GetDayOfYear() - signData.FirstDay;
        if (day < 0 || day + 1 > signData.DayPeriod) {
            return false;
        }
        return true;
    };
    return SignMgr;
}());
exports.default = SignMgr;
},{"./StorageMgr":12}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var StorageReq = /** @class */ (function () {
    function StorageReq() {
        this.key = null;
        this.data = {};
        this.success = null;
        this.fail = null;
        this.complete = null;
    }
    return StorageReq;
}());
exports.StorageReq = StorageReq;
//数据本地持久化保存
var StorageMgr = /** @class */ (function () {
    function StorageMgr() {
    }
    StorageMgr.setStorage = function (req) {
        var dataStr = JSON.stringify(req.data);
        if (!Laya.Browser.onMiniGame) {
            localStorage.setItem(req.key, dataStr);
            return;
        }
        wx.setStorage({
            key: req.key,
            data: dataStr,
            success: req.success,
            fail: req.fail,
            complete: req.complete
        });
    };
    StorageMgr.getStorage = function (key) {
        var value = null;
        try {
            if (!Laya.Browser.onMiniGame) {
                value = localStorage.getItem(key);
            }
            else {
                value = wx.getStorageSync(key);
            }
        }
        catch (e) {
        }
        return value;
    };
    return StorageMgr;
}());
exports.default = StorageMgr;
},{}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var VibrateMgr = /** @class */ (function () {
    function VibrateMgr() {
    }
    //短震动
    VibrateMgr.vibrateShort = function () {
        if (!VibrateMgr.isEnable)
            return;
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window["wx"].vibrateShort();
        }
        else if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].vibrateShort();
        }
        else if (Laya.Browser.onQQMiniGame) { //qq小游戏
            Laya.Browser.window["qq"].vibrateShort();
        }
    };
    //长震动
    VibrateMgr.ibrateLong = function () {
        if (!VibrateMgr.isEnable)
            return;
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window["wx"].vibrateLong();
        }
        else if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].vibrateLong();
        }
        else if (Laya.Browser.onQQMiniGame) { //qq小游戏
            Laya.Browser.window["qq"].vibrateLong();
        }
    };
    //定时震动,毫秒
    VibrateMgr.vibrate = function (time) {
        if (!VibrateMgr.isEnable)
            return;
        if (Laya.Browser.onMiniGame) {
            var count_1 = time / 15; //微信小游戏中震动的时间是15毫秒的整数倍时间，本质是对短震动的封装
            var index_1 = 0;
            var obj_1 = { count: count_1, index: index_1 };
            Laya.timer.loop(16, obj_1, function () {
                VibrateMgr.vibrateShort();
                index_1++;
                if (index_1 > count_1) {
                    Laya.timer.clearAll(obj_1);
                }
            });
        }
        else if (Laya.Browser.onQGMiniGame) {
            var count_2 = time / 20; //OPPO小游戏中震动的时间是20毫秒的整数倍时间，本质是对短震动的封装
            var index_2 = 0;
            var obj_2 = { count: count_2, index: index_2 };
            Laya.timer.loop(21, obj_2, function () {
                VibrateMgr.vibrateShort();
                index_2++;
                if (index_2 > count_2) {
                    Laya.timer.clearAll(obj_2);
                }
            });
        }
        else if (Laya.Browser.onQQMiniGame) //qq小游戏
         {
            var count_3 = time / 20; //OPPO小游戏中震动的时间是20毫秒的整数倍时间，本质是对短震动的封装
            var index_3 = 0;
            var obj_3 = { count: count_3, index: index_3 };
            Laya.timer.loop(21, obj_3, function () {
                VibrateMgr.vibrateShort();
                index_3++;
                if (index_3 > count_3) {
                    Laya.timer.clearAll(obj_3);
                }
            });
        }
    };
    VibrateMgr.isEnable = true;
    return VibrateMgr;
}());
exports.default = VibrateMgr;
},{}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewDef;
(function (ViewDef) {
    ViewDef["None"] = "";
    ViewDef["TipsView"] = "View/TipsView.json";
    ViewDef["ClickGetPrize"] = "View/ClickGetPrize.json";
    //todo:添加你的界面
    ViewDef["UnlockSkin"] = "View/UnlockSkin.json";
    ViewDef["UnlockSkinSuccess"] = "View/UnlockSkinSuccess.json";
    ViewDef["SkipSuccess"] = "View/SkipSuccess.json";
    ViewDef["PrizeDraw"] = "View/PrizeDraw.json";
    ViewDef["GetUnlockSkin"] = "View/GetUnlockSkin.json";
    ViewDef["SignIn"] = "View/SignIn.json";
    ViewDef["FriendInvite"] = "View/FriendInvite.json";
    ViewDef["GamePlaying"] = "View/GamePlaying.json";
    ViewDef["GameOver"] = "View/GameOver.json";
    ViewDef["MoreGame"] = "View/MoreGame.json";
    ViewDef["GameMain"] = "View/GameMain.json";
    ViewDef["Advertisement"] = "View/Advertisement.json";
})(ViewDef = exports.ViewDef || (exports.ViewDef = {}));
//界面管理器
var ViewMgr = /** @class */ (function () {
    function ViewMgr() {
        this._views = {};
    }
    ViewMgr.prototype.openView = function (viewType, data, oncomplate) {
        if (this._views[viewType]) {
            var view = this._views[viewType];
            var coms = view._components;
            var viewBase = null;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        viewBase = element;
                        viewBase.openView(data);
                        break;
                    }
                }
            }
            if (oncomplate) {
                oncomplate(viewBase);
            }
            return;
        }
        var viewUrl = String(viewType);
        var self = this;
        Laya.Scene.load(viewUrl, Laya.Handler.create(this, function (owner) {
            Laya.stage.addChild(owner);
            var view = owner;
            self._views[viewType] = view;
            var coms = owner._components;
            var viewBase = null;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        viewBase = element;
                        element._viewDef = viewType;
                        viewBase.openView(data);
                        break;
                    }
                }
            }
            if (oncomplate) {
                oncomplate(viewBase);
            }
        }));
    };
    ViewMgr.prototype.closeView = function (viewType) {
        var view = this._views[viewType];
        if (view) {
            var owner = view;
            var coms = owner._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.onClose();
                        break;
                    }
                }
            }
            view.removeSelf();
            view.destroy();
            this._views[viewType] = null;
        }
    };
    ViewMgr.prototype.ShowView = function (viewType) {
        var view = this._views[viewType];
        if (view) {
            var coms = view._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.show();
                        break;
                    }
                }
            }
        }
    };
    ViewMgr.prototype.hideView = function (viewType) {
        var view = this._views[viewType];
        if (view) {
            var coms = view._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.hide();
                        break;
                    }
                }
            }
        }
    };
    ViewMgr.prototype.getView = function (viewType) {
        return this._views[viewType];
    };
    ViewMgr.prototype.showTips = function (msg) {
        this.openView(ViewDef.TipsView, msg);
    };
    ViewMgr.instance = new ViewMgr();
    return ViewMgr;
}());
exports.default = ViewMgr;
},{}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("../Net/HttpUnit");
var AppSwitchConfig_1 = require("../Config/AppSwitchConfig");
var WXAPI_1 = require("../WXAPI");
var WudianMgr = /** @class */ (function () {
    function WudianMgr() {
    }
    WudianMgr.IpBlockFlag = function () {
        return this._ipBlockFlag;
    };
    /**
     * 此方法调用很慢，所以要在游戏初始化的时候调用一次此方法
     *
     * @static
     * @memberof WudianMgr
     */
    WudianMgr.UpdateIpBlockState = function () {
        HttpUnit_1.default.GetIpBlock(function (res) {
            console.log("调用IpBlock接口成功,结果为:", res);
            WudianMgr._ipBlockFlag = res.code;
        }, null);
    };
    /**
     * IP是否被屏蔽
     *
     * @static
     * @returns {boolean}
     * @memberof WudianMgr
     */
    WudianMgr.GetIpBlocked = function () {
        return this._ipBlockFlag == 0;
    };
    /**
     * 得到用户进入的场景值
     *
     * @static
     * @returns {number}
     * @memberof WudianMgr
     */
    WudianMgr.GetEntryScene = function () {
        return WXAPI_1.default.getLaunchOptionsSync().scene == 1006;
    };
    /**
     * 误点开关是否打开，包括了总开关和分时开关
     *
     * @static
     * @returns {boolean}
     * @memberof WudianMgr
     */
    WudianMgr.IsSwitchOpen = function () {
        var mainSwitch = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudian == 1;
        var isOpenTime = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudianTimeAvaliable;
        console.log("误点Flag状态: ", "总开关:", mainSwitch, "打开时间", isOpenTime);
        return mainSwitch && isOpenTime;
    };
    Object.defineProperty(WudianMgr, "WudianFlag", {
        /**
         * 完全封装好的误点Flag
         *
         * @readonly
         * @static
         * @type {boolean}
         * @memberof WudianMgr
         */
        get: function () {
            var mainSwitch = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudian == 1;
            var launchScene = WXAPI_1.default.getLaunchOptionsSync().scene;
            var noEnterBySearch = true;
            var wudianSceneList = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudianSceneList;
            for (var i = 0; i < wudianSceneList.length; ++i) {
                var wudianSceneValue = wudianSceneList[i];
                if (launchScene == wudianSceneValue) {
                    noEnterBySearch = false;
                }
            }
            /* let isOpenTime = AppSwitchConfig.getInstance().getAppSwitchData().wudianTimeAvaliable; */
            var ipnotBlock = this._ipBlockFlag == 0;
            console.log("误点Flag状态: ", "总开关:", mainSwitch, "场景进入", noEnterBySearch, "IP未被屏蔽", ipnotBlock /* , "打开时间",
                isOpenTime */);
            return mainSwitch && noEnterBySearch && ipnotBlock /* && isOpenTime */;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WudianMgr, "NoTimeWudianFlag", {
        /**
         * 没有涉及到定时开关的wudianFlag,自行整合按照时间开关的效果
         *
         * @static
         * @returns {boolean}
         * @memberof WudianMgr
         */
        get: function () {
            var mainSwitch = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudian == 1;
            var launchScene = WXAPI_1.default.getLaunchOptionsSync().scene;
            var noEnterBySearch = true;
            var wudianSceneList = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudianSceneList;
            for (var i = 0; i < wudianSceneList.length; ++i) {
                var wudianSceneValue = wudianSceneList[i];
                if (launchScene == wudianSceneValue) {
                    noEnterBySearch = false;
                }
            }
            var ipnotBlock = this._ipBlockFlag == 0;
            console.log("误点Flag状态: ", "总开关:", mainSwitch, "场景进入", noEnterBySearch, "IP未被屏蔽");
            return mainSwitch && noEnterBySearch && ipnotBlock;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WudianMgr, "FirstWudianFlag", {
        get: function () {
            var mainSwitch = WudianMgr.WudianFlag;
            var secondSwitch = AppSwitchConfig_1.default.getInstance().getAppSwitchData().firstWudian == 1;
            console.log("FirstWudianFlag状态:", mainSwitch && secondSwitch, ",WudianFlag开关:", mainSwitch, ",分开关:", secondSwitch);
            return mainSwitch && secondSwitch;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WudianMgr, "SecondWudianFlag", {
        get: function () {
            var mainSwitch = WudianMgr.WudianFlag;
            var secondSwitch = AppSwitchConfig_1.default.getInstance().getAppSwitchData().secondWudian == 1;
            console.log("SecondWudianFlag状态:", mainSwitch && secondSwitch, ",WudianFlag开关:", mainSwitch, ",分开关:", secondSwitch);
            return mainSwitch && secondSwitch;
        },
        enumerable: true,
        configurable: true
    });
    WudianMgr._ipBlockFlag = -1;
    return WudianMgr;
}());
exports.default = WudianMgr;
},{"../Config/AppSwitchConfig":4,"../Net/HttpUnit":17,"../WXAPI":39}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CryptoJS = require("./aes.js");
var AesTools = /** @class */ (function () {
    function AesTools() {
    }
    //加密
    AesTools.encrypt = function (str) {
        var key = CryptoJS.enc.Utf8.parse(AesTools.KEY); // 秘钥
        var iv = CryptoJS.enc.Utf8.parse(AesTools.IV); //向量iv
        var encrypted = CryptoJS.AES.encrypt(str, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
        return encrypted.toString();
    };
    //解密
    AesTools.decrypt = function (str) {
        var key = CryptoJS.enc.Utf8.parse(AesTools.KEY); // 秘钥
        var iv = CryptoJS.enc.Utf8.parse(AesTools.IV); //向量iv
        var decrypted = CryptoJS.AES.decrypt(str, key, { iv: iv, padding: CryptoJS.pad.Pkcs7 });
        return decrypted.toString(CryptoJS.enc.Utf8);
    };
    AesTools.KEY = 'b#63fFJ6AvkK3YT*';
    AesTools.IV = 'J$f4DU%sNL73M&Go';
    return AesTools;
}());
exports.default = AesTools;
},{"./aes.js":19}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NetConfig_1 = require("./NetConfig");
var User_1 = require("../User/User");
var AesTools_1 = require("./AesTools");
var AppConfig_1 = require("../AppConfig");
var requestData = /** @class */ (function () {
    function requestData() {
        this.meth = "post";
        this.url = "";
        this.onSuccess = null;
        this.onFail = null;
        this.data = {};
    }
    return requestData;
}());
exports.requestData = requestData;
var HttpUnit = /** @class */ (function () {
    function HttpUnit() {
    }
    HttpUnit.request = function (req) {
        if (req.url.indexOf("https://") > -1 ||
            req.url.indexOf("http://") > -1) {
            req.url = req.url;
        }
        else {
            req.url = NetConfig_1.default.serverUrl + req.url;
        }
        var completeFunc = function (res) {
            console.log(res, "http Success");
            if (req.onSuccess) {
                req.onSuccess(res);
            }
            req.onSuccess = null;
            req = null;
        };
        var errorFunc = function (res) {
            console.log(res, "http fail");
            if (req.onFail) {
                req.onFail(res);
            }
            req.onFail = null;
            req = null;
        };
        var xhr = new Laya.HttpRequest();
        xhr.once(Laya.Event.COMPLETE, this, completeFunc);
        xhr.once(Laya.Event.ERROR, this, errorFunc);
        var dataStr = JSON.stringify(req.data);
        if (Laya.Browser.onMiniGame || AppConfig_1.default.onTTMiniGame) {
            req.data.code = User_1.default.code;
        }
        else if (Laya.Browser.onQGMiniGame) //OPPO小游戏
         {
            req.data.oppotoken = User_1.default.code;
        }
        else if (Laya.Browser.onQQMiniGame) //qq小游戏
         {
            req.data.code = User_1.default.code;
        }
        else {
            req.data.code = User_1.default.code;
        }
        var time = "time=" + String(Date.now());
        var header = [
            "Content-Type", "application/json",
            "state", NetConfig_1.default.state,
            "gameid", NetConfig_1.default.gameid,
            "sign", AesTools_1.default.encrypt(time),
        ];
        if (User_1.default.token) {
            header.push("token");
            header.push(User_1.default.token);
        }
        xhr.send(req.url, JSON.stringify(req.data), req.meth, "json", header);
    };
    //todo:这里添加你们和服务器相互的接口
    HttpUnit.login = function (onSuccess, onFail) {
        var req = new requestData();
        req.url = NetConfig_1.default.Login;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit.request(req);
    };
    HttpUnit.saveGameData = function (gameData, onSuccess, onFail) {
        var req = new requestData();
        req.url = NetConfig_1.default.SaveGameData;
        req.data.gameData = gameData;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit.request(req);
    };
    HttpUnit.getGameData = function (onSuccess, onFail) {
        var req = new requestData();
        req.url = NetConfig_1.default.GetUser;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit.request(req);
    };
    /**
     * IP屏蔽方法，需要在NetConfig类中设置IpBlock的接口地址
     * onSuccess方法返回参数的范例为 Object {code: 0, msg: "准一线", time: "1571034447", data: null}
     * @static
     * @memberof HttpUnit
     */
    HttpUnit.GetIpBlock = function (onSuccess, onFail) {
        if (-1 != NetConfig_1.default.gameid) {
            var req = new requestData();
            req.url = NetConfig_1.default.IpBlock;
            req.onSuccess = onSuccess;
            req.onFail = onFail;
            HttpUnit.request(req);
        }
    };
    HttpUnit.reportExport = function (appid, game_name, onSuccess, onFail) {
        var req = new requestData();
        req.url = NetConfig_1.default.reportExport;
        req.data.wbappid = appid;
        req.data.game_name = game_name;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit.request(req);
    };
    HttpUnit.reportImport = function (appid, channel, onSuccess, onFail) {
        var req = new requestData();
        req.url = NetConfig_1.default.reportImport;
        req.data.wbappid = appid;
        req.data.channel = channel;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit.request(req);
    };
    return HttpUnit;
}());
exports.default = HttpUnit;
},{"../AppConfig":2,"../User/User":31,"./AesTools":16,"./NetConfig":18}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NetConfig = /** @class */ (function () {
    function NetConfig() {
    }
    NetConfig.state = 0;
    NetConfig.gameid = 10;
    NetConfig.serverUrl = "https://sysxue.5iape.com";
    NetConfig.Login = "/api/login/login/wxclogin";
    NetConfig.SaveGameData = "";
    NetConfig.GetUser = "";
    /* 用来对IP地址进行屏蔽的接口地址，可以使用接口的返回值让某些广告逻辑在微信的审核地区(广州)发生变化 */
    NetConfig.IpBlock = "https://sysxue.5iape.com/api/share/ip_select";
    NetConfig.reportExport = "/api/share/getwaibuad";
    NetConfig.reportImport = "/api/share/getzjadml";
    return NetConfig;
}());
exports.default = NetConfig;
},{}],19:[function(require,module,exports){
var CryptoJS = CryptoJS || function (u, p) {
  var d = {}, l = d.lib = {}, s = function () { }, t = l.Base = { extend: function (a) { s.prototype = this; var c = new s; a && c.mixIn(a); c.hasOwnProperty("init") || (c.init = function () { c.$super.init.apply(this, arguments) }); c.init.prototype = c; c.$super = this; return c }, create: function () { var a = this.extend(); a.init.apply(a, arguments); return a }, init: function () { }, mixIn: function (a) { for (var c in a) a.hasOwnProperty(c) && (this[c] = a[c]); a.hasOwnProperty("toString") && (this.toString = a.toString) }, clone: function () { return this.init.prototype.extend(this) } },
  r = l.WordArray = t.extend({
    init: function (a, c) { a = this.words = a || []; this.sigBytes = c != p ? c : 4 * a.length }, toString: function (a) { return (a || v).stringify(this) }, concat: function (a) { var c = this.words, e = a.words, j = this.sigBytes; a = a.sigBytes; this.clamp(); if (j % 4) for (var k = 0; k < a; k++)c[j + k >>> 2] |= (e[k >>> 2] >>> 24 - 8 * (k % 4) & 255) << 24 - 8 * ((j + k) % 4); else if (65535 < e.length) for (k = 0; k < a; k += 4)c[j + k >>> 2] = e[k >>> 2]; else c.push.apply(c, e); this.sigBytes += a; return this }, clamp: function () {
      var a = this.words, c = this.sigBytes; a[c >>> 2] &= 4294967295 <<
        32 - 8 * (c % 4); a.length = u.ceil(c / 4)
    }, clone: function () { var a = t.clone.call(this); a.words = this.words.slice(0); return a }, random: function (a) { for (var c = [], e = 0; e < a; e += 4)c.push(4294967296 * u.random() | 0); return new r.init(c, a) }
  }), w = d.enc = {}, v = w.Hex = {
    stringify: function (a) { var c = a.words; a = a.sigBytes; for (var e = [], j = 0; j < a; j++) { var k = c[j >>> 2] >>> 24 - 8 * (j % 4) & 255; e.push((k >>> 4).toString(16)); e.push((k & 15).toString(16)) } return e.join("") }, parse: function (a) {
      for (var c = a.length, e = [], j = 0; j < c; j += 2)e[j >>> 3] |= parseInt(a.substr(j,
        2), 16) << 24 - 4 * (j % 8); return new r.init(e, c / 2)
    }
  }, b = w.Latin1 = { stringify: function (a) { var c = a.words; a = a.sigBytes; for (var e = [], j = 0; j < a; j++)e.push(String.fromCharCode(c[j >>> 2] >>> 24 - 8 * (j % 4) & 255)); return e.join("") }, parse: function (a) { for (var c = a.length, e = [], j = 0; j < c; j++)e[j >>> 2] |= (a.charCodeAt(j) & 255) << 24 - 8 * (j % 4); return new r.init(e, c) } }, x = w.Utf8 = { stringify: function (a) { try { return decodeURIComponent(escape(b.stringify(a))) } catch (c) { throw Error("Malformed UTF-8 data"); } }, parse: function (a) { return b.parse(unescape(encodeURIComponent(a))) } },
  q = l.BufferedBlockAlgorithm = t.extend({
    reset: function () { this._data = new r.init; this._nDataBytes = 0 }, _append: function (a) { "string" == typeof a && (a = x.parse(a)); this._data.concat(a); this._nDataBytes += a.sigBytes }, _process: function (a) { var c = this._data, e = c.words, j = c.sigBytes, k = this.blockSize, b = j / (4 * k), b = a ? u.ceil(b) : u.max((b | 0) - this._minBufferSize, 0); a = b * k; j = u.min(4 * a, j); if (a) { for (var q = 0; q < a; q += k)this._doProcessBlock(e, q); q = e.splice(0, a); c.sigBytes -= j } return new r.init(q, j) }, clone: function () {
      var a = t.clone.call(this);
      a._data = this._data.clone(); return a
    }, _minBufferSize: 0
  }); l.Hasher = q.extend({
    cfg: t.extend(), init: function (a) { this.cfg = this.cfg.extend(a); this.reset() }, reset: function () { q.reset.call(this); this._doReset() }, update: function (a) { this._append(a); this._process(); return this }, finalize: function (a) { a && this._append(a); return this._doFinalize() }, blockSize: 16, _createHelper: function (a) { return function (b, e) { return (new a.init(e)).finalize(b) } }, _createHmacHelper: function (a) {
      return function (b, e) {
        return (new n.HMAC.init(a,
          e)).finalize(b)
      }
    }
  }); var n = d.algo = {}; return d
}(Math);
(function () {
  var u = CryptoJS, p = u.lib.WordArray; u.enc.Base64 = {
    stringify: function (d) { var l = d.words, p = d.sigBytes, t = this._map; d.clamp(); d = []; for (var r = 0; r < p; r += 3)for (var w = (l[r >>> 2] >>> 24 - 8 * (r % 4) & 255) << 16 | (l[r + 1 >>> 2] >>> 24 - 8 * ((r + 1) % 4) & 255) << 8 | l[r + 2 >>> 2] >>> 24 - 8 * ((r + 2) % 4) & 255, v = 0; 4 > v && r + 0.75 * v < p; v++)d.push(t.charAt(w >>> 6 * (3 - v) & 63)); if (l = t.charAt(64)) for (; d.length % 4;)d.push(l); return d.join("") }, parse: function (d) {
      var l = d.length, s = this._map, t = s.charAt(64); t && (t = d.indexOf(t), -1 != t && (l = t)); for (var t = [], r = 0, w = 0; w <
        l; w++)if (w % 4) { var v = s.indexOf(d.charAt(w - 1)) << 2 * (w % 4), b = s.indexOf(d.charAt(w)) >>> 6 - 2 * (w % 4); t[r >>> 2] |= (v | b) << 24 - 8 * (r % 4); r++ } return p.create(t, r)
    }, _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
  }
})();
(function (u) {
  function p(b, n, a, c, e, j, k) { b = b + (n & a | ~n & c) + e + k; return (b << j | b >>> 32 - j) + n } function d(b, n, a, c, e, j, k) { b = b + (n & c | a & ~c) + e + k; return (b << j | b >>> 32 - j) + n } function l(b, n, a, c, e, j, k) { b = b + (n ^ a ^ c) + e + k; return (b << j | b >>> 32 - j) + n } function s(b, n, a, c, e, j, k) { b = b + (a ^ (n | ~c)) + e + k; return (b << j | b >>> 32 - j) + n } for (var t = CryptoJS, r = t.lib, w = r.WordArray, v = r.Hasher, r = t.algo, b = [], x = 0; 64 > x; x++)b[x] = 4294967296 * u.abs(u.sin(x + 1)) | 0; r = r.MD5 = v.extend({
    _doReset: function () { this._hash = new w.init([1732584193, 4023233417, 2562383102, 271733878]) },
    _doProcessBlock: function (q, n) {
      for (var a = 0; 16 > a; a++) { var c = n + a, e = q[c]; q[c] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360 } var a = this._hash.words, c = q[n + 0], e = q[n + 1], j = q[n + 2], k = q[n + 3], z = q[n + 4], r = q[n + 5], t = q[n + 6], w = q[n + 7], v = q[n + 8], A = q[n + 9], B = q[n + 10], C = q[n + 11], u = q[n + 12], D = q[n + 13], E = q[n + 14], x = q[n + 15], f = a[0], m = a[1], g = a[2], h = a[3], f = p(f, m, g, h, c, 7, b[0]), h = p(h, f, m, g, e, 12, b[1]), g = p(g, h, f, m, j, 17, b[2]), m = p(m, g, h, f, k, 22, b[3]), f = p(f, m, g, h, z, 7, b[4]), h = p(h, f, m, g, r, 12, b[5]), g = p(g, h, f, m, t, 17, b[6]), m = p(m, g, h, f, w, 22, b[7]),
        f = p(f, m, g, h, v, 7, b[8]), h = p(h, f, m, g, A, 12, b[9]), g = p(g, h, f, m, B, 17, b[10]), m = p(m, g, h, f, C, 22, b[11]), f = p(f, m, g, h, u, 7, b[12]), h = p(h, f, m, g, D, 12, b[13]), g = p(g, h, f, m, E, 17, b[14]), m = p(m, g, h, f, x, 22, b[15]), f = d(f, m, g, h, e, 5, b[16]), h = d(h, f, m, g, t, 9, b[17]), g = d(g, h, f, m, C, 14, b[18]), m = d(m, g, h, f, c, 20, b[19]), f = d(f, m, g, h, r, 5, b[20]), h = d(h, f, m, g, B, 9, b[21]), g = d(g, h, f, m, x, 14, b[22]), m = d(m, g, h, f, z, 20, b[23]), f = d(f, m, g, h, A, 5, b[24]), h = d(h, f, m, g, E, 9, b[25]), g = d(g, h, f, m, k, 14, b[26]), m = d(m, g, h, f, v, 20, b[27]), f = d(f, m, g, h, D, 5, b[28]), h = d(h, f,
          m, g, j, 9, b[29]), g = d(g, h, f, m, w, 14, b[30]), m = d(m, g, h, f, u, 20, b[31]), f = l(f, m, g, h, r, 4, b[32]), h = l(h, f, m, g, v, 11, b[33]), g = l(g, h, f, m, C, 16, b[34]), m = l(m, g, h, f, E, 23, b[35]), f = l(f, m, g, h, e, 4, b[36]), h = l(h, f, m, g, z, 11, b[37]), g = l(g, h, f, m, w, 16, b[38]), m = l(m, g, h, f, B, 23, b[39]), f = l(f, m, g, h, D, 4, b[40]), h = l(h, f, m, g, c, 11, b[41]), g = l(g, h, f, m, k, 16, b[42]), m = l(m, g, h, f, t, 23, b[43]), f = l(f, m, g, h, A, 4, b[44]), h = l(h, f, m, g, u, 11, b[45]), g = l(g, h, f, m, x, 16, b[46]), m = l(m, g, h, f, j, 23, b[47]), f = s(f, m, g, h, c, 6, b[48]), h = s(h, f, m, g, w, 10, b[49]), g = s(g, h, f, m,
            E, 15, b[50]), m = s(m, g, h, f, r, 21, b[51]), f = s(f, m, g, h, u, 6, b[52]), h = s(h, f, m, g, k, 10, b[53]), g = s(g, h, f, m, B, 15, b[54]), m = s(m, g, h, f, e, 21, b[55]), f = s(f, m, g, h, v, 6, b[56]), h = s(h, f, m, g, x, 10, b[57]), g = s(g, h, f, m, t, 15, b[58]), m = s(m, g, h, f, D, 21, b[59]), f = s(f, m, g, h, z, 6, b[60]), h = s(h, f, m, g, C, 10, b[61]), g = s(g, h, f, m, j, 15, b[62]), m = s(m, g, h, f, A, 21, b[63]); a[0] = a[0] + f | 0; a[1] = a[1] + m | 0; a[2] = a[2] + g | 0; a[3] = a[3] + h | 0
    }, _doFinalize: function () {
      var b = this._data, n = b.words, a = 8 * this._nDataBytes, c = 8 * b.sigBytes; n[c >>> 5] |= 128 << 24 - c % 32; var e = u.floor(a /
        4294967296); n[(c + 64 >>> 9 << 4) + 15] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360; n[(c + 64 >>> 9 << 4) + 14] = (a << 8 | a >>> 24) & 16711935 | (a << 24 | a >>> 8) & 4278255360; b.sigBytes = 4 * (n.length + 1); this._process(); b = this._hash; n = b.words; for (a = 0; 4 > a; a++)c = n[a], n[a] = (c << 8 | c >>> 24) & 16711935 | (c << 24 | c >>> 8) & 4278255360; return b
    }, clone: function () { var b = v.clone.call(this); b._hash = this._hash.clone(); return b }
  }); t.MD5 = v._createHelper(r); t.HmacMD5 = v._createHmacHelper(r)
})(Math);
(function () {
  var u = CryptoJS, p = u.lib, d = p.Base, l = p.WordArray, p = u.algo, s = p.EvpKDF = d.extend({ cfg: d.extend({ keySize: 4, hasher: p.MD5, iterations: 1 }), init: function (d) { this.cfg = this.cfg.extend(d) }, compute: function (d, r) { for (var p = this.cfg, s = p.hasher.create(), b = l.create(), u = b.words, q = p.keySize, p = p.iterations; u.length < q;) { n && s.update(n); var n = s.update(d).finalize(r); s.reset(); for (var a = 1; a < p; a++)n = s.finalize(n), s.reset(); b.concat(n) } b.sigBytes = 4 * q; return b } }); u.EvpKDF = function (d, l, p) {
    return s.create(p).compute(d,
      l)
  }
})();
CryptoJS.lib.Cipher || function (u) {
  var p = CryptoJS, d = p.lib, l = d.Base, s = d.WordArray, t = d.BufferedBlockAlgorithm, r = p.enc.Base64, w = p.algo.EvpKDF, v = d.Cipher = t.extend({
    cfg: l.extend(), createEncryptor: function (e, a) { return this.create(this._ENC_XFORM_MODE, e, a) }, createDecryptor: function (e, a) { return this.create(this._DEC_XFORM_MODE, e, a) }, init: function (e, a, b) { this.cfg = this.cfg.extend(b); this._xformMode = e; this._key = a; this.reset() }, reset: function () { t.reset.call(this); this._doReset() }, process: function (e) { this._append(e); return this._process() },
    finalize: function (e) { e && this._append(e); return this._doFinalize() }, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: function (e) { return { encrypt: function (b, k, d) { return ("string" == typeof k ? c : a).encrypt(e, b, k, d) }, decrypt: function (b, k, d) { return ("string" == typeof k ? c : a).decrypt(e, b, k, d) } } }
  }); d.StreamCipher = v.extend({ _doFinalize: function () { return this._process(!0) }, blockSize: 1 }); var b = p.mode = {}, x = function (e, a, b) {
    var c = this._iv; c ? this._iv = u : c = this._prevBlock; for (var d = 0; d < b; d++)e[a + d] ^=
      c[d]
  }, q = (d.BlockCipherMode = l.extend({ createEncryptor: function (e, a) { return this.Encryptor.create(e, a) }, createDecryptor: function (e, a) { return this.Decryptor.create(e, a) }, init: function (e, a) { this._cipher = e; this._iv = a } })).extend(); q.Encryptor = q.extend({ processBlock: function (e, a) { var b = this._cipher, c = b.blockSize; x.call(this, e, a, c); b.encryptBlock(e, a); this._prevBlock = e.slice(a, a + c) } }); q.Decryptor = q.extend({
    processBlock: function (e, a) {
      var b = this._cipher, c = b.blockSize, d = e.slice(a, a + c); b.decryptBlock(e, a); x.call(this,
        e, a, c); this._prevBlock = d
    }
  }); b = b.CBC = q; q = (p.pad = {}).Pkcs7 = { pad: function (a, b) { for (var c = 4 * b, c = c - a.sigBytes % c, d = c << 24 | c << 16 | c << 8 | c, l = [], n = 0; n < c; n += 4)l.push(d); c = s.create(l, c); a.concat(c) }, unpad: function (a) { a.sigBytes -= a.words[a.sigBytes - 1 >>> 2] & 255 } }; d.BlockCipher = v.extend({
    cfg: v.cfg.extend({ mode: b, padding: q }), reset: function () {
      v.reset.call(this); var a = this.cfg, b = a.iv, a = a.mode; if (this._xformMode == this._ENC_XFORM_MODE) var c = a.createEncryptor; else c = a.createDecryptor, this._minBufferSize = 1; this._mode = c.call(a,
        this, b && b.words)
    }, _doProcessBlock: function (a, b) { this._mode.processBlock(a, b) }, _doFinalize: function () { var a = this.cfg.padding; if (this._xformMode == this._ENC_XFORM_MODE) { a.pad(this._data, this.blockSize); var b = this._process(!0) } else b = this._process(!0), a.unpad(b); return b }, blockSize: 4
  }); var n = d.CipherParams = l.extend({ init: function (a) { this.mixIn(a) }, toString: function (a) { return (a || this.formatter).stringify(this) } }), b = (p.format = {}).OpenSSL = {
    stringify: function (a) {
      var b = a.ciphertext; a = a.salt; return (a ? s.create([1398893684,
        1701076831]).concat(a).concat(b) : b).toString(r)
    }, parse: function (a) { a = r.parse(a); var b = a.words; if (1398893684 == b[0] && 1701076831 == b[1]) { var c = s.create(b.slice(2, 4)); b.splice(0, 4); a.sigBytes -= 16 } return n.create({ ciphertext: a, salt: c }) }
  }, a = d.SerializableCipher = l.extend({
    cfg: l.extend({ format: b }), encrypt: function (a, b, c, d) { d = this.cfg.extend(d); var l = a.createEncryptor(c, d); b = l.finalize(b); l = l.cfg; return n.create({ ciphertext: b, key: c, iv: l.iv, algorithm: a, mode: l.mode, padding: l.padding, blockSize: a.blockSize, formatter: d.format }) },
    decrypt: function (a, b, c, d) { d = this.cfg.extend(d); b = this._parse(b, d.format); return a.createDecryptor(c, d).finalize(b.ciphertext) }, _parse: function (a, b) { return "string" == typeof a ? b.parse(a, this) : a }
  }), p = (p.kdf = {}).OpenSSL = { execute: function (a, b, c, d) { d || (d = s.random(8)); a = w.create({ keySize: b + c }).compute(a, d); c = s.create(a.words.slice(b), 4 * c); a.sigBytes = 4 * b; return n.create({ key: a, iv: c, salt: d }) } }, c = d.PasswordBasedCipher = a.extend({
    cfg: a.cfg.extend({ kdf: p }), encrypt: function (b, c, d, l) {
      l = this.cfg.extend(l); d = l.kdf.execute(d,
        b.keySize, b.ivSize); l.iv = d.iv; b = a.encrypt.call(this, b, c, d.key, l); b.mixIn(d); return b
    }, decrypt: function (b, c, d, l) { l = this.cfg.extend(l); c = this._parse(c, l.format); d = l.kdf.execute(d, b.keySize, b.ivSize, c.salt); l.iv = d.iv; return a.decrypt.call(this, b, c, d.key, l) }
  })
}();
(function () {
  for (var u = CryptoJS, p = u.lib.BlockCipher, d = u.algo, l = [], s = [], t = [], r = [], w = [], v = [], b = [], x = [], q = [], n = [], a = [], c = 0; 256 > c; c++)a[c] = 128 > c ? c << 1 : c << 1 ^ 283; for (var e = 0, j = 0, c = 0; 256 > c; c++) { var k = j ^ j << 1 ^ j << 2 ^ j << 3 ^ j << 4, k = k >>> 8 ^ k & 255 ^ 99; l[e] = k; s[k] = e; var z = a[e], F = a[z], G = a[F], y = 257 * a[k] ^ 16843008 * k; t[e] = y << 24 | y >>> 8; r[e] = y << 16 | y >>> 16; w[e] = y << 8 | y >>> 24; v[e] = y; y = 16843009 * G ^ 65537 * F ^ 257 * z ^ 16843008 * e; b[k] = y << 24 | y >>> 8; x[k] = y << 16 | y >>> 16; q[k] = y << 8 | y >>> 24; n[k] = y; e ? (e = z ^ a[a[a[G ^ z]]], j ^= a[a[j]]) : e = j = 1 } var H = [0, 1, 2, 4, 8,
    16, 32, 64, 128, 27, 54], d = d.AES = p.extend({
      _doReset: function () {
        for (var a = this._key, c = a.words, d = a.sigBytes / 4, a = 4 * ((this._nRounds = d + 6) + 1), e = this._keySchedule = [], j = 0; j < a; j++)if (j < d) e[j] = c[j]; else { var k = e[j - 1]; j % d ? 6 < d && 4 == j % d && (k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255]) : (k = k << 8 | k >>> 24, k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255], k ^= H[j / d | 0] << 24); e[j] = e[j - d] ^ k } c = this._invKeySchedule = []; for (d = 0; d < a; d++)j = a - d, k = d % 4 ? e[j] : e[j - 4], c[d] = 4 > d || 4 >= j ? k : b[l[k >>> 24]] ^ x[l[k >>> 16 & 255]] ^ q[l[k >>>
          8 & 255]] ^ n[l[k & 255]]
      }, encryptBlock: function (a, b) { this._doCryptBlock(a, b, this._keySchedule, t, r, w, v, l) }, decryptBlock: function (a, c) { var d = a[c + 1]; a[c + 1] = a[c + 3]; a[c + 3] = d; this._doCryptBlock(a, c, this._invKeySchedule, b, x, q, n, s); d = a[c + 1]; a[c + 1] = a[c + 3]; a[c + 3] = d }, _doCryptBlock: function (a, b, c, d, e, j, l, f) {
        for (var m = this._nRounds, g = a[b] ^ c[0], h = a[b + 1] ^ c[1], k = a[b + 2] ^ c[2], n = a[b + 3] ^ c[3], p = 4, r = 1; r < m; r++)var q = d[g >>> 24] ^ e[h >>> 16 & 255] ^ j[k >>> 8 & 255] ^ l[n & 255] ^ c[p++], s = d[h >>> 24] ^ e[k >>> 16 & 255] ^ j[n >>> 8 & 255] ^ l[g & 255] ^ c[p++], t =
          d[k >>> 24] ^ e[n >>> 16 & 255] ^ j[g >>> 8 & 255] ^ l[h & 255] ^ c[p++], n = d[n >>> 24] ^ e[g >>> 16 & 255] ^ j[h >>> 8 & 255] ^ l[k & 255] ^ c[p++], g = q, h = s, k = t; q = (f[g >>> 24] << 24 | f[h >>> 16 & 255] << 16 | f[k >>> 8 & 255] << 8 | f[n & 255]) ^ c[p++]; s = (f[h >>> 24] << 24 | f[k >>> 16 & 255] << 16 | f[n >>> 8 & 255] << 8 | f[g & 255]) ^ c[p++]; t = (f[k >>> 24] << 24 | f[n >>> 16 & 255] << 16 | f[g >>> 8 & 255] << 8 | f[h & 255]) ^ c[p++]; n = (f[n >>> 24] << 24 | f[g >>> 16 & 255] << 16 | f[h >>> 8 & 255] << 8 | f[k & 255]) ^ c[p++]; a[b] = q; a[b + 1] = s; a[b + 2] = t; a[b + 3] = n
      }, keySize: 8
    }); u.AES = p._createHelper(d)
})();

module.exports = CryptoJS;
},{}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("./AppConfig");
var HttpUnit_1 = require("./Net/HttpUnit");
var OPPOAPI = /** @class */ (function () {
    function OPPOAPI() {
    }
    Object.defineProperty(OPPOAPI, "BannerInstance", {
        get: function () {
            return this._banner;
        },
        enumerable: true,
        configurable: true
    });
    OPPOAPI.Login = function (onSuccess, onFail) {
        if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].login({
                success: function (res) {
                    var token = res.data.token;
                    onSuccess(token);
                    console.log("OPPO 登陆成功,获取到 token : " + token);
                    for (var key in res) {
                        console.log(key, res[key]);
                    }
                },
                fail: function (res) {
                    console.log("OPPO 登陆失败", res);
                    for (var key in res) {
                        console.log(key, res[key]);
                    }
                }
            });
        }
    };
    OPPOAPI.initAdService = function (onSuccess, onFail, onComplete) {
        Laya.Browser.window["qg"].initAdService({
            appId: AppConfig_1.default.AppID,
            isDebug: false,
            success: function (res) {
                console.log("oppo initAdService success");
                if (onSuccess) {
                    onSuccess(res);
                }
            },
            fail: function (res) {
                console.log("oppo initAdService fail: ", res.code, res.msg);
                if (onFail) {
                    onFail(res);
                }
            },
            complete: function (res) {
                console.log("oppo initAdService complete");
                if (onComplete) {
                    onComplete(res);
                }
            }
        });
    };
    OPPOAPI.showRewardedVideoAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQGMiniGame) {
            var videoAd = Laya.Browser.window["qg"].createRewardedVideoAd({
                posId: OPPOAPI.adUnitId,
            });
            videoAd.onLoad(function () {
                console.log("oppo 视频广告加载完成");
                videoAd.show();
            });
            videoAd.onVideoStart(function () {
                console.log("oppo 视频广告开始播放");
            });
            videoAd.onClose(function (res) {
                if (res.isEnded) {
                    console.log("oppo 视频广告观看 完成");
                    onAdClose(true);
                }
                else {
                    console.log("oppo 视频广告观看 未完成");
                    onAdClose(false);
                }
                videoAd.destroy();
            });
            videoAd.onError(function (err) {
                console.log("oppo 视频广告获取失败", err);
                videoAd.destroy();
                onFailed();
            });
            videoAd.load();
        }
        else {
            onAdClose(true);
        }
    };
    OPPOAPI.navigateToMiniProgram = function (pkgName, gameName, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onQGMiniGame) {
            console.log("OPPO 跳转游戏： " + pkgName);
            HttpUnit_1.default.reportExport(pkgName, gameName, function (result) {
                if (1 == result.code) {
                    console.log("OPPO 导出上报成功");
                }
                else {
                    console.log("OPPO 导出上报失败", result.msg);
                }
            }, function (result) {
                console.log("OPPO 导出上报失败");
                for (var key in result) {
                    console.log(key, result[key]);
                }
            });
            var time = Date.now();
            while (Date.now() - time <= 500) {
            }
            Laya.Browser.window["qg"].navigateToMiniGame({
                pkgName: pkgName,
                path: path,
                extraData: {
                    from: AppConfig_1.default.AppID
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
            });
        }
    };
    OPPOAPI.showInterstitialAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQGMiniGame) {
            var insertAd = qg.createInsertAd({
                posId: OPPOAPI.InsAdUnitId
            });
            insertAd.load();
            insertAd.onLoad(function () {
                console.log("插屏广告加载完成");
                insertAd.show();
            });
            insertAd.onShow(function () {
                console.log("插屏广告显示成功");
            });
            insertAd.onError(function (err) {
                console.log("插屏广告拉取失败", err);
                insertAd.destroy();
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose();
        }
    };
    OPPOAPI.showBannaer = function () {
        if (OPPOAPI._banner) {
            OPPOAPI._banner.show();
            return;
        }
        var bannerAd = qg.createBannerAd({
            posId: OPPOAPI.bannerAdUnitId
        });
        bannerAd.show();
        OPPOAPI._banner = bannerAd;
    };
    OPPOAPI.hideBanner = function () {
        if (OPPOAPI._banner) {
            OPPOAPI._banner.hide();
        }
    };
    OPPOAPI.getLaunchOptionsSync = function () {
        var obj = { query: "", referrerInfo: { package: "", extraData: { appid: "" } } };
        if (Laya.Browser.onQGMiniGame) {
            var options = Laya.Browser.window["qg"].getLaunchOptionsSync();
            if (null != options && options != "") {
                obj = options;
            }
            else {
                console.log("没有启动设置！！！");
            }
            return obj;
        }
        return obj;
    };
    OPPOAPI.share = function (complate, titel, imageUrl) {
        complate(false);
    };
    OPPOAPI.createDesktopIcon = function (onSuccess, onFail) {
        if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].hasShortcutInstalled({
                success: function (res) {
                    if (res == false) {
                        Laya.Browser.window["qg"].installShortcut({
                            success: function () {
                                if (onSuccess) {
                                    onSuccess();
                                }
                            },
                            fail: function (err) {
                                if (onFail) {
                                    onFail();
                                }
                                console.log("创建桌面图标失败！！！！", err);
                                for (var key in err) {
                                    console.log(key, err);
                                }
                            },
                            complete: function () {
                            }
                        });
                    }
                    else {
                        console.log("桌面图标已存在！！！！");
                        if (onFail) {
                            onFail();
                        }
                    }
                },
                fail: function (err) {
                    if (onFail) {
                        onFail();
                    }
                    console.log("判断桌面图标是否存在失败！！！", err);
                    for (var key in err) {
                        console.log(key, err);
                    }
                },
                complete: function () {
                }
            });
        }
        else {
            if (onFail) {
                onFail();
            }
        }
    };
    OPPOAPI.adUnitId = "134292";
    OPPOAPI.bannerAdUnitId = "134291";
    OPPOAPI.InsAdUnitId = "134294";
    OPPOAPI.OpenScreenAdUnitId = "134293";
    OPPOAPI._banner = null;
    return OPPOAPI;
}());
exports.default = OPPOAPI;
},{"./AppConfig":2,"./Net/HttpUnit":17}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var QQMiniGameAPI = /** @class */ (function () {
    function QQMiniGameAPI() {
    }
    QQMiniGameAPI.Login = function (onSuccess, onFail) {
        if (Laya.Browser.onQQMiniGame) {
            Laya.Browser.window["qq"].login({
                success: function (res) {
                    if (res.code) {
                        var code = res.code;
                        onSuccess(code);
                        console.log("登陆成功,获取到code : " + code);
                    }
                }
            });
        }
    };
    QQMiniGameAPI.onRewardedVideoAdLoad = function () {
        console.log('激励视频 广告加载完成');
    };
    QQMiniGameAPI.onRewardedVideoAdError = function (err) {
        console.log('激励视频 广告加载失败' + err);
        if (QQMiniGameAPI._onRewardedVideoAdFailed) {
            QQMiniGameAPI._onRewardedVideoAdFailed();
        }
    };
    QQMiniGameAPI.onRewardedVideoAdClose = function (res) {
        if ((res && res.isEnded) || res == null) {
            console.log('激励视频 已完整观看');
            if (QQMiniGameAPI._onRewardedVideoAdClose) {
                QQMiniGameAPI._onRewardedVideoAdClose(true);
            }
        }
        else {
            console.log('激励视频 未完整观看');
            if (QQMiniGameAPI._onRewardedVideoAdClose) {
                QQMiniGameAPI._onRewardedVideoAdClose(false);
            }
        }
    };
    QQMiniGameAPI.regRewardedVideoAdEvent = function (rewardedVideoAd) {
        rewardedVideoAd.onLoad(QQMiniGameAPI.onRewardedVideoAdLoad);
        rewardedVideoAd.onError(QQMiniGameAPI.onRewardedVideoAdError);
        rewardedVideoAd.onClose(QQMiniGameAPI.onRewardedVideoAdClose);
        QQMiniGameAPI._isRegRewardedVideoAdEvent = true;
    };
    QQMiniGameAPI.showRewardedVideoAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQQMiniGame) {
            QQMiniGameAPI._onRewardedVideoAdClose = onAdClose;
            QQMiniGameAPI._onRewardedVideoAdFailed = onFailed;
            var rewardedVideoAd = Laya.Browser.window["qq"].createRewardedVideoAd({
                adUnitId: QQMiniGameAPI.adUnitId,
            });
            if (!QQMiniGameAPI._isRegRewardedVideoAdEvent) {
                QQMiniGameAPI.regRewardedVideoAdEvent(rewardedVideoAd);
            }
            rewardedVideoAd.load().then(function () {
                var promise = rewardedVideoAd.show();
                promise.then(function () { return console.log('激励视频 广告显示成功'); });
                promise.catch(function (err) {
                    rewardedVideoAd.load()
                        .then(function () { return rewardedVideoAd.show(); })
                        .catch(function (err) {
                        console.log('激励视频 广告显示失败');
                        if (onFailed) {
                            onFailed();
                        }
                    });
                });
            }).catch(function (err) {
                console.log('激励视频 广告加载失败');
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose(true);
        }
    };
    //----------------------------------------------------------------
    //-------------------------小游戏跳转---------------------------
    QQMiniGameAPI.navigateToMiniProgram = function (appId, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onQQMiniGame) {
            console.log("跳转游戏： " + appId);
            Laya.Browser.window["qq"].navigateToMiniProgram({
                appId: appId,
                path: path,
                extraData: {
                    foo: 'bar'
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
                complete: function (res) {
                    if (onComplate) {
                        onComplate(res);
                    }
                }
            });
        }
    };
    QQMiniGameAPI.share = function (complate, titel, imageUrl) {
        var _this = this;
        if (Laya.Browser.onQQMiniGame) {
            QQMiniGameAPI._onShow = function () {
                Laya.Browser.window["qq"].offShow(QQMiniGameAPI._onShow);
                QQMiniGameAPI._onShow = null;
                var c = Date.now() - _this._lastShareTime;
                if (complate) {
                    if (Date.now() - _this._lastShareTime > 2000) {
                        complate(true);
                    }
                    else {
                        complate(false);
                    }
                }
            };
            Laya.Browser.window["qq"].onShow(QQMiniGameAPI._onShow);
            this._lastShareTime = Date.now();
            Laya.Browser.window["qq"].shareAppMessage({
                title: titel,
                imageUrl: imageUrl
            });
        }
    };
    //----------------------------------------------------------------------
    //--------------------插屏幕广告---------------------------------------
    QQMiniGameAPI.showInterstitialAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQQMiniGame) {
            var interstitialAd = Laya.Browser.window["qq"].createInterstitialAd({
                adUnitId: QQMiniGameAPI.InsAdUnitId,
            });
            interstitialAd.onLoad(function () {
                console.log('插屏广告 加载完成');
                interstitialAd.show().catch(function (err) {
                    console.log('插屏广告 显示失败 ：' + err);
                    if (onFailed) {
                        onFailed();
                    }
                });
            });
            interstitialAd.onError(function (err) {
                console.log('插屏广告 加载失败' + err);
                if (onFailed) {
                    onFailed();
                }
            });
            interstitialAd.onClose(function () {
                console.log('插屏广告 关闭');
                if (onAdClose) {
                    onAdClose();
                }
            });
        }
        else {
            onAdClose();
        }
    };
    QQMiniGameAPI.LoadAppBoxAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQQMiniGame) {
            this.mAppboxAd = Laya.Browser.window["qq"].createAppBox({
                adUnitId: QQMiniGameAPI.AppBoxId,
            });
            this.mAppboxAd.load().then(function () {
                console.log('盒子广告 加载完成');
            });
            this.mAppboxAd.onError(function (err) {
                console.log('盒子广告 加载失败' + err);
                if (onFailed) {
                    onFailed();
                }
            });
            this.mAppboxAd.onClose(function () {
                console.log('盒子广告 关闭');
                if (onAdClose) {
                    onAdClose();
                }
            });
        }
        else {
            onAdClose();
        }
    };
    QQMiniGameAPI.showAppBoxAd = function (onFailed) {
        if (this.mAppboxAd) {
            console.log("显示盒子广告");
            this.mAppboxAd.show().catch(function (err) {
                console.log('盒子广告 显示失败 ：' + err);
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            QQMiniGameAPI.LoadAppBoxAd(function (onAdClose) {
            }, function (onFailed) {
            });
        }
    };
    /**
     * 得到小程序启动参数的同步方法，可得到一个Object返回值，返回值具体的数据结构在下面的列表中
     * scene	number	启动小游戏的场景值
     * query	Object	启动小游戏的 query 参数
     * shareTicket	string	shareTicket，详见获取更多转发信息
     * referrerInfo	object	来源信息。从另一个小程序、公众号或 App 进入小程序时返回。否则返回 {}
     * https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/qq.getLaunchOptionsSync.html
     * @static
     * @returns {LaunchOptions}
     * @memberof QQMiniGameAPI
     */
    QQMiniGameAPI.getLaunchOptionsSync = function () {
        // let result = { scene: 0, query: null, shareTicket: "", referrerInfo: null };
        if (Laya.Browser.onQQMiniGame) {
            var obj_1 = Laya.Browser.window["qq"].getLaunchOptionsSync();
            console.log("场景值 " + obj_1.scene);
            var str = JSON.stringify(obj_1.query);
            console.log("Query参数 " + str);
            var key = obj_1.query["key"];
            console.log("Query参数：key " + key);
            console.log("ShareTicket " + obj_1.shareTicket);
            console.log("ReferrerInfo.appId " + obj_1.referrerInfo.appId);
            console.log("ReferrerInfo.extraData " + obj_1.referrerInfo.extraData);
            return obj_1;
        }
        var obj = { scene: 1001, query: "", shareTicket: "", appId: "", extraData: "" };
        return obj;
    };
    //----------------------------------------------------------------------
    /**
     * 打开微信左上角分享转发点击事件,在游戏逻辑中调用一次即可
     * 注意此方法只会在真机上执行，在微信模拟器环境下点击转发按钮什么都不会发生
     *
     * @static
     * @param {string} titel 分享标题
     * @param {string} imageUrl 分享图片地址
     * @param {Function} [success] 成功回调函数(可不填)
     * @param {Function} [fail] 失败回调函数(可不填)
     * @param {Function} [complate] 完成回调函数，成功失败都会执行(可不填)
     * @memberof QQMiniGameAPI
     */
    QQMiniGameAPI.SetShareMenu = function (titel, imageUrl, success, fail, complate) {
        if (Laya.Browser.onQQMiniGame) {
            console.log("小游戏设置转发按钮");
            Laya.Browser.window["qq"].showShareMenu({
                withShareTicket: false,
                success: success,
                fail: fail,
                complete: complate
            });
            Laya.Browser.window["qq"].onShareAppMessage(function () {
                return {
                    title: titel,
                    imageUrl: imageUrl
                };
            });
        }
    };
    QQMiniGameAPI.adUnitId = ""; //激励视频Id
    QQMiniGameAPI.bannerAdUnitId = ""; //banner广告Id
    QQMiniGameAPI.InsAdUnitId = ""; //插屏广告Id
    QQMiniGameAPI.AppBoxId = ""; //盒子广告Id
    //-------------------------激励视频---------------------------------
    QQMiniGameAPI._isRegRewardedVideoAdEvent = false;
    QQMiniGameAPI._onRewardedVideoAdFailed = null;
    QQMiniGameAPI._onRewardedVideoAdClose = null;
    //----------------------------------------------------------------------
    //---------------------分享----------------------------------------
    QQMiniGameAPI._onShow = null;
    QQMiniGameAPI._lastShareTime = 0;
    //--------------------盒子广告---------------------------------------
    QQMiniGameAPI.mAppboxAd = null;
    return QQMiniGameAPI;
}());
exports.default = QQMiniGameAPI;
},{}],22:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("../Net/HttpUnit");
var AppConfig_1 = require("../AppConfig");
var User_1 = require("../User/User");
var Utilit_1 = require("../Utilit");
var ALD_1 = require("../ALD");
var WXAPI_1 = require("../WXAPI");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var AppSwitchConfig_1 = require("../Config/AppSwitchConfig");
var ShareAd = /** @class */ (function () {
    function ShareAd() {
    }
    ShareAd.refreshAd = function (complate) {
        ShareAd.getAdPosData(function (res) {
            if (1 == res.code) {
                console.log("获取分享广告数据成功");
                ShareAd._adPosition = res.result;
                if (complate) {
                    complate(true);
                }
            }
            else {
                console.log("获取分享广告数据失败 ： " + res.msg);
                if (complate) {
                    complate(false);
                }
            }
        }, function (res) {
            console.log("获取分享广告数据失败");
            if (complate) {
                complate(false);
            }
        });
    };
    ShareAd.getADVs = function (locationid, complate, useRandom, useLocalRandom) {
        if (!ShareAd.isNeedShowAd()) {
            complate(null);
            return;
        }
        useRandom = null == useRandom ? this.UseRandomAdPos : useRandom;
        useLocalRandom = null == useLocalRandom ? true : useRandom;
        if (useRandom) {
            locationid = this.getRandomADPosID();
        }
        var datas = ShareAd._adv[locationid];
        if (datas) {
            for (var i = datas.length - 1; i >= 0; --i) {
                var randomIndex = Math.floor(Math.random() * datas.length);
                var curValue = datas[i];
                var randomValue = datas[randomIndex];
                datas[randomIndex] = curValue;
                datas[i] = randomValue;
            }
            complate(datas);
        }
        else {
            var self = this;
            ShareAd.getADVData(locationid, function (res) {
                if (1 == res.code) {
                    ShareAd._adv[locationid] = res.result;
                    datas = ShareAd._adv[locationid];
                    if (datas && Utilit_1.default.isIphone()) {
                        for (var i = 0; i < datas.length; ++i) {
                            var data = datas[i];
                            for (var j = 0; j < ShareAd._iphoneIgnoreAppIds.length; ++j) {
                                if (data.appid == ShareAd._iphoneIgnoreAppIds[j]) {
                                    datas.splice(i, 1);
                                    --i;
                                    break;
                                }
                            }
                        }
                    }
                    if (datas && datas.length > 0 && useLocalRandom) {
                        self.sortDatas(datas);
                    }
                    if (complate) {
                        complate(datas);
                    }
                }
                else {
                    if (complate) {
                        complate(null);
                    }
                }
            }, function (res) {
                if (complate) {
                    complate(null);
                }
            });
        }
    };
    ShareAd.reportUserClick = function (advid) {
        return;
        ShareAd.reqUserClick(advid, function (res) {
            if (1 == res.code) {
                console.log("点击广告上报成功");
            }
            else {
                console.log("点击广告上报失败");
            }
        }, function (res) {
            console.log("点击广告上报失败");
        });
    };
    ShareAd.getRandomADPosID = function () {
        return this.AdLocationids[Math.floor(Math.random() * this.AdLocationids.length)];
    };
    ShareAd.request = function (req) {
        if (req.url.indexOf("https://") > -1 ||
            req.url.indexOf("http://") > -1) {
            req.url = req.url;
        }
        else {
            req.url = ShareAd.mainUrl + req.url;
        }
        var completeFunc = function (res) {
            console.log(res, "http Success");
            res = JSON.parse(res);
            if (req.onSuccess) {
                req.onSuccess(res);
            }
            req.onSuccess = null;
            req = null;
        };
        var errorFunc = function (res) {
            console.log(res, "http fail");
            if (req.onFail) {
                req.onFail(res);
            }
            req.onFail = null;
            req = null;
        };
        var xhr = new Laya.HttpRequest();
        xhr.once(Laya.Event.COMPLETE, this, completeFunc);
        xhr.once(Laya.Event.ERROR, this, errorFunc);
        if (req.meth == "get") {
            var para = "";
            for (var _i = 0, _a = Object.keys(req.data); _i < _a.length; _i++) {
                var key = _a[_i];
                var value = req.data[key];
                para += key + "=" + value + "&";
            }
            req.url = req.url + "?" + para;
            var header = [
                "versions", AppConfig_1.default.Versions,
            ];
            xhr.send(req.url, null, req.meth, null, header);
        }
        else {
            var para = "";
            for (var _b = 0, _c = Object.keys(req.data); _b < _c.length; _b++) {
                var key = _c[_b];
                var value = req.data[key];
                para += key + "=" + value + "&";
            }
            var header = [
                "Content-Type", "application/x-www-form-urlencoded",
                "versions", AppConfig_1.default.Versions,
            ];
            xhr.send(req.url, para, req.meth, null, header);
        }
    };
    ShareAd.getAdPosData = function (onSuccess, onFail) {
        var req = new HttpUnit_1.requestData();
        req.url = ShareAd.getAdPostion;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        req.data.softid = AppConfig_1.default.AppID;
        req.meth = "get";
        ShareAd.request(req);
    };
    ShareAd.reqUserClick = function (advid, onSuccess, onFail) {
        var req = new HttpUnit_1.requestData();
        req.url = ShareAd.userClick;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        req.data.softid = AppConfig_1.default.AppID;
        req.data.uid = User_1.default.openId;
        req.data.advid = advid;
        ShareAd.request(req);
    };
    ShareAd.getADVData = function (locationid, onSuccess, onFail) {
        var req = new HttpUnit_1.requestData();
        req.url = ShareAd.getAdv;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        req.data.softid = AppConfig_1.default.AppID;
        req.data.locationid = locationid;
        req.data.preview = 0;
        ShareAd.request(req);
    };
    /**
         * 随机跳转的方法，会从广告列表中随机得到一个AppId并且跳转,输入的参数为概率，大小在0-1之间
         * 如果概率大于1，则自动将其除以100，所以千万注意！
         *
         * @static
         * @param {number} [rate=1]
         * @memberof ShareAd
         */
    ShareAd.RandomJump = function (rate) {
        if (rate === void 0) { rate = 1; }
        console.log("随机跳转,rate：" + rate);
        if (rate > 1) {
            rate = rate / 100;
        }
        var rd = Math.random();
        if (rd <= rate) {
            var adLocationID = ShareAd.LoopAdLocationID;
            var Locations = [
                ShareAd.LoopAdLocationID,
                ShareAd.InsertAdLocationID,
                ShareAd.BannerAdLocationID,
                ShareAd.AniAdLocationID,
            ];
            if (ShareAd.UseRandomAdPos) {
                for (var i = 0; i < ShareAd.AdLocationids.length; ++i) {
                    Locations.push(ShareAd.AdLocationids[i]);
                }
            }
            adLocationID = Locations[Math.floor(Math.random() * Locations.length)];
            var datas = ShareAd.getADVs(adLocationID, function (datas) {
                if (datas) {
                    var rd_1 = Math.floor(datas.length * Math.random());
                    var data_1 = datas[rd_1];
                    console.log("跳转游戏： " + data_1.title);
                    WXAPI_1.default.navigateToMiniProgram(data_1.appid, data_1.url, function (res) {
                        console.log("跳转成功");
                        ShareAd.reportUserClick(data_1.appid);
                        ALD_1.default.aldSendReportAdClickSuccess(data_1);
                    }, function (res) {
                        console.log("跳转失败");
                        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                        if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                            console.log("用户取消跳转");
                            ALD_1.default.aldSendReportAdClickFail(data_1);
                        }
                    }, function (res) {
                        console.log("跳转完成");
                    });
                }
            }, true);
        }
    };
    ShareAd.isNeedShowAd = function () {
        if (0 == AppSwitchConfig_1.default.getInstance().getAppSwitchData().adSwitch)
            return false;
        var mailiang = AppSwitchConfig_1.default.getInstance().getAppSwitchData().mailiang;
        var mailianglist = AppSwitchConfig_1.default.getInstance().getAppSwitchData().mailianglist;
        var mailiangscenelist = AppSwitchConfig_1.default.getInstance().getAppSwitchData().mailiangSceneList;
        if (1 == mailiang) {
            if (Laya.Browser.onMiniGame) {
                var flag = WXAPI_1.default.getLaunchOptionsSync().query['chid'];
                if (null != flag && null != mailianglist && mailianglist.length > 0) {
                    for (var i = 0; i < mailianglist.length; ++i) {
                        if (flag == mailianglist[i]) {
                            return false;
                        }
                    }
                }
                var scene = WXAPI_1.default.getLaunchOptionsSync().scene;
                if (null != scene && null != mailiangscenelist && mailiangscenelist.length > 0) {
                    for (var i = 0; i < mailiangscenelist.length; ++i) {
                        if (scene == mailiangscenelist[i]) {
                            return false;
                        }
                    }
                }
            }
            else if (Laya.Browser.onQGMiniGame) {
                return false;
            }
            else if (Laya.Browser.onQQBrowser) {
                return false;
            }
        }
        return true;
    };
    ShareAd.sortDatas = function (datas) {
        var dataDic = {};
        var dataArray = new Array();
        for (var i = 0; i < datas.length; ++i) {
            var data = datas[i];
            if (dataDic[data.appid] == null) {
                dataDic[data.appid] = new Array();
                dataDic[data.appid].push(data);
                dataArray.push(dataDic[data.appid]);
            }
            else {
                dataDic[data.appid].push(data);
            }
        }
        //从大到小排序
        for (var i_1 = 0; i_1 < dataArray.length; i_1++) {
            for (var j = i_1 + 1; j < dataArray.length; j++) {
                if (dataArray[i_1].length < dataArray[j].length) {
                    var d = dataArray[j];
                    dataArray[j] = dataArray[i_1];
                    dataArray[i_1] = d;
                }
            }
        }
        //重新分组
        var groupArray = new Array();
        for (var i_2 = 0; i_2 < dataArray[0].length; i_2++) {
            groupArray[i_2] = new Array();
            for (var j = 0; j < dataArray.length; j++) {
                if (dataArray[j].length > i_2) {
                    groupArray[i_2].push(dataArray[j][i_2]);
                }
            }
            // //组内打乱            
            // groupArray[i].sort(() => { return 0.5 - Math.random() })
        }
        //打乱分组
        // groupArray.sort(() => { return 0.5 - Math.random() });
        var res = new Array();
        for (var i_3 = 0; i_3 < groupArray.length; i_3++) {
            for (var j = 0; j < groupArray[i_3].length; j++) {
                res.push(groupArray[i_3][j]);
            }
        }
        return res;
    };
    ShareAd.mainUrl = "https://swwww.mrkzx.cn";
    ShareAd.getAdPostion = "/v1.1/api/getAdPosition.html"; //获取广告位列表
    ShareAd.getAdv = "/v1.1/api/getAdv.html"; //获取第三方广告列表
    ShareAd.userClick = "/v1.1/api/userclick.html"; //用户点击上报
    ShareAd.LoopAdLocationID = 56;
    ShareAd.BannerAdLocationID = 57;
    ShareAd.InsertAdLocationID = 58;
    ShareAd.AniAdLocationID = 78;
    ShareAd.UseRandomAdPos = false;
    ShareAd.AdLocationids = [
        56,
        58
    ];
    ShareAd._adPosition = {};
    ShareAd._adv = {};
    ShareAd._iphoneIgnoreAppIds = [
        "wx2d2acce3c45f4ddf",
        "wxeb93c1298ec7c62b",
        "wx9540f9021d5f809d",
        "wxe372a630ec9ebe44",
        "wx887a573910b69793"
    ];
    return ShareAd;
}());
exports.default = ShareAd;
},{"../ALD":1,"../AppConfig":2,"../Config/AppSwitchConfig":4,"../Event/EventDef":5,"../Event/EventMgr":6,"../Net/HttpUnit":17,"../User/User":31,"../Utilit":32,"../WXAPI":39}],23:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var WXAPI_1 = require("../../WXAPI");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var OPPOAPI_1 = require("../../OPPOAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var BannerAdView = /** @class */ (function (_super) {
    __extends(BannerAdView, _super);
    function BannerAdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPosID = ShareAd_1.default.BannerAdLocationID;
        _this._data = null;
        _this._wxBanner = null;
        return _this;
    }
    BannerAdView.prototype.onAwake = function () {
        this._displaySp = this.owner.getChildByName("Display");
        if (null == this._displaySp) {
            this._displaySp = this.owner;
        }
    };
    BannerAdView.prototype.onEnable = function () {
        this._displaySp.on(Laya.Event.CLICK, this, this.onSpClick);
        var banner = AppSwitchConfig_1.default.getInstance().getAppSwitchData().banner;
        if (0 == banner) {
            this.refreshBannerDis();
        }
        else if (1 == banner) {
            this.refreshWXBanner();
        }
    };
    BannerAdView.prototype.onDisable = function () {
        this._displaySp.off(Laya.Event.CLICK, this, this.onSpClick);
        this.clearWXBaner();
    };
    BannerAdView.prototype.refreshBannerDis = function () {
        var self = this;
        ShareAd_1.default.getADVs(this.AdPosID, function (datas) {
            if (datas && datas.length > 0) {
                var data = datas[Math.floor(Math.random() * datas.length)];
                self._displaySp.loadImage(data.logo, Laya.Handler.create(self, function () {
                    if (!self._displaySp.destroyed) {
                        self._displaySp.visible = true;
                        self._displaySp.width = 750;
                        self._displaySp.height = 256;
                    }
                }));
                self._data = data;
            }
        }, false);
    };
    BannerAdView.prototype.onSpClick = function () {
        var data = this._data;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                    ALD_1.default.aldSendReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.aldSendReportAdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigateToMiniProgram(data.appid, data.title, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQQMiniGame) //qq小游戏
             {
                QQMiniGameAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    BannerAdView.prototype.refreshWXBanner = function () {
        if (!Laya.Browser.onMiniGame)
            return;
        this.clearWXBaner();
        var self = this;
        var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
        var sw = sysInfo.screenWidth;
        var sh = sysInfo.screenHeight;
        var pos = this._displaySp.localToGlobal(new Laya.Point(0, 0));
        var left = pos.x / Laya.stage.width * sw;
        var top = pos.y / Laya.stage.height * sh;
        var width = this.WXBannerWidth ? this.WXBannerWidth / Laya.stage.width * sw : sw;
        this._wxBanner = Laya.Browser.window["wx"].createBannerAd({
            adUnitId: WXAPI_1.default.bannerAdUnitId,
            adIntervals: 30,
            style: {
                left: left,
                top: top,
                width: width,
            }
        });
        self._wxBanner.onLoad(function (res) {
            console.log("WXBanner广告 加载完成");
            console.log(res);
        });
        this._wxBanner.onError(function (err) {
            console.log("WXBanner广告 加载失败");
            console.log(err);
            self.refreshBannerDis();
            self.clearWXBaner();
        });
        this._wxBanner.onResize(function (res) {
            console.log(self._wxBanner.style.realWidth, self._wxBanner.style.realHeight);
        });
        self._wxBanner.show();
    };
    BannerAdView.prototype.clearWXBaner = function () {
        if (this._wxBanner) {
            this._wxBanner.destroy();
        }
        this._wxBanner = null;
    };
    return BannerAdView;
}(Laya.Script));
exports.default = BannerAdView;
},{"../../ALD":1,"../../Config/AppSwitchConfig":4,"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../OPPOAPI":20,"../../QQMiniGameAPI":21,"../../WXAPI":39,"../ShareAd":22}],24:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var LoopAdBox_1 = require("./LoopAdBox");
var HorizontalLoopAdView = /** @class */ (function (_super) {
    __extends(HorizontalLoopAdView, _super);
    function HorizontalLoopAdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPosID = ShareAd_1.default.LoopAdLocationID;
        _this._scrollForward = true;
        return _this;
    }
    HorizontalLoopAdView.prototype.onAwake = function () {
        this._list = this.owner.getChildByName("List");
        this._list.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this._list.hScrollBarSkin = "";
    };
    HorizontalLoopAdView.prototype.onEnable = function () {
        var _this = this;
        var self = this;
        ShareAd_1.default.getADVs(this.AdPosID, function (datas) {
            if (self.owner && !self.owner.destroyed) {
                if (datas && datas.length > 0 && datas.length < 50) {
                    var temp = [];
                    var counter = 0;
                    for (var i = 0; i < 50; ++i) {
                        if (counter >= datas.length) {
                            counter = 0;
                        }
                        temp.push(datas[counter]);
                        ++counter;
                    }
                    var groupLen = datas.length;
                    for (var i = 0; i < temp.length; ++i) {
                        var group = Math.floor(i / groupLen);
                        var startIndex = group * groupLen;
                        var randomIndex = Math.floor(Math.random() * groupLen) + startIndex;
                        var curValue = temp[i];
                        var randomValue = temp[randomIndex];
                        temp[randomIndex] = curValue;
                        temp[i] = randomValue;
                    }
                    _this._list.array = temp;
                }
                else {
                    _this._list.array = datas;
                }
            }
        });
    };
    HorizontalLoopAdView.prototype.onDisable = function () {
    };
    HorizontalLoopAdView.prototype.onUpdate = function () {
        if (this._scrollForward) {
            this._list.scrollBar.value += 100 * Laya.timer.delta / 1000;
            if (this._list.scrollBar.value >= this._list.scrollBar.max) {
                this._scrollForward = false;
            }
        }
        else {
            this._list.scrollBar.value -= 100 * Laya.timer.delta / 1000;
            if (this._list.scrollBar.value <= 0) {
                this._scrollForward = true;
            }
        }
    };
    HorizontalLoopAdView.prototype.onListRender = function (cell, index) {
        var data = this._list.array[index];
        var loopAdBox = cell.getComponent(LoopAdBox_1.default);
        loopAdBox.setData(data);
    };
    return HorizontalLoopAdView;
}(Laya.Script));
exports.default = HorizontalLoopAdView;
},{"../ShareAd":22,"./LoopAdBox":25}],25:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WXAPI_1 = require("../../WXAPI");
var ShareAd_1 = require("../ShareAd");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var OPPOAPI_1 = require("../../OPPOAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var LoopAdBox = /** @class */ (function (_super) {
    __extends(LoopAdBox, _super);
    function LoopAdBox() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._data = null;
        _this._originW = 150;
        _this._originH = 150;
        _this._fontSize = 25;
        return _this;
    }
    LoopAdBox.prototype.onAwake = function () {
        this._displaySp = this.owner.getChildByName("Display");
        this._originW = this._displaySp.width;
        this._originH = this._displaySp.height;
        this._disText = this.owner.getChildByName("TitelText");
        this._disText.text = "";
        this._fontSize = this._disText.fontSize;
    };
    LoopAdBox.prototype.onEnable = function () {
        this._displaySp.on(Laya.Event.CLICK, this, this.onSpClick);
    };
    LoopAdBox.prototype.onDisable = function () {
        this._displaySp.off(Laya.Event.CLICK, this, this.onSpClick);
    };
    LoopAdBox.prototype.setData = function (data) {
        if (data) {
            var self = this;
            this._displaySp.loadImage(data.logo, Laya.Handler.create(this, function () {
                if (!self._displaySp.destroyed) {
                    self._displaySp.width = self._originW;
                    self._displaySp.height = self._originH;
                }
            }));
            var str = String(data.title);
            var num = str.length;
            num = Math.max(5, num);
            var fontSize = Math.floor((5 / num) * this._fontSize);
            // this._disText.fontSize = fontSize;
            this._disText.text = str;
            this._data = data;
        }
    };
    LoopAdBox.prototype.onSpClick = function () {
        var data = this._data;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                    ALD_1.default.aldSendReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.aldSendReportAdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigateToMiniProgram(data.appid, data.title, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQQMiniGame) //qq小游戏
             {
                QQMiniGameAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    return LoopAdBox;
}(Laya.Script));
exports.default = LoopAdBox;
},{"../../ALD":1,"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../OPPOAPI":20,"../../QQMiniGameAPI":21,"../../WXAPI":39,"../ShareAd":22}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var LoopAdBox_1 = require("./LoopAdBox");
var LoopAdView = /** @class */ (function (_super) {
    __extends(LoopAdView, _super);
    function LoopAdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPosID = ShareAd_1.default.LoopAdLocationID;
        _this._scrollForward = true;
        return _this;
    }
    LoopAdView.prototype.onAwake = function () {
        this._list = this.owner.getChildByName("List");
        this._list.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this._list.vScrollBarSkin = "";
    };
    LoopAdView.prototype.onEnable = function () {
        var _this = this;
        var self = this;
        ShareAd_1.default.getADVs(this.AdPosID, function (datas) {
            if (self.owner && !_this.owner.destroyed) {
                if (datas && datas.length > 0 && datas.length < 50) {
                    _this.owner.visible = true;
                    var temp = [];
                    var counter = 0;
                    for (var i = 0; i < 50; ++i) {
                        if (counter >= datas.length) {
                            counter = 0;
                        }
                        temp.push(datas[counter]);
                        ++counter;
                    }
                    var groupLen = datas.length;
                    for (var i = 0; i < temp.length; ++i) {
                        var group = Math.floor(i / groupLen);
                        var startIndex = group * groupLen;
                        var randomIndex = Math.floor(Math.random() * groupLen) + startIndex;
                        var curValue = temp[i];
                        var randomValue = temp[randomIndex];
                        temp[randomIndex] = curValue;
                        temp[i] = randomValue;
                    }
                    _this._list.array = temp;
                }
                else {
                    _this._list.array = datas;
                    _this.owner.visible = false;
                }
            }
        });
    };
    LoopAdView.prototype.onDisable = function () {
    };
    LoopAdView.prototype.onUpdate = function () {
        if (this._scrollForward) {
            this._list.scrollBar.value += 100 * Laya.timer.delta / 1000;
            if (this._list.scrollBar.value >= this._list.scrollBar.max) {
                this._scrollForward = false;
            }
        }
        else {
            this._list.scrollBar.value -= 100 * Laya.timer.delta / 1000;
            if (this._list.scrollBar.value <= 0) {
                this._scrollForward = true;
            }
        }
    };
    LoopAdView.prototype.onListRender = function (cell, index) {
        var data = this._list.array[index];
        var loopAdBox = cell.getComponent(LoopAdBox_1.default);
        loopAdBox.setData(data);
    };
    return LoopAdView;
}(Laya.Script));
exports.default = LoopAdView;
},{"../ShareAd":22,"./LoopAdBox":25}],27:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var WXAPI_1 = require("../../WXAPI");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var OPPOAPI_1 = require("../../OPPOAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var SingleAdView = /** @class */ (function (_super) {
    __extends(SingleAdView, _super);
    function SingleAdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPosID = ShareAd_1.default.LoopAdLocationID;
        _this._aniForward = false;
        _this._data = null;
        _this._fontSize = 25;
        _this._originSize = 1;
        _this._originW = 150;
        _this._originH = 150;
        return _this;
    }
    SingleAdView.prototype.onAwake = function () {
        this._ownerSprite = this.owner;
        this._displaySp = this.owner.getChildByName("Display");
        this._originW = this._displaySp.width;
        this._originH = this._displaySp.height;
        this._disText = this.owner.getChildByName("TitelText");
        this._disText.text = "";
        this._fontSize = this._disText.fontSize;
        this._originSize = this._displaySp.scaleX;
    };
    /**
     *
     *
     * @memberof SingleAdView
     */
    SingleAdView.prototype.onEnable = function () {
        this.refreshADVDis();
        Laya.timer.loop(3000, this, this.refreshADVDis);
        this._ownerSprite.on(Laya.Event.CLICK, this, this.onSpClick);
    };
    SingleAdView.prototype.onDisable = function () {
        Laya.timer.clearAll(this);
        this._ownerSprite.off(Laya.Event.CLICK, this, this.onSpClick);
    };
    SingleAdView.prototype.refreshADVDis = function () {
        var _this = this;
        var self = this;
        ShareAd_1.default.getADVs(this.AdPosID, function (datas) {
            if (self.owner && !self.owner.destroyed) {
                if (datas && datas.length > 0) {
                    self.owner.visible = true;
                    var data = datas[Math.floor(Math.random() * datas.length)];
                    self._displaySp.loadImage(data.logo, Laya.Handler.create(self, function () {
                        if (!self._displaySp.destroyed) {
                            self._displaySp.width = self._originW;
                            self._displaySp.height = self._originH;
                            self._displaySp.scale(self._originSize, self._originSize);
                        }
                    }));
                    var str = String(data.title);
                    var num = str.length;
                    var fontSize = Math.floor((5 / num) * _this._fontSize);
                    self._disText.fontSize = fontSize;
                    self._disText.text = str;
                    self._data = data;
                }
                else {
                    _this.owner.visible = false;
                }
            }
        });
    };
    SingleAdView.prototype.onUpdate = function () {
        this.displayAni();
    };
    SingleAdView.prototype.displayAni = function () {
        if (!this._aniForward) {
            var scale = this._displaySp.scaleX - Laya.timer.delta / 3000 * 1;
            scale = Math.max(scale, 0);
            this._displaySp.scale(scale, scale);
            if (this._displaySp.scaleX <= 0.95 * this._originSize) {
                this._aniForward = true;
            }
        }
        else {
            var scale = this._displaySp.scaleX + Laya.timer.delta / 3000 * 1;
            scale = Math.min(scale, 1 * this._originSize);
            this._displaySp.scale(scale, scale);
            if (this._displaySp.scaleX >= this._originSize) {
                this._aniForward = false;
            }
        }
    };
    SingleAdView.prototype.onSpClick = function () {
        var data = this._data;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                    ALD_1.default.aldSendReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.aldSendReportAdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigateToMiniProgram(data.appid, data.title, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQQMiniGame) //qq小游戏
             {
                QQMiniGameAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    return SingleAdView;
}(Laya.Script));
exports.default = SingleAdView;
},{"../../ALD":1,"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../OPPOAPI":20,"../../QQMiniGameAPI":21,"../../WXAPI":39,"../ShareAd":22}],28:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var WXAPI_1 = require("../../WXAPI");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var OPPOAPI_1 = require("../../OPPOAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var SingleAniADView = /** @class */ (function (_super) {
    __extends(SingleAniADView, _super);
    function SingleAniADView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPosID = ShareAd_1.default.AniAdLocationID;
        _this._data = null;
        return _this;
    }
    SingleAniADView.prototype.onAwake = function () {
        this._ownerSprite = this.owner;
        this._animation = this.owner.getChildByName("Animation");
    };
    SingleAniADView.prototype.onEnable = function () {
        this.refreshADVDis();
        this._ownerSprite.on(Laya.Event.CLICK, this, this.onSpClick);
    };
    SingleAniADView.prototype.onDisable = function () {
        Laya.timer.clearAll(this);
        this._ownerSprite.off(Laya.Event.CLICK, this, this.onSpClick);
    };
    SingleAniADView.prototype.refreshADVDis = function () {
        var self = this;
        ShareAd_1.default.getADVs(this.AdPosID, function (datas) {
            if (datas && datas.length > 0) {
                self._ownerSprite.visible = true;
                var data = datas[Math.floor(Math.random() * datas.length)];
                self._animation.loadAtlas(data.atlas, Laya.Handler.create(self, function () {
                    self._animation.play(0, true);
                }));
                self._data = data;
            }
            else {
                self._ownerSprite.visible = false;
            }
        }, false);
    };
    SingleAniADView.prototype.onSpClick = function () {
        var data = this._data;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                    ALD_1.default.aldSendReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.aldSendReportAdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigateToMiniProgram(data.appid, data.title, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQQMiniGame) //qq小游戏
             {
                QQMiniGameAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    return SingleAniADView;
}(Laya.Script));
exports.default = SingleAniADView;
},{"../../ALD":1,"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../OPPOAPI":20,"../../QQMiniGameAPI":21,"../../WXAPI":39,"../ShareAd":22}],29:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var WXAPI_1 = require("../../WXAPI");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var OPPOAPI_1 = require("../../OPPOAPI");
/**
 * 会随机移动的单个广告和SinpleAdView不同之处在于需要有一个Sprite作为父部件，并且设置好Sprite的Width和Height属性
 * 该广告会在父部件的内部随机(Width和Height属性)移动
 * _moveSpd属性为移动速度，根据需要自行修改
 *
 * @export
 * @class SingleRdMoveAdView
 * @extends {Laya.Script}
 */
var SingleRdMoveAdView = /** @class */ (function (_super) {
    __extends(SingleRdMoveAdView, _super);
    function SingleRdMoveAdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPosID = ShareAd_1.default.LoopAdLocationID;
        _this._aniForward = false;
        _this._data = null;
        _this._fontSize = 25;
        _this._originSize = 1;
        _this._originW = 150;
        _this._originH = 150;
        /* 移动速度 */
        _this._moveSpd = 1000;
        return _this;
    }
    SingleRdMoveAdView.prototype.onAwake = function () {
        this._ownerSprite = this.owner;
        this._displaySp = this.owner.getChildByName("Display");
        this._originW = this._displaySp.width;
        this._originH = this._displaySp.height;
        this._disText = this.owner.getChildByName("TitelText");
        this._disText.text = "";
        this._fontSize = this._disText.fontSize;
        this._originSize = this._displaySp.scaleX;
    };
    /**
     *
     *
     * @memberof SingleAdView
     */
    SingleRdMoveAdView.prototype.onEnable = function () {
        this.refreshADVDis();
        Laya.timer.loop(3000, this, this.refreshADVDis);
        this._rdPoint_X = this._ownerSprite.x;
        this._rdPoint_Y = this._ownerSprite.y;
        this._ownerSprite.on(Laya.Event.CLICK, this, this.onSpClick);
    };
    SingleRdMoveAdView.prototype.onDisable = function () {
        Laya.timer.clearAll(this);
        this._ownerSprite.off(Laya.Event.CLICK, this, this.onSpClick);
    };
    SingleRdMoveAdView.prototype.refreshADVDis = function () {
        var _this = this;
        var self = this;
        ShareAd_1.default.getADVs(this.AdPosID, function (datas) {
            if (datas && datas.length > 0) {
                self.owner.visible = true;
                var data = datas[Math.floor(Math.random() * datas.length)];
                self._displaySp.loadImage(data.logo, Laya.Handler.create(self, function () {
                    if (!self._displaySp.destroyed) {
                        self._displaySp.width = self._originW;
                        self._displaySp.height = self._originH;
                        self._displaySp.scale(self._originSize, self._originSize);
                    }
                }));
                var str = String(data.title);
                var num = str.length;
                var fontSize = Math.floor((5 / num) * _this._fontSize);
                self._disText.fontSize = fontSize;
                self._disText.text = str;
                self._data = data;
            }
            else {
                _this.owner.visible = false;
            }
        });
    };
    SingleRdMoveAdView.prototype.onUpdate = function () {
        this.displayAni();
        this.RandonMove();
    };
    SingleRdMoveAdView.prototype.displayAni = function () {
        if (!this._aniForward) {
            var scale = this._displaySp.scaleX - Laya.timer.delta / 3000 * 1;
            scale = Math.max(scale, 0);
            this._displaySp.scale(scale, scale);
            if (this._displaySp.scaleX <= 0.95 * this._originSize) {
                this._aniForward = true;
            }
        }
        else {
            var scale = this._displaySp.scaleX + Laya.timer.delta / 3000 * 1;
            scale = Math.min(scale, 1 * this._originSize);
            this._displaySp.scale(scale, scale);
            if (this._displaySp.scaleX >= this._originSize) {
                this._aniForward = false;
            }
        }
    };
    SingleRdMoveAdView.prototype.RandonMove = function () {
        var x = Math.abs(this._ownerSprite.x - this._rdPoint_X);
        var y = Math.abs(this._ownerSprite.y - this._rdPoint_Y);
        if (x <= 1 || y <= 1) {
            var pt = this._ownerSprite.parent;
            this._rdPoint_X = (Math.random() * pt.width);
            this._rdPoint_Y = (Math.random() * pt.height);
            x = this._ownerSprite.x - this._rdPoint_X;
            y = this._ownerSprite.y - this._rdPoint_Y;
            var distance = Math.sqrt(x * x + y * y);
            var time = 1000 * (distance / 100);
            Laya.Tween.to(this._ownerSprite, { x: this._rdPoint_X, y: this._rdPoint_Y }, time);
            return;
        }
    };
    SingleRdMoveAdView.prototype.onSpClick = function () {
        var data = this._data;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                    ALD_1.default.aldSendReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.aldSendReportAdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigateToMiniProgram(data.appid, data.title, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    return SingleRdMoveAdView;
}(Laya.Script));
exports.default = SingleRdMoveAdView;
},{"../../ALD":1,"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../OPPOAPI":20,"../../WXAPI":39,"../ShareAd":22}],30:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("./AppConfig");
var TTAPI = /** @class */ (function () {
    function TTAPI() {
    }
    TTAPI.ttLogin = function (onSuccess, onFail) {
        if (AppConfig_1.default.onTTMiniGame) {
            Laya.Browser.window.tt.login({
                success: function (res) {
                    if (res.code) {
                        var code = res.code;
                        onSuccess(code);
                        console.log("登陆成功,获取到code : " + code);
                    }
                }
            });
        }
        TTAPI.initRecord();
    };
    TTAPI.onRewardedVideoAdLoad = function () {
        console.log('激励视频 广告加载完成');
    };
    TTAPI.onRewardedVideoAdError = function (err) {
        console.log('激励视频 广告加载失败' + err);
        if (TTAPI._onRewardedVideoAdFailed) {
            TTAPI._onRewardedVideoAdFailed();
        }
    };
    TTAPI.onRewardedVideoAdClose = function (res) {
        if ((res && res.isEnded) || res == null) {
            console.log('激励视频 已完整观看');
            if (TTAPI._onRewardedVideoAdClose) {
                TTAPI._onRewardedVideoAdClose(true);
            }
        }
        else {
            console.log('激励视频 未完整观看');
            if (TTAPI._onRewardedVideoAdClose) {
                TTAPI._onRewardedVideoAdClose(false);
            }
        }
    };
    TTAPI.regRewardedVideoAdEvent = function (rewardedVideoAd) {
        rewardedVideoAd.onLoad(TTAPI.onRewardedVideoAdLoad);
        rewardedVideoAd.onError(TTAPI.onRewardedVideoAdError);
        rewardedVideoAd.onClose(TTAPI.onRewardedVideoAdClose);
        TTAPI._isRegRewardedVideoAdEvent = true;
    };
    TTAPI.showRewardedVideoAd = function (onAdClose, onFailed) {
        if (AppConfig_1.default.onTTMiniGame) {
            TTAPI._onRewardedVideoAdClose = onAdClose;
            TTAPI._onRewardedVideoAdFailed = onFailed;
            var rewardedVideoAd = Laya.Browser.window["tt"].createRewardedVideoAd({
                adUnitId: TTAPI.adUnitId,
            });
            if (!TTAPI._isRegRewardedVideoAdEvent) {
                TTAPI.regRewardedVideoAdEvent(rewardedVideoAd);
            }
            rewardedVideoAd.load().then(function () {
                var promise = rewardedVideoAd.show();
                promise.then(function () { return console.log('激励视频 广告显示成功'); });
                promise.catch(function (err) {
                    rewardedVideoAd.load()
                        .then(function () { return rewardedVideoAd.show(); })
                        .catch(function (err) {
                        console.log('激励视频 广告显示失败');
                        if (onFailed) {
                            onFailed();
                        }
                    });
                });
            }).catch(function (err) {
                console.log('激励视频 广告加载失败');
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose(true);
        }
    };
    //----------------------------------------------------------------
    //-------------------------小游戏跳转---------------------------TODO
    // public static navigateToMiniProgram(appId: string, path: string, onSuccess: Function, onFail: Function, onComplate: Function) {
    //     if (Laya.Browser.onMiniGame) {
    //         console.log("跳转游戏： " + appId);
    //         Laya.Browser.window["tt"].navigateToMiniProgram(
    //             {
    //                 appId: appId,
    //                 path: path,
    //                 extraData: {
    //                     foo: 'bar'
    //                 },
    //                 envVersion: 'release',
    //                 success(res) {
    //                     if (onSuccess) {
    //                         onSuccess(res)
    //                     }
    //                 },
    //                 fail(res) {
    //                     if (onFail) {
    //                         onFail(res)
    //                     }
    //                 },
    //                 complete(res) {
    //                     if (onComplate) {
    //                         onComplate(res)
    //                     }
    //                 }
    //             })
    //     }
    // }
    //-------------------------------------------------------------
    //-------------------录屏-------------------------------------------
    /**
     * 配置录屏
     */
    TTAPI.initRecord = function () {
        TTAPI.record = Laya.Browser.window["tt"].getGameRecorderManager();
        if (TTAPI.record != null) {
            TTAPI.record.onStart(function (res) {
                console.log("录屏开始");
                TTAPI.recordRes = "";
            });
            TTAPI.record.onStop(function (res) {
                console.log("录屏结束");
                TTAPI.recordRes = res.videoPath;
            });
        }
    };
    /**
     * 开始录屏
     */
    TTAPI.startRecord = function (duration) {
        if (duration === void 0) { duration = 300; }
        if (!AppConfig_1.default.onTTMiniGame)
            return;
        TTAPI.record.start({
            duration: duration
        });
    };
    /**
    * 停止录屏
    */
    TTAPI.stopRecord = function () {
        if (!AppConfig_1.default.onTTMiniGame)
            return;
        TTAPI.record.stop();
    };
    //----------------------------------------------------------------------
    //---------------------分享录屏----------------------------------------
    TTAPI.shareRecord = function (callback) {
        if (callback === void 0) { callback = null; }
        if (!AppConfig_1.default.onTTMiniGame)
            return;
        if (TTAPI.recordRes != "") {
            window["tt"].shareAppMessage({
                channel: "video",
                extra: {
                    videoPath: TTAPI.recordRes,
                    videoTopics: ["快来和我一起玩吧！"]
                },
                success: function () {
                    if (callback != null) {
                        callback();
                    }
                    console.log("分享视频成功");
                },
                fail: function (e) {
                    console.log("分享视频失败");
                }
            });
        }
        else {
            console.log("分享视频为空");
        }
    };
    //----------------------------------------------------------------------
    //----------------------------------------------------------------------
    //---------------------分享好友----------------------------------------
    TTAPI.share = function (complate) {
        if (complate === void 0) { complate = null; }
        if (!AppConfig_1.default.onTTMiniGame)
            return;
        window["tt"].shareAppMessage({
            templateId: this._templateId,
            success: function () {
                if (complate != null) {
                    complate();
                }
            },
            fail: function () {
                console.log("分享失败");
            }
        });
    };
    //------------------------------------------------------------------
    //-------------------------banner-------------------------------------------
    TTAPI.showBanner = function () {
        if (!AppConfig_1.default.onTTMiniGame)
            return;
        if (!TTAPI._banner) {
            var _a = Laya.Browser.window["tt"].getSystemInfoSync(), windowWidth_1 = _a.windowWidth, windowHeight_1 = _a.windowHeight;
            var targetBannerAdWidth = 150;
            // 创建一个居于屏幕底部正中的广告
            TTAPI._banner = Laya.Browser.window["tt"].createBannerAd({
                adUnitId: TTAPI.bannerAdUnitId,
                adIntervals: 30,
                style: {
                    width: targetBannerAdWidth,
                    top: windowHeight_1 - (targetBannerAdWidth / 16) * 9,
                }
            });
            TTAPI._banner.onResize(function (size) {
                console.log(size.width, size.height);
                TTAPI._banner.style.top = windowHeight_1 - size.height;
                TTAPI._banner.style.left = (windowWidth_1 - size.width) / 2;
            });
            TTAPI._banner.show();
        }
    };
    TTAPI.adUnitId = "";
    TTAPI.bannerAdUnitId = "";
    TTAPI.InsAdUnitId = "";
    TTAPI._templateId = ""; //分享素材id
    TTAPI.recordRes = "";
    TTAPI._banner = null;
    //-------------------------激励视频---------------------------------
    TTAPI._isRegRewardedVideoAdEvent = false;
    TTAPI._onRewardedVideoAdFailed = null;
    TTAPI._onRewardedVideoAdClose = null;
    return TTAPI;
}());
exports.default = TTAPI;
},{"./AppConfig":2}],31:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
//游戏数据,为保持版本兼容，建议不要删除和修改字段名
var UserGameData = /** @class */ (function () {
    function UserGameData() {
        this.levelNum = 1; //当前关卡
        this.moneyNum = 0; //金币数量
        this.crystalNum = 0; //钻石数量    
    }
    return UserGameData;
}());
exports.UserGameData = UserGameData;
var User = /** @class */ (function (_super) {
    __extends(User, _super);
    function User() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(User, "isLogin", {
        get: function () {
            return (User.code != "") || (User.token != "");
        },
        enumerable: true,
        configurable: true
    });
    User.getSaveData = function () {
        return JSON.stringify(User._gameData);
    };
    User.testInitUser = function () {
        User._gameData.levelNum = 1;
        User._gameData.moneyNum = 10000000;
        User._gameData.crystalNum = 10000000;
    };
    User.initiUser = function (data) {
        if (data && 0 != data) {
            User._gameData.levelNum = data.levelNum;
            User._gameData.moneyNum = data.moneyNum;
            User._gameData.crystalNum = data.crystalNum;
        }
        else {
            //todo：处理没有获取到玩家数据的情况
        }
    };
    User.setLeveNum = function (levelNum) {
        User._gameData.levelNum = levelNum;
    };
    User.getLeveNum = function () {
        return User._gameData.levelNum;
    };
    User.addMoney = function (add) {
        add = Math.ceil(add);
        var last = User._gameData.moneyNum;
        User._gameData.moneyNum += add;
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnUserMoneyChange, {
            curr: User._gameData.moneyNum,
            last: last
        });
    };
    User.subMoney = function (sub) {
        sub = Math.ceil(sub);
        var last = User._gameData.moneyNum;
        User._gameData.moneyNum -= sub;
        if (User._gameData.moneyNum < 0) {
            User._gameData.moneyNum = 0;
        }
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnUserMoneyChange, {
            curr: User._gameData.moneyNum,
            last: last
        });
    };
    User.getMoney = function () {
        return User._gameData.moneyNum;
    };
    User.addCrystal = function (add) {
        add = Math.ceil(add);
        var last = User._gameData.crystalNum;
        User._gameData.crystalNum += add;
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnUserCrystalChange, {
            curr: User._gameData.crystalNum,
            last: last
        });
    };
    User.subCrystal = function (sub) {
        sub = Math.ceil(sub);
        var last = User._gameData.crystalNum;
        User._gameData.crystalNum -= sub;
        if (User._gameData.crystalNum < 0) {
            User._gameData.crystalNum = 0;
        }
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnUserCrystalChange, {
            curr: User._gameData.crystalNum,
            last: last
        });
    };
    User.getCrystal = function () {
        return User._gameData.crystalNum;
    };
    User.code = "";
    User.openId = "";
    User.token = null;
    User.nickName = "";
    User.gender = 0;
    User._gameData = new UserGameData();
    return User;
}(Laya.Script));
exports.default = User;
},{"../Event/EventDef":5,"../Event/EventMgr":6}],32:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Utilit = /** @class */ (function () {
    function Utilit() {
    }
    Utilit.Lerp = function (form, to, delta) {
        if (form == to)
            return to;
        if (form > to) {
            var next = form - delta;
            if (next <= to)
                return to;
            return next;
        }
        else if (form < to) {
            var next = form + delta;
            if (next >= to)
                return to;
            return next;
        }
    };
    Utilit.lerpEulerAngle = function (form, to, delta) {
        var form = form % 360;
        form = form >= 0 ? form : (360 + form);
        var to = to % 360;
        to = to >= 0 ? to : (360 + to);
        var dis = Math.abs(to - form);
        if (dis > 180) {
            if (form < to)
                to = to - 360;
            else if (form > to)
                to = to + 360;
        }
        var next = Utilit.Lerp(form, to, delta);
        return next;
    };
    Utilit.getRotationByDir = function (v) {
        var dotValue = (v.x * Utilit.poinDown.x) + (v.y * Utilit.poinDown.y);
        var cos = dotValue / (v.distance(0, 0) * Utilit.poinDown.distance(0, 0));
        var radian = Math.acos(cos);
        var rotation = radian / (2 * Math.PI) * 360;
        if (v.x < 0) {
            rotation = -rotation;
        }
        return rotation;
    };
    Utilit.getRotationByDirOn3DSpace = function (v) {
        var dotValue = (v.x * Utilit.poinUp.x) + (v.y * Utilit.poinUp.y);
        var cos = dotValue / (v.distance(0, 0) * Utilit.poinUp.distance(0, 0));
        var radian = Math.acos(cos);
        var rotation = radian / (2 * Math.PI) * 360;
        if (v.x < 0) {
            rotation = rotation + (180 - rotation) * 2;
        }
        return rotation;
    };
    Utilit.getDirByRotation = function (rotation) {
        var radian = (rotation - 90) * Math.PI / 180; // -90 是转换到场景坐标系
        var x = Math.cos(radian);
        var y = Math.sin(radian);
        var point = new Laya.Point(x, y);
        point.normalize();
        return point;
    };
    Utilit.getDirDirAngle = function (dir1, dir2) {
        var dotValue = (dir1.x * dir2.x) + (dir1.y * dir2.y);
        var cos = dotValue / (dir1.distance(0, 0) * dir2.distance(0, 0));
        var radian = Math.acos(cos);
        var angle = radian / (2 * Math.PI) * 360;
        return angle;
    };
    Utilit.getDirScalarLength = function (dir) {
        var sl = Math.sqrt(dir.x * dir.x + dir.y * dir.y);
        return sl;
    };
    Utilit.setSpOnParentCenter = function (sp) {
        if (null == sp.parent)
            return;
        var psp = sp.parent;
        var x = 0;
        var y = 0;
        var x = x - sp.width / 2 * sp.scaleX + psp.width / 2;
        var y = y - sp.height / 2 * sp.scaleY + psp.height / 2;
        sp.x = x;
        sp.y = y;
    };
    Utilit.getPointToLineDistance = function (x, y, LineStart, LineEnd) {
        var toStartDir = new Laya.Point(x - LineStart.x, y - LineStart.y);
        var toEndDir = new Laya.Point(x - LineEnd.x, y - LineEnd.y);
        var lineDir = new Laya.Point(LineEnd.x - LineStart.y, LineEnd.y - LineStart.y);
        var dotToStartDir = (lineDir.x * toStartDir.x) + (lineDir.y * toStartDir.y);
        if (dotToStartDir <= 0) {
            return toStartDir.distance(0, 0);
        }
        var dotToEndDir = (lineDir.x * toEndDir.x) + (lineDir.y * toEndDir.y);
        if (dotToEndDir <= 0) {
            return toEndDir.distance(0, 0);
        }
        var toStartDis = toStartDir.distance(0, 0);
        var lineDirDis = lineDir.distance(0, 0);
        var cos = dotToStartDir / (toStartDis * lineDirDis);
        var radians = Math.acos(cos);
        var dis = Math.sin(radians) * toStartDis;
        return dis;
    };
    Utilit.isIphoneX = function () {
        if (!Laya.Browser.onIPhone)
            return false;
        if ((Laya.Browser.width == 2436 && Laya.Browser.height == 1125)
            || (Laya.Browser.height == 2436 && Laya.Browser.width == 1125)) {
            return true;
        }
        return false;
    };
    Utilit.isIphone = function () {
        return Laya.Browser.onIPhone;
    };
    Utilit.getChild = function (node, name) {
        for (var i = 0; i < node.numChildren; ++i) {
            var child = node.getChildAt(i);
            if (child.name == name) {
                return child;
            }
            else {
                var target = Utilit.getChild(child, name);
                if (target)
                    return target;
            }
        }
        return null;
    };
    Utilit.OriginStageWidth = 1334;
    Utilit.OriginStageHeight = 750;
    Utilit.grayscaleMat = [0.3086, 0.6094, 0.0820, 0, 0,
        0.3086, 0.6094, 0.0820, 0, 0,
        0.3086, 0.6094, 0.0820, 0, 0,
        0, 0, 0, 1, 0];
    Utilit.grayscaleFilter = new Laya.ColorFilter(Utilit.grayscaleMat);
    Utilit.poinDown = new Laya.Point(0, -1);
    Utilit.poinUp = new Laya.Point(0, 1);
    return Utilit;
}());
exports.default = Utilit;
},{}],33:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var EventDef_1 = require("../../Event/EventDef");
var EventMgr_1 = require("../../Event/EventMgr");
var CachedWXBannerAd_1 = require("../../CachedWXBannerAd");
/**
 * 狂点窗口使用范例如下
    //首先判断狂点功能开关WudianMgr.WudianFlag是否打开，如果没打开就直接跳过整个逻辑
    WudianMgr.GetIpBlockState();//在游戏里初始化的时候调用这个方法初始化Ip屏蔽flag
    //将这段代码插入需要调用狂点窗口的地方
    let data : any = {};
    //狂点逻辑完成后的回调方法
    data.Complete = function(){
        console.log("狂点按钮结束");//在这里写入狂点窗口结束后需要调用的逻辑，例如弹出结算页面
    }
    // 完成点击之后获得的奖励数量，依照各项目不同自行实现
    data.PrizeCount = 30;
    // 在调用窗口前必须关闭当前正在显示的官方Banner广告，这个窗口才能正常运行，具体的逻辑各人需自行实现
    // 而且关闭官方Banner可以稍微提早一些，避免频繁调用出错或者不稳定
    Event_PK_Mgr.instance.dispatch(Event_PK_Def.AD_CloseBanner, true);//这句代码是我用来关闭官方Banner，各项目自行实现
    ViewMgr.instance.openView(ViewDef.ClickGetPrize,data);
 *
 * @export
 * @class ClickGetPrize
 * @extends {ViewBase}
 */
var ClickGetPrize = /** @class */ (function (_super) {
    __extends(ClickGetPrize, _super);
    function ClickGetPrize() {
        var _this = _super.call(this) || this;
        _this._totalClickTimer = 22; //用户一直没中套路，那么点击了这么多次都还是让他继续玩下去，不要卡死程序
        _this._needClickTime = 10; //一共点多少次能够获得奖励，用于显示进度条
        _this._bannerClickTime = 7; //点多少次开始显示bannerr套路用户，可微调    
        return _this;
    }
    // private _wudianLoadFlag: boolean;
    ClickGetPrize.prototype.onAwake = function () {
        this._click_Btn = this.owner.getChildByName("Click_Btn");
        this._click_Btn.on(Laya.Event.CLICK, this, this.ButtonClicked);
        this._arrow_Img = this._click_Btn.getChildByName("Arrow_Img");
        this._bg = this.owner.getChildByName("BG");
        this._open_Btn = this._bg.getChildByName("Open_Btn");
        this._getPrize_View = this.owner.getChildByName("GetPrize_View");
        this._prizeCount_Text = this._getPrize_View.getChildByName("PrizeCount_Text");
        this._confirm_Btn = this._getPrize_View.getChildByName("Confirm_Btn");
        this._getPrize_View.visible = false;
        this._clickTime_PBar = this._bg.getChildByName("ClickTime_PBar");
        this._clickTime_PBar$Bar = this._clickTime_PBar.getChildByName("ClickTime_PBar$Bar");
        this._clickBarOriginalWidth = this._clickTime_PBar$Bar.width;
        this._bannerAd_View = this.owner.getChildByName("BannerAd_View");
        this._clickTime_PBar$Bar.width = 0;
        this._clickTime = 0;
        this._totalClickTime = 0;
        //EventMgr.instance.regOnceEvent(EventDef.AD_WudianBanner_LoadComplete, this, this.WudianLoadComplete);
    };
    ClickGetPrize.prototype.onUpdate = function () {
        /* 箭头上下移动 */
        if (this._arrowUp) {
            this._arrow_Img.top += Laya.timer.delta / 5;
            if (this._arrow_Img.top > -140) {
                this._arrowUp = false;
            }
        }
        else {
            this._arrow_Img.top -= Laya.timer.delta / 5;
            if (this._arrow_Img.top < -180) {
                this._arrowUp = true;
            }
        }
        /* 按钮不按，进度条自动退回 */
        if (!this._bannerClicked) {
            var spd = 2 + (this._clickTime_PBar$Bar.width / this._clickBarOriginalWidth) * 6;
            if (this._clickTime_PBar$Bar.width >= spd) {
                this._clickTime_PBar$Bar.width -= spd;
            }
            if ((this._clickTime_PBar$Bar.width / this._clickBarOriginalWidth) + 0.1 < (this._clickTime / this._needClickTime)) {
                this._clickTime--;
            }
        }
        // else {
        //     if (this._clickTime_PBar$Bar.width <= this._clickBarOriginalWidth) {
        //         this._clickTime_PBar$Bar.width += 2;
        //         if (this._clickTime_PBar$Bar.width > this._clickBarOriginalWidth) {
        //             this._clickTime_PBar$Bar.width = this._clickBarOriginalWidth
        //         }
        //     }
        // }
    };
    /**
     * 打开Banner
     *
     * @param {*} [data]
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.openView = function (data) {
        this._compeletFunction = data.Complete;
        this._compeleteHandler = data.CompleteHander;
        this._prizeCount = data.PrizeCount;
        _super.prototype.openView.call(this, data);
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_CloseBanner);
    };
    /**
     * 用户成功获得奖励
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.OpenPrizeWindow = function () {
        this._bg.visible = false;
        var self = this;
        this._prizeCount_Text.text = this._prizeCount.toString();
        this._getPrize_View.visible = true;
        /* 确认按钮 */
        this._confirm_Btn.once(Laya.Event.CLICK, this, this.closeView);
    };
    /**
     * 误点预加载完成
     *
     * @memberof ClickGetPrize
     */
    // WudianLoadComplete() {
    //     console.log("WudianBanner预加载完毕");
    //     this._wudianLoadFlag = true;
    // }
    /**
     * 将Banner显示
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.ShowBanner = function () {
        console.log("AD_WudianBanner_Show");
        CachedWXBannerAd_1.default.show();
    };
    /**
     * 狂点按钮逻辑
     *
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.ButtonClicked = function () {
        this._clickTime++;
        this._totalClickTime++;
        //nanner一直没加载成功,保持进度条
        if (this._clickTime > this._needClickTime) {
            this._clickTime = this._needClickTime;
        }
        if (this._clickTime >= this._bannerClickTime /*&& this._wudianLoadFlag*/) {
            if (this._clickTime >= this._needClickTime) {
                this._clickTime = this._needClickTime - 1;
            }
            this._bannerClicked = true;
            console.log("误点Banner套路启动");
            //用户连点，出banner
            this.ShowBanner();
            Laya.timer.once(2000, this, function () {
                this.BannerClicked();
            });
        }
        //用户一直没被套路到，让他继续玩
        else if (this._totalClickTime > this._totalClickTimer) {
            console.log("用户一直没点到，放他一马", this._totalClickTime);
            this.BannerClicked();
        }
        var progress = (this._clickTime / this._needClickTime) * this._clickBarOriginalWidth;
        this._clickTime_PBar$Bar.width = progress;
    };
    /**
     * Banner已经点击之后，让用户获得奖励
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.BannerClicked = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_WudianBanner_Hide);
        this._bannerClicked = true;
        this._clickTime = this._needClickTime;
        this._clickTime_PBar$Bar.width = this._clickBarOriginalWidth;
        this._click_Btn.visible = false;
        this._open_Btn.visible = true;
        // this._bannerAd_View.visible = false;
        // this._bannerAd_View.active = false;
        this.OpenPrizeWindow();
    };
    ClickGetPrize.prototype.onClose = function () {
        CachedWXBannerAd_1.default.hide();
        if (this._compeletFunction) {
            this._compeletFunction();
        }
        if (this._compeleteHandler) {
            this._compeleteHandler.run();
        }
    };
    return ClickGetPrize;
}(ViewBase_1.default));
exports.default = ClickGetPrize;
},{"../../CachedWXBannerAd":3,"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../View/ViewBase":38}],34:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BannerAdView_1 = require("../../ShareAd/View/BannerAdView");
var UniversalBottomZone = /** @class */ (function (_super) {
    __extends(UniversalBottomZone, _super);
    function UniversalBottomZone() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UniversalBottomZone.prototype.onAwake = function () {
        this._ownerSprite = this.owner;
        this._autoZone = this._ownerSprite.getChildByName("AutoZone");
        this._loopADZone = this._ownerSprite.getChildByName("LoopAD");
        this._bannerADZone = this._ownerSprite.getChildByName("BannerAD");
        this._bannerAd = this._bannerADZone.getComponent(BannerAdView_1.default);
    };
    UniversalBottomZone.prototype.onEnable = function () {
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            this._autoZone.bottom = this._loopADZone.height + this._bannerADZone.height;
            this._loopADZone.bottom = this._bannerADZone.height;
            this._bannerADZone.visible = true;
        }
        else {
            this._autoZone.bottom = this._loopADZone.height;
            this._loopADZone.bottom = 0;
            this._bannerADZone.visible = false;
        }
    };
    UniversalBottomZone.prototype.onDisable = function () {
    };
    UniversalBottomZone.prototype.onUpdate = function () {
        if (!this._bannerADZone.visible) {
            // this._bannerAd.clearWXBaner();
        }
    };
    return UniversalBottomZone;
}(Laya.Script));
exports.default = UniversalBottomZone;
},{"../../ShareAd/View/BannerAdView":23}],35:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var LoadingView = /** @class */ (function (_super) {
    __extends(LoadingView, _super);
    function LoadingView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._processWidth = 0;
        return _this;
    }
    LoadingView.prototype.onAwake = function () {
        this._bg = this.owner.getChildByName("Bg");
        this._processBarBg = this._bg.getChildByName("processBarBg");
        if (this._processBarBg) {
            this._processBar = this._processBarBg.getChildByName("processBar");
            this._processWidth = this._processBar.width;
        }
        else {
            this._processBar = this._bg.getChildByName("processBar");
            this._processWidth = Laya.stage.width;
        }
    };
    LoadingView.prototype.onEnable = function () {
        _super.prototype.onEnable.call(this);
    };
    LoadingView.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
    };
    LoadingView.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
    };
    LoadingView.prototype.onUpdate = function () {
        this._bg.width = Laya.stage.width;
        this._bg.height = Laya.stage.height;
        if (!this._processBarBg) {
            this._processWidth = Laya.stage.width;
        }
    };
    LoadingView.prototype.setProcess = function (process) {
        if (process < 0)
            process = 0;
        if (process > 1)
            process = 1;
        var width = this._processWidth * process;
        if (width < 1)
            width = 1;
        this._processBar.width = width;
    };
    return LoadingView;
}(ViewBase_1.default));
exports.default = LoadingView;
},{"../ViewBase":38}],36:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var TipsView = /** @class */ (function (_super) {
    __extends(TipsView, _super);
    function TipsView() {
        return _super.call(this) || this;
    }
    TipsView.prototype.onAwake = function () {
        this._bg = this.owner.getChildByName("Bg");
        this._bg.x = Laya.stage.width / 2 - this._bg.width / 2;
        this._tipsText = this._bg.getChildByName("Text");
    };
    TipsView.prototype.openView = function (data) {
        _super.prototype.openView.call(this, data);
        this.setTipsMsg(data);
        Laya.timer.clearAll(this);
        var self = this;
        Laya.timer.once(3000, this, function () {
            self.closeView();
        });
    };
    TipsView.prototype.setTipsMsg = function (msg) {
        this._tipsText.text = msg;
    };
    return TipsView;
}(ViewBase_1.default));
exports.default = TipsView;
},{"../ViewBase":38}],37:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TwinkleSprite = /** @class */ (function (_super) {
    __extends(TwinkleSprite, _super);
    function TwinkleSprite() {
        var _this = _super.call(this) || this;
        /** @prop {name:TwinkleSpeed, tips:"闪动速度", type:Number, default:1000}*/
        _this.TwinkleSpeed = 1000;
        /** @prop {name:TwinkleMinSize, tips:"最小缩放", type:Number, default:0.95}*/
        _this.TwinkleMinSize = 0.95;
        /** @prop {name:TwinkleMaxSize, tips:"最大缩放", type:Number, default:1.05}*/
        _this.TwinkleMaxSize = 1.05;
        _this._aniForward = false;
        _this._fontSize = 25;
        _this._originSize = 1;
        return _this;
    }
    TwinkleSprite.prototype.onAwake = function () {
        this._displaySp = this.owner;
        this._disText = this.owner.getChildByName("TitelText");
        this._originSize = this._displaySp.scaleX;
        if (this._disText != null) {
            this._disText.text = "";
            this._fontSize = this._disText.fontSize;
        }
    };
    TwinkleSprite.prototype.onEnable = function () {
        this._displaySp.scale(this._originSize, this._originSize);
    };
    TwinkleSprite.prototype.onDisable = function () {
    };
    TwinkleSprite.prototype.onUpdate = function () {
        this.displayAni();
    };
    TwinkleSprite.prototype.displayAni = function () {
        if (!this._aniForward) {
            var scale = this._displaySp.scaleX - Laya.timer.delta / this.TwinkleSpeed;
            scale = Math.max(scale, this.TwinkleMinSize * this._originSize);
            this._displaySp.scale(scale, scale);
            if (this._displaySp.scaleX <= this.TwinkleMinSize * this._originSize) {
                this._aniForward = true;
            }
        }
        else {
            var scale = this._displaySp.scaleX + Laya.timer.delta / this.TwinkleSpeed;
            scale = Math.min(scale, this.TwinkleMaxSize * this._originSize);
            this._displaySp.scale(scale, scale);
            if (this._displaySp.scaleX >= this.TwinkleMaxSize * this._originSize) {
                this._aniForward = false;
            }
        }
    };
    return TwinkleSprite;
}(Laya.Script));
exports.default = TwinkleSprite;
},{}],38:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("../Mgr/ViewMgr");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
//界面基类，所有功能模块界面继承于这个类。这种类型的界面不能嵌套。
var ViewBase = /** @class */ (function (_super) {
    __extends(ViewBase, _super);
    function ViewBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onCloseEvent = null;
        _this.onOpenEvent = null;
        _this._viewBase = true;
        _this._viewDef = ViewMgr_1.ViewDef.None;
        _this._data = {};
        return _this;
    }
    ViewBase.prototype.onAwake = function () {
        //删除时自动释放
        this.owner.autoDestroyAtClosed = true;
        this.owner.height = Laya.stage.height;
    };
    ViewBase.prototype.onEnable = function () {
        this.addEvent();
    };
    ViewBase.prototype.onDisable = function () {
        this.removeEvent();
    };
    ViewBase.prototype.onDestroy = function () {
        this.removeEvent();
    };
    ViewBase.prototype.openView = function (data) {
        this._data = data;
        this.show();
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnViewOpen, { view: this._viewDef });
        if (this.onOpenEvent) {
            this.onOpenEvent();
        }
    };
    ViewBase.prototype.addEvent = function () {
    };
    ViewBase.prototype.removeEvent = function () {
        Laya.timer.clearAll(this);
    };
    ViewBase.prototype.closeView = function () {
        ViewMgr_1.default.instance.closeView(this._viewDef);
    };
    ViewBase.prototype.hide = function () {
        this.owner.visible = false;
        this.onHide();
    };
    ViewBase.prototype.show = function () {
        this.owner.visible = true;
        this.onShow();
    };
    ViewBase.prototype.viewIsHide = function () {
        return this.owner.alpha == 0;
    };
    ViewBase.prototype.onHide = function () { };
    ViewBase.prototype.onShow = function () { };
    ViewBase.prototype.onClose = function () {
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this);
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnViewClose, { view: this._viewDef });
        if (this.onCloseEvent) {
            this.onCloseEvent();
        }
    };
    return ViewBase;
}(Laya.Script));
exports.default = ViewBase;
},{"../Event/EventDef":5,"../Event/EventMgr":6,"../Mgr/ViewMgr":14}],39:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WXAPI = /** @class */ (function () {
    function WXAPI() {
    }
    WXAPI.wxLogin = function (onSuccess, onFail) {
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window.wx.login({
                success: function (res) {
                    if (res.code) {
                        var code = res.code;
                        onSuccess(code);
                        console.log("登陆成功,获取到code : " + code);
                    }
                }
            });
        }
    };
    WXAPI.onRewardedVideoAdLoad = function () {
        console.log('激励视频 广告加载完成');
    };
    WXAPI.onRewardedVideoAdError = function (err) {
        console.log('激励视频 广告加载失败' + err);
        if (WXAPI._onRewardedVideoAdFailed) {
            WXAPI._onRewardedVideoAdFailed();
        }
    };
    WXAPI.onRewardedVideoAdClose = function (res) {
        if ((res && res.isEnded) || res == null) {
            console.log('激励视频 已完整观看');
            if (WXAPI._onRewardedVideoAdClose) {
                WXAPI._onRewardedVideoAdClose(true);
            }
        }
        else {
            console.log('激励视频 未完整观看');
            if (WXAPI._onRewardedVideoAdClose) {
                WXAPI._onRewardedVideoAdClose(false);
            }
        }
    };
    WXAPI.regRewardedVideoAdEvent = function (rewardedVideoAd) {
        rewardedVideoAd.onLoad(WXAPI.onRewardedVideoAdLoad);
        rewardedVideoAd.onError(WXAPI.onRewardedVideoAdError);
        rewardedVideoAd.onClose(WXAPI.onRewardedVideoAdClose);
        WXAPI._isRegRewardedVideoAdEvent = true;
    };
    WXAPI.showRewardedVideoAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onMiniGame) {
            WXAPI._onRewardedVideoAdClose = onAdClose;
            WXAPI._onRewardedVideoAdFailed = onFailed;
            var rewardedVideoAd = Laya.Browser.window["wx"].createRewardedVideoAd({
                adUnitId: WXAPI.adUnitId,
            });
            if (!WXAPI._isRegRewardedVideoAdEvent) {
                WXAPI.regRewardedVideoAdEvent(rewardedVideoAd);
            }
            rewardedVideoAd.load().then(function () {
                var promise = rewardedVideoAd.show();
                promise.then(function () { return console.log('激励视频 广告显示成功'); });
                promise.catch(function (err) {
                    rewardedVideoAd.load()
                        .then(function () { return rewardedVideoAd.show(); })
                        .catch(function (err) {
                        console.log('激励视频 广告显示失败');
                        if (onFailed) {
                            onFailed();
                        }
                    });
                });
            }).catch(function (err) {
                console.log('激励视频 广告加载失败');
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose(true);
        }
    };
    //----------------------------------------------------------------
    //-------------------------小游戏跳转---------------------------
    WXAPI.navigateToMiniProgram = function (appId, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onMiniGame) {
            console.log("跳转游戏： " + appId);
            Laya.Browser.window["wx"].navigateToMiniProgram({
                appId: appId,
                path: path,
                extraData: {
                    foo: 'bar'
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
                complete: function (res) {
                    if (onComplate) {
                        onComplate(res);
                    }
                }
            });
        }
    };
    WXAPI.share = function (complate, titel, imageUrl) {
        var _this = this;
        if (Laya.Browser.onMiniGame) {
            WXAPI._onShow = function () {
                Laya.Browser.window["wx"].offShow(WXAPI._onShow);
                WXAPI._onShow = null;
                var c = Date.now() - _this._lastShareTime;
                if (complate) {
                    if (Date.now() - _this._lastShareTime > 2000) {
                        complate(true);
                    }
                    else {
                        complate(false);
                    }
                }
            };
            Laya.Browser.window["wx"].onShow(WXAPI._onShow);
            this._lastShareTime = Date.now();
            Laya.Browser.window["wx"].shareAppMessage({
                title: titel,
                imageUrl: imageUrl
            });
        }
    };
    //----------------------------------------------------------------------
    //--------------------插屏幕广告---------------------------------------
    WXAPI.showInterstitialAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onMiniGame) {
            var interstitialAd = Laya.Browser.window["wx"].createInterstitialAd({
                adUnitId: WXAPI.InsAdUnitId,
            });
            interstitialAd.onLoad(function () {
                console.log('插屏广告 加载完成');
                interstitialAd.show().catch(function (err) {
                    console.log('插屏广告 显示失败 ：' + err);
                    if (onFailed) {
                        onFailed();
                    }
                });
            });
            interstitialAd.onError(function (err) {
                console.log('插屏广告 加载失败' + err);
                if (onFailed) {
                    onFailed();
                }
            });
            interstitialAd.onClose(function () {
                console.log('插屏广告 关闭');
                if (onAdClose) {
                    onAdClose();
                }
            });
        }
        else {
            onAdClose();
        }
    };
    /**
     * 得到小程序启动参数的同步方法，可得到一个Object返回值，返回值具体的数据结构在下面的列表中
     * scene	number	启动小游戏的场景值
     * query	Object	启动小游戏的 query 参数
     * shareTicket	string	shareTicket，详见获取更多转发信息
     * referrerInfo	object	来源信息。从另一个小程序、公众号或 App 进入小程序时返回。否则返回 {}
     * https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.getLaunchOptionsSync.html
     * @static
     * @returns {LaunchOptions}
     * @memberof WXAPI
     */
    WXAPI.getLaunchOptionsSync = function () {
        // let result = { scene: 0, query: null, shareTicket: "", referrerInfo: null };
        if (Laya.Browser.onMiniGame) {
            var obj_1 = Laya.Browser.window["wx"].getLaunchOptionsSync();
            console.log("场景值 " + obj_1.scene);
            var str = JSON.stringify(obj_1.query);
            console.log("Query参数 " + str);
            var key = obj_1.query["key"];
            console.log("Query参数：key " + key);
            console.log("ShareTicket " + obj_1.shareTicket);
            console.log("ReferrerInfo.appId " + obj_1.referrerInfo.appId);
            console.log("ReferrerInfo.extraData " + obj_1.referrerInfo.extraData);
            return obj_1;
        }
        var obj = { scene: 1001, query: "", shareTicket: "", appId: "", extraData: "" };
        return obj;
    };
    //----------------------------------------------------------------------
    /**
     * 打开微信左上角分享转发点击事件,在游戏逻辑中调用一次即可
     * 注意此方法只会在真机上执行，在微信模拟器环境下点击转发按钮什么都不会发生
     *
     * @static
     * @param {string} titel 分享标题
     * @param {string} imageUrl 分享图片地址
     * @param {Function} [success] 成功回调函数(可不填)
     * @param {Function} [fail] 失败回调函数(可不填)
     * @param {Function} [complate] 完成回调函数，成功失败都会执行(可不填)
     * @memberof WXAPI
     */
    WXAPI.SetShareMenu = function (titel, imageUrl, success, fail, complate) {
        if (Laya.Browser.onMiniGame) {
            console.log("小游戏设置转发按钮");
            Laya.Browser.window["wx"].showShareMenu({
                withShareTicket: false,
                success: success,
                fail: fail,
                complete: complate
            });
            Laya.Browser.window["wx"].onShareAppMessage(function () {
                return {
                    title: titel,
                    imageUrl: imageUrl
                };
            });
        }
    };
    //检测更新
    WXAPI.checkUpdate = function () {
        if (Laya.Browser.onMiniGame) {
            var updateManager = Laya.Browser.window["wx"].getUpdateManager();
            updateManager.onCheckForUpdate(function (res) {
                console.log("是否需要更新 : ", res.hasUpdate);
            });
            updateManager.onUpdateReady(function () {
                Laya.Browser.window["wx"].showModal({
                    title: '更新提示',
                    content: '新版本已经准备好，是否重启小游戏？',
                    success: function (res) {
                        if (res.confirm) {
                            updateManager.applyUpdate();
                        }
                    }
                });
            });
            updateManager.onUpdateFailed(function () {
                console.log("新版本下载失败!!!");
            });
        }
    };
    WXAPI.adUnitId = "adunit-43f7c064f4ec1f68";
    WXAPI.bannerAdUnitId = "adunit-d4a3543959b0b2f4";
    WXAPI.InsAdUnitId = " adunit-d9a4a1482bb86892";
    //-------------------------激励视频---------------------------------
    WXAPI._isRegRewardedVideoAdEvent = false;
    WXAPI._onRewardedVideoAdFailed = null;
    WXAPI._onRewardedVideoAdClose = null;
    //----------------------------------------------------------------------
    //---------------------分享----------------------------------------
    WXAPI._onShow = null;
    WXAPI._lastShareTime = 0;
    return WXAPI;
}());
exports.default = WXAPI;
},{}],40:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PlayerController_1 = require("./PlayerController");
var ColliderManager_1 = require("./ColliderManager");
var MyCollider_1 = require("./MyCollider");
var MySoundMgr_1 = require("../MyMgr/MySoundMgr");
/**
 * 用于控制回旋镖飞行的类
 *
 * @export
 * @class Boomerang
 * @extends {Laya.Script3D}
 */
var Boomerang = /** @class */ (function (_super) {
    __extends(Boomerang, _super);
    function Boomerang() {
        return _super.call(this) || this;
    }
    /**
     *
     *
     * @memberof Boomerang
     */
    Boomerang.prototype.onAwake = function () {
        this._boomerang = this.owner;
        this._boomerangeEffect = this.owner.getChildByName("TailRender");
        this._collider = new MyCollider_1.default(this._boomerang, 0.7);
        this.Hide();
    };
    /**
     * 隐藏回旋镖
     *
     * @memberof Boomerang
     */
    Boomerang.prototype.Hide = function () {
        this.DisableCollider();
        this._boomerangeEffect.active = false;
        this._boomerang.active = false;
    };
    /**
     * 禁止碰撞器
     *
     * @memberof Boomerang
     */
    Boomerang.prototype.DisableCollider = function () {
        ColliderManager_1.default.Instance.RemoveDynamicColliders(this._collider);
    };
    /**
     * 显示回旋镖以及其启用其刚体刚体组件
     *
     * @memberof Boomerang
     */
    Boomerang.prototype.Show = function () {
        ColliderManager_1.default.Instance.AddDynamicColliders(this._collider);
        this._boomerangeEffect.active = true;
        this._boomerang.active = true;
    };
    // /**
    //  * 每帧调用函数，用于控制飞行位置
    //  * 
    //  * @memberof Boomerang
    //  */
    // onUpdate() {
    //     // if (this._isFLying) {
    //     //     this._boomerang.transform.rotate(new Laya.Vector3(0, 10, 0), false, false);
    //     //     if (!this.FlightBySpeed(this._speed)) {
    //     //         this.Hide();
    //     //         PlayerController.Instance.GetBoomerange();
    //     //     }
    //     // }
    // }
    /**
     * 每帧执行一次的飞行函数
     *
     * @memberof Boomerang
     */
    Boomerang.prototype.FlyByFrame = function () {
        Laya.timer.clearAll(this);
        this.owner.frameLoop(1, this, function () {
            this._boomerang.transform.rotate(new Laya.Vector3(0, 10, 0), false, false);
            if (!this.FlightBySpeed(this._speed)) {
                this.Hide();
                Laya.timer.clearAll(this);
                PlayerController_1.default.Instance.GetBoomerange();
            }
        });
    };
    /**
     * 碰到障碍物后往回倒飞的函数
     * 启动时会自动设置刚体不启用，防止二次碰撞
     *
     * @memberof Boomerang
     */
    Boomerang.prototype.FlyBack = function () {
        this.DisableCollider();
        Laya.timer.clearAll(this);
        this.owner.frameLoop(1, this, function () {
            this._boomerang.transform.rotate(new Laya.Vector3(0, 10, 0), false, false);
            var currentpos = new Laya.Vector2(this.owner.transform.position.x, this.owner.transform.position.z);
            var distance = Laya.timer.delta * 0.001 * this._speed;
            ;
            if (this.Distance(currentpos, this._flightPoints[this._flightPoints.length - 1]) > distance) {
                var newpos = this.GetPointByDistance(currentpos, this._flightPoints[this._flightPoints.length - 1], distance);
                this.owner.transform.position = new Laya.Vector3(newpos.x, 1, newpos.y);
            }
            else {
                this.Hide();
                Laya.timer.clearAll(this);
                PlayerController_1.default.Instance.GetBoomerange();
            }
        });
    };
    // /**
    //  * 进入触发器
    //  * 
    //  * @param {Laya.PhysicsComponent} phy 
    //  * @memberof Boomerang
    //  */
    // onTriggerEnter(phy: Laya.PhysicsComponent) {
    //     // let name = phy.owner.name as String;
    //     // if (name.indexOf("Score") > -1) {
    //     //     this.TrigScore(phy);
    //     // }
    //     // else if (name.indexOf("Bomb") > -1) {
    //     // }
    //     // else if (name.indexOf("Obstacle") > -1) {
    //     //     this.FlyBack();
    //     // }
    // }
    // /**
    //  * 碰撞到得分物体
    //  * 
    //  * @param {Laya.PhysicsComponent} phy 
    //  * @memberof Boomerang
    //  */
    // TrigScore(phy: Laya.PhysicsComponent) {
    //     let anmi = phy.owner.getComponent(Laya.Animator) as Laya.Animator;
    //     let collider = phy.owner.getComponent(Laya.PhysicsCollider) as Laya.PhysicsCollider;
    //     phy.owner.timerOnce(1000, phy.owner, function () {
    //         this.destroy();
    //     });
    //     collider.destroy();
    //     anmi.play("Fracture");
    //     ColliderManager.Instance.CurrentScore--;
    // }
    // /**
    //  * 碰撞到炸弹
    //  * 
    //  * @param {Laya.PhysicsComponent} phy 
    //  * @memberof Boomerang
    //  */
    // TrigBomb(phy: Laya.PhysicsComponent) {
    // }
    // /**
    //  * 碰到障碍物
    //  * 
    //  * @param {Laya.PhysicsComponent} phy 
    //  * @memberof Boomerang
    //  */
    // TrigObstacle(phy: Laya.PhysicsComponent) {
    // }
    /**
     * 调用此函数用于丢出手中的回旋镖
     *
     * @param {Laya.Vector2[]} points 回旋镖路径点
     * @param {number} speed 回旋镖最快速度
     * @memberof Boomerang
     */
    Boomerang.prototype.Throw = function (points, speed) {
        this._isFLying = true;
        this._flightPointIndex = 0;
        this._flightPoints = points;
        this._lastPoint = points[0];
        var totaldistance = 0;
        for (var i = 0; i < points.length - 1; i++) {
            totaldistance += this.Distance(points[i], points[i + 1]);
        }
        this._speed = speed * (totaldistance / 120);
        this._speed = Math.max(20, Math.min(this._speed, 30));
        this._boomerang.transform.rotationEuler = new Laya.Vector3(-90, 0, 180);
        PlayerController_1.default.Instance.ClearLine();
        MySoundMgr_1.default.instance.playSound("回旋镖旋转");
        this.Show();
        this.FlyByFrame();
    };
    /**
     * 由于回旋镖飞行的路径点计算出来是一堆离散点，而且根据精度不同，得到点的数量不同
     * 而回旋鞭飞行是固定速度的，所以需要根据路径点和速度，计算下一帧回旋镖的位置
     *
     * @memberof Boomerang
     */
    Boomerang.prototype.FlightBySpeed = function (speed) {
        var distance = Laya.timer.delta * 0.001 * speed;
        while (true) {
            if (this._flightPointIndex < this._flightPoints.length - 1) {
                //两点之间的距离
                var distanceBetweenPoint = this.Distance(this._lastPoint, this._flightPoints[this._flightPointIndex + 1]);
                // this._tempdistance += distanceBetweenPoint;
                /*
                    如果两点之间的距离大于应该前进的距离
                    则终点的坐标是在这两点之间
                 */
                if (distanceBetweenPoint >= distance) {
                    this._lastPoint = this.GetPointByDistance(this._lastPoint, this._flightPoints[this._flightPointIndex + 1], distance);
                    // targetpoint = this.GetPointByDistance(this._flightPoints[this._flightPointIndex], this._flightPoints[this._flightPointIndex + 1], mileage);
                    var pos = new Laya.Vector3(this._lastPoint.x, 1, this._lastPoint.y);
                    this._boomerang.transform.position = pos;
                    // this._boomerang.transform.position = new Laya.Vector3(targetpoint.x + this._flightPoints[this._flightPointIndex].x, 1, 
                    //     targetpoint.y + this._flightPoints[this._flightPointIndex].y);
                    return true;
                }
                /* 如果两点的距离小于应该前进的距离，则把坐标设置为下一个点 */
                else {
                    distance -= distanceBetweenPoint;
                    this._flightPointIndex++;
                    this._lastPoint = this._flightPoints[this._flightPointIndex];
                }
            }
            else {
                var targetpoint = this._flightPoints[this._flightPointIndex];
                var pos = new Laya.Vector3(targetpoint.x, 1, targetpoint.y);
                this._boomerang.transform.position = pos;
                return false;
            }
        }
    };
    /**
     * 计算两点之间距离
     *
     * @param {Laya.Vector2} V0
     * @param {Laya.Vector2} V1
     * @returns
     * @memberof Boomerang
     */
    Boomerang.prototype.Distance = function (V0, V1) {
        var x = V1.x - V0.x;
        var y = V1.y - V0.y;
        return Math.sqrt(x * x + y * y);
    };
    /**
     * 从2点之间按照距离取中间点
     *
     * @param {Laya.Vector2} V0
     * @param {Laya.Vector2} V1
     * @param {number} distance
     * @returns
     * @memberof Boomerang
     */
    Boomerang.prototype.GetPointByDistance = function (V0, V1, distance) {
        var direction = new Laya.Point(V1.x - V0.x, V1.y - V0.y);
        direction.normalize();
        return new Laya.Vector2(direction.x * distance + V0.x, direction.y * distance + V0.y);
    };
    return Boomerang;
}(Laya.Script3D));
exports.default = Boomerang;
},{"../MyMgr/MySoundMgr":50,"./ColliderManager":41,"./MyCollider":43,"./PlayerController":44}],41:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyCollider_1 = require("./MyCollider");
var Boomerang_1 = require("./Boomerang");
var VibrateMgr_1 = require("../../Mgr/VibrateMgr");
var MySoundMgr_1 = require("../MyMgr/MySoundMgr");
var GameMgr_1 = require("../../Mgr/GameMgr");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var ColliderManager = /** @class */ (function (_super) {
    __extends(ColliderManager, _super);
    function ColliderManager() {
        var _this = _super.call(this) || this;
        _this._socreObjectCount = 0;
        _this._soundTime = 200;
        /**
         * 保存场景中静止碰撞体的数组
         *
         * @private
         * @type {Array<Laya.Sprite3D>}
         * @memberof ColliderManager
         */
        _this.staticColliders = [];
        /**
         * 场景中的动态碰撞体数组
         *
         * @private
         * @type {MyCollider}
         * @memberof ColliderManager
         */
        _this.dynamicColliders = [];
        return _this;
    }
    Object.defineProperty(ColliderManager.prototype, "CurrentScore", {
        get: function () {
            return this._currentScore;
        },
        set: function (v) {
            this._currentScore = v;
            if (this._currentScore == 0) {
                console.log("当前场景中得分物体为0,游戏结束");
                this.GameOver();
            }
        },
        enumerable: true,
        configurable: true
    });
    ColliderManager.prototype.onAwake = function () {
        ColliderManager.Instance = this;
        var rd = Math.floor(Math.random() * 4);
        var url = "res/Model/Score " + rd + ".lh";
        var res = Laya.Sprite3D.load(url, Laya.Handler.create(this, function (prefab) {
            this.ReplaceObjs(prefab);
            this.InitLev();
        }));
    };
    /**
     * 增加场景中的静止碰撞体
     *
     * @param {MyCollider} col
     * @memberof ColliderManager
     */
    ColliderManager.prototype.AddStaticColliders = function (col) {
        var added = false;
        for (var index = 0; index < this.staticColliders.length; index++) {
            if (this.staticColliders[index] == null) {
                this.staticColliders[index] = col;
                added = true;
                break;
            }
        }
        if (!added) {
            this.staticColliders.push(col);
        }
    };
    /**
     * 去除场景中的静态碰撞体
     *
     * @param {MyCollider} col
     * @memberof ColliderManager
     */
    ColliderManager.prototype.RemoveStaticColliders = function (col) {
        var index = this.staticColliders.indexOf(col);
        if (index > -1) {
            this.staticColliders.splice(index, 1);
        }
    };
    /**
     * 增加场景中动态碰撞体的方法
     *
     * @param {MyCollider} col
     * @memberof ColliderManager
     */
    ColliderManager.prototype.AddDynamicColliders = function (col) {
        var added = false;
        for (var index = 0; index < this.dynamicColliders.length; index++) {
            if (this.dynamicColliders[index] == null) {
                this.dynamicColliders[index] = col;
                added = true;
                break;
            }
        }
        if (!added) {
            this.dynamicColliders.push(col);
        }
    };
    /**
     * 去除场景中的动态碰撞体
     *
     * @param {MyCollider} col
     * @memberof ColliderManager
     */
    ColliderManager.prototype.RemoveDynamicColliders = function (col) {
        var index = this.dynamicColliders.indexOf(col);
        if (index > -1) {
            this.dynamicColliders.splice(index, 1);
        }
    };
    /**
     * 清空场景中所有的动态和静态碰撞体
     *
     * @memberof ColliderManager
     */
    ColliderManager.prototype.ResetColliders = function () {
        this.staticColliders = [];
        this.dynamicColliders = [];
    };
    // /**
    //  * 替换场景中的游戏物体
    //  * 
    //  * @memberof ColliderManager
    //  */
    ColliderManager.prototype.ReplaceObjs = function (prefab) {
        var gameobjects = GameMgr_1.default.getInstance().CurrentScene.getChildByName("GameObjects");
        for (var index = 0; index < gameobjects.numChildren; index++) {
            var child = gameobjects._children[index];
            var childname = child.name;
            if (childname.indexOf("Score_Fake") > -1) {
                var replace = Laya.Sprite3D.instantiate(prefab, child.parent);
                replace.transform.worldMatrix = child.transform.worldMatrix;
                child.removeSelf();
                child.destroy();
                gameobjects.setChildIndex(replace, index);
            }
        }
    };
    /**
     * 初始化关卡管理器
     *
     * @memberof ColliderManager
     */
    ColliderManager.prototype.InitLev = function () {
        var _this = this;
        var gameobjects = GameMgr_1.default.getInstance().CurrentScene.getChildByName("GameObjects");
        this._socreObjectCount = 0;
        this._currentScore = -1;
        var score = [];
        var obstacle = [];
        for (var index = 0; index < gameobjects.numChildren; index++) {
            var child = gameobjects._children[index];
            var childname = child.name;
            // if (childname.indexOf("Score_Fake") > -1) {
            //     let replace = Laya.Sprite3D.instantiate(this._prefab, child.parent);
            //     replace.transform.worldMatrix = child.transform.worldMatrix;
            //     child.removeSelf();
            //     child.destroy();
            //     gameobjects.setChildIndex(replace, index);
            //     child = replace;
            //     childname = replace.name;
            // }
            if (childname.indexOf("Score") > -1) {
                this._socreObjectCount++;
                score.push(new MyCollider_1.default(child, 0.7));
            }
            else if (childname.indexOf("Bomb") > -1) {
                score.push(new MyCollider_1.default(child, 0.7));
            }
            else if (childname.indexOf("Obstacle") > -1) {
                obstacle.push(new MyCollider_1.default(child, 0.4));
            }
        }
        obstacle.forEach(function (x) {
            _this.AddStaticColliders(x);
        });
        score.forEach(function (x) {
            _this.AddStaticColliders(x);
        });
        this._currentScore = this._socreObjectCount;
    };
    ColliderManager.prototype.onUpdate = function () {
        this.UpdateCollision();
    };
    /**
     * 更新碰撞循环
     *
     * @memberof ColliderManager
     */
    ColliderManager.prototype.UpdateCollision = function () {
        var _this = this;
        this.dynamicColliders.forEach(function (dy) {
            // let v0 = new Laya.Vector2(e.transform.position.x, e.transform.position.z);
            if (dy.Owner.name.indexOf("Bomb") > -1) {
                _this.staticColliders.forEach(function (st) {
                    if (dy.GetCollision(st)) {
                        var name_1 = st.Owner.name;
                        if (name_1.indexOf("Score") > -1) {
                            _this.TriggerScore(dy, st);
                        }
                    }
                });
                _this.RemoveDynamicColliders(dy);
                dy.Owner.destroy();
                dy = null;
            }
            else {
                _this.staticColliders.forEach(function (st) {
                    if (dy.GetCollision(st)) {
                        var name_2 = st.Owner.name;
                        //根据碰撞体类型决定碰撞效果
                        if (name_2.indexOf("Score") > -1) {
                            _this.TriggerScore(dy, st);
                        }
                        else if (name_2.indexOf("Obstacle") > -1) {
                            _this.TriggerObstacle(dy, st);
                        }
                        else if (name_2.indexOf("Bomb") > -1) {
                            _this.TriggerBomb(dy, st);
                        }
                    }
                });
            }
        });
    };
    /**
     * 触发炸弹
     *
     * @param {MyCollider} dycol
     * @param {MyCollider} stcol
     * @memberof ColliderManager
     */
    ColliderManager.prototype.TriggerBomb = function (dycol, stcol) {
        var anmi = stcol.Owner.getComponent(Laya.Animator);
        anmi.play("Explor");
        VibrateMgr_1.default.ibrateLong();
        Laya.timer.once(2000, this, function (col) {
            this.RemoveStaticColliders(col);
            col.SetColRadius(4.0);
            this.AddDynamicColliders(col);
        }, [stcol], false);
    };
    /**
     * 碰到得分物体
     *
     * @param {MyCollider} dycol
     * @param {MyCollider} stcol
     * @memberof ColliderManager
     */
    ColliderManager.prototype.TriggerScore = function (dycol, stcol) {
        // if(this._soundTime<this._soundTimer){
        // }
        // else{
        // }
        MySoundMgr_1.default.instance.playSound("回旋镖击碎物体");
        this.RemoveStaticColliders(stcol);
        var anmi = stcol.Owner.getComponent(Laya.Animator);
        if (anmi == null && stcol.Owner.numChildren > 0) {
            anmi = stcol.Owner.getChildAt(0).getComponent(Laya.Animator);
        }
        anmi.play("Fracture");
        VibrateMgr_1.default.vibrateShort();
        ColliderManager.Instance.CurrentScore--;
        stcol.Owner.timerOnce(1000, stcol.Owner, function () {
            this.destroy();
        });
    };
    /**
     * 碰到障碍物
     *
     * @memberof ColliderManager
     */
    ColliderManager.prototype.TriggerObstacle = function (dycol, stcol) {
        if (dycol.Owner.name == "Boomrang") {
            dycol.Owner.getComponent(Boomerang_1.default).FlyBack();
        }
    };
    /**
     *
     *
     * @memberof ColliderManager
     */
    ColliderManager.prototype.StopCollision = function () {
    };
    /**
     * 游戏结束
     *
     * @memberof ColliderManager
     */
    ColliderManager.prototype.GameOver = function () {
        // GameMgr.getInstance().GameOver();
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnLevelComplate);
    };
    Object.defineProperty(ColliderManager.prototype, "MaxScore", {
        /**
         * 得到场景中所有得分物体
         *
         * @readonly
         * @type {number}
         * @memberof ColliderManager
         */
        get: function () {
            return this._socreObjectCount;
        },
        enumerable: true,
        configurable: true
    });
    return ColliderManager;
}(Laya.Script));
exports.default = ColliderManager;
},{"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../Mgr/GameMgr":10,"../../Mgr/VibrateMgr":13,"../MyMgr/MySoundMgr":50,"./Boomerang":40,"./MyCollider":43}],42:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FlightPath = /** @class */ (function () {
    function FlightPath(h0, h1, w, myPos) {
        this.h0 = h0;
        this.h1 = h1;
        this.w = w;
        this.myPos = myPos;
    }
    /**
     * 用于计算贝塞尔曲线路径点的方法
     *
     * @param {number} stretching 拉伸值，决定这个曲线的长宽
     * @param {number} angle 角度
     * @returns 算好的路径点数组
     * @memberof FlightPath
     */
    FlightPath.prototype.GetOriginalPos = function (angle, stretching) {
        var originalPos = [];
        var mypos0 = this.V2Add(new Laya.Vector2(0, 0), this.myPos);
        var w1_1 = this.w * stretching;
        var h0_1 = this.h0 * stretching;
        var h1_1 = this.h1 * stretching;
        var r = Math.sqrt(w1_1 * w1_1 + h0_1 * h0_1);
        var rad1 = this.GetAngle(Math.atan2(w1_1, h0_1));
        var mypos1 = this.V2Add(new Laya.Vector2(Math.sin(this.GetRad(rad1 + angle)) * r, Math.cos(this.GetRad(rad1 + angle)) * r), this.myPos);
        var rad2 = this.GetRad(angle);
        var mypos2 = this.V2Add(new Laya.Vector2(Math.sin(rad2) * (h0_1 + h1_1), Math.cos(rad2) * (h0_1 + h1_1)), this.myPos);
        var mypos3 = this.V2Add(new Laya.Vector2(Math.sin(this.GetRad(-rad1 + angle)) * r, Math.cos(this.GetRad(-rad1 + angle)) * r), this.myPos);
        var mypos4 = mypos0;
        var point = [];
        for (var i = 0; i <= 100; i = i + 1) {
            /* 一次降阶 */
            var pos1 = this.Lerp(mypos0, mypos1, i / 100);
            var pos2 = this.Lerp(mypos1, mypos2, i / 100);
            var pos3 = this.Lerp(mypos2, mypos3, i / 100);
            var pos4 = this.Lerp(mypos3, mypos4, i / 100);
            /* 二次降阶 */
            var pos1_0 = this.Lerp(pos1, pos2, i / 100);
            var pos1_1 = this.Lerp(pos2, pos3, i / 100);
            var pos1_2 = this.Lerp(pos3, pos4, i / 100);
            /* 三次降阶 */
            var pos2_0 = this.Lerp(pos1_0, pos1_1, i / 100);
            var pos2_1 = this.Lerp(pos1_1, pos1_2, i / 100);
            /* 四次降阶 */
            var find = this.Lerp(pos2_0, pos2_1, i / 100);
            /* 将计算出的路径点加入数组 */
            point.push(find);
        }
        //返回计算好的路径点数组
        return point;
    };
    /**
     * 在两个向量之间按照ratio差值的函数，
     * ration范围是0-1，为0时返回值=v0，为1时返回值=v1
     *
     * @param {Laya.Vector2} v0
     * @param {Laya.Vector2} v1
     * @param {number} ratio
     * @returns
     * @memberof FlightPath
     */
    FlightPath.prototype.Lerp = function (v0, v1, ratio) {
        if (ratio < 0)
            ratio = 0;
        if (ratio > 1)
            ratio = 1;
        var x = ((v1.x - v0.x) * ratio) + v0.x;
        var y = ((v1.y - v0.y) * ratio) + v0.y;
        return new Laya.Vector2(x, y);
    };
    /**
     * 角度转弧度方法
     *
     * @param {number} angle
     * @returns
     * @memberof FlightPath
     */
    FlightPath.prototype.GetRad = function (angle) {
        return angle / 180 * Math.PI;
    };
    /**
     * 弧度转角度方法
     *
     * @param {number} rad
     * @returns
     * @memberof FlightPath
     */
    FlightPath.prototype.GetAngle = function (rad) {
        return rad / Math.PI * 180;
    };
    /**
     * 两个向量相加的函数
     *
     * @param {Laya.Vector2} v0
     * @param {Laya.Vector2} v1
     * @returns
     * @memberof FlightPath
     */
    FlightPath.prototype.V2Add = function (v0, v1) {
        return new Laya.Vector2(v0.x + v1.x, v0.y + v1.y);
    };
    return FlightPath;
}());
exports.default = FlightPath;
},{}],43:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyCollider = /** @class */ (function () {
    function MyCollider(sprite, radius) {
        this.sprite = sprite;
        this.tranform = sprite.transform;
        this.radius = radius;
    }
    Object.defineProperty(MyCollider.prototype, "Owner", {
        get: function () {
            return this.sprite;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 判断两物体是否碰撞
     * 碰撞条件为两物体距离和两物体半径这两个值的大小
     * @param {MyCollider} col
     * @returns
     * @memberof MyCollider
     */
    MyCollider.prototype.GetCollision = function (col) {
        var targetPos = col.tranform.position;
        var myPos = this.tranform.position;
        var x = (targetPos.x - myPos.x) * (targetPos.x - myPos.x);
        var z = (targetPos.z - myPos.z) * (targetPos.z - myPos.z);
        var radiusX2 = (col.radius + this.radius) * (col.radius + this.radius);
        if ((x + z) <= radiusX2) {
            return true;
        }
        else {
            return false;
        }
    };
    MyCollider.prototype.SetColRadius = function (radius) {
        this.radius = radius;
    };
    return MyCollider;
}());
exports.default = MyCollider;
},{}],44:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FlightPath_1 = require("./FlightPath");
var Boomerang_1 = require("./Boomerang");
var GameMgr_1 = require("../../Mgr/GameMgr");
var PlayerController = /** @class */ (function (_super) {
    __extends(PlayerController, _super);
    function PlayerController() {
        return _super.call(this) || this;
    }
    Object.defineProperty(PlayerController.prototype, "CanThrowBoomerang", {
        get: function () {
            return this._canThrowBoomerang;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 调用此方法用于动画播放完毕后执行回调函数
     * 注意此方法会被覆盖，如果在之前的动画播放完毕之前就新调用了此方法来设置新的回调函数
     * 会立即执行之前设置的回调方法，然后设置新的回调方法
     *
     * @param {Function} method
     * @memberof PlayerController
     */
    PlayerController.prototype.SetPlayOverHandle = function (method, normalizedTime) {
        if (normalizedTime === void 0) { normalizedTime = 1; }
        if (this.PlayOverCallBackFunc != null) {
            this.PlayOverCallBackFunc();
            this.PlayOverCallBackFunc = null;
        }
        this.PlayOverCallBackFunc = method;
        Laya.timer.frameLoop(1, this, this.OverLoop, [this.PlayOverCallBackFunc, normalizedTime], true);
    };
    PlayerController.prototype.onUpdate = function () {
    };
    /**
     * 每帧循环一次，判断动画播放状态
     *
     * @param {Function} method
     * @memberof PlayerController
     */
    PlayerController.prototype.OverLoop = function (method, normalizedTime) {
        var animator1 = this._player_Ani.getCurrentAnimatorPlayState();
        if (animator1.normalizedTime >= normalizedTime) {
            this.PlayOverCallBackFunc();
            this.PlayOverCallBackFunc = null;
            Laya.timer.clearAll(this);
        }
    };
    PlayerController.prototype.onAwake = function () {
        PlayerController.Instance = this;
        this._player = this.owner;
        this._player_Ani = this._player.getComponent(Laya.Animator);
        this._boomerangModel = this._player.getChildByName("Boomrang");
        var boomerangModelClone = this._boomerangModel.clone();
        this._boomerangModel.getChildByName("TailRender").active = false;
        GameMgr_1.default.getInstance().CurrentScene.addChild(boomerangModelClone);
        boomerangModelClone.transform.worldMatrix = this._boomerangModel.transform.worldMatrix;
        this._boomerangScript = boomerangModelClone.addComponent(Boomerang_1.default);
        this.flightPaht = new FlightPath_1.default(30, 70, 20, new Laya.Vector2(this._player.transform.position.x, this._player.transform.position.z));
        this._canThrowBoomerang = true;
        /* 下面是划线的函数 */
        this._line = new Laya.PixelLineSprite3D(200, "line");
        for (var i = 0; i < 102; i++) {
            var start = new Laya.Vector3();
            var end = new Laya.Vector3();
            this._line.addLine(start, end, Laya.Color.RED, Laya.Color.RED);
        }
        GameMgr_1.default.getInstance().CurrentScene.addChild(this._line);
        this.DrawLine(0, 0);
        this._player_Ani.play("get", 0, 1);
    };
    /**
     * 准备丢出手中的回旋镖，并且播放动画
     *
     * @memberof PlayerController
     */
    PlayerController.prototype.ReadyToThrow = function () {
        if (this._canThrowBoomerang) {
            this._player_Ani.play("drag", 0, 0.5);
        }
        // if (this._player_Ani.getCurrentAnimatorPlayState().normalizedTime >= 1) {
        // this.SetPlayOverHandle(function () {
        //     console.log("Play Over");
        // });
        // this._player_Ani.on();
        // this.AnimationPlayHandle();
    };
    /**
     * 放弃丢回旋镖
     *
     * @memberof PlayerController
     */
    PlayerController.prototype.GiveUpThrow = function () {
        this._player_Ani.play("idle", 0, 0);
    };
    /**
     * 丢出手中的回旋镖
     *
     * @memberof PlayerController
     */
    PlayerController.prototype.ThrowBoomerang = function () {
        if (!this._canThrowBoomerang)
            return;
        // if (this._player_Ani.getCurrentAnimatorPlayState().normalizedTime >= 1) {
        //回到站立状态
        // this._player_Ani.play("Idle");
        this._canThrowBoomerang = false;
        // this._boomerangModel.active = false;
        // let angle = this._player.transform.rotationEuler.y;
        // let v = this.flightPaht.GetOriginalPos(angle, this._stretching);
        // this._boomerangScript.Throw(v, 30);
        this._player_Ani.play("thow", 0, 0);
        var angle = this._player.transform.rotationEuler.y;
        var v = this.flightPaht.GetOriginalPos(angle, this._stretching);
        this.SetPlayOverHandle(function () {
            this._boomerangModel.active = false;
            this._boomerangScript.Throw(v, 30);
        }, 0.3);
    };
    /**
     * 回旋镖回到手中
     *
     * @memberof PlayerController
     */
    PlayerController.prototype.GetBoomerange = function () {
        this._canThrowBoomerang = true;
        this._boomerangModel.active = true;
        this._player_Ani.play("get");
    };
    // this._player_Ani.play("celebrate");
    // }
    /**
     * 角色旋转(增量旋转)
     *
     * @param {number} angle
     * @memberof PlayerController
     */
    PlayerController.prototype.Rotate = function (angle, stretching, draw) {
        if (!this._canThrowBoomerang)
            return;
        this._player.transform.rotate(new Laya.Vector3(0, -angle, 0), false, false);
        if (this._player.transform.localRotationEulerY > 90) {
            this._player.transform.localRotationEulerY = 90;
        }
        else if (this._player.transform.localRotationEulerY < -90) {
            this._player.transform.localRotationEulerY = -90;
        }
        var ag = this._player.transform.rotationEuler.y;
        this._stretching = stretching;
        if (draw) {
            this.DrawLine(ag, this._stretching);
        }
        else {
            this.ClearLine();
        }
        return this._player.transform.localRotationEulerY;
    };
    /**
     * 设置角色旋转角度
     *
     * @param {number} angle
     * @memberof PlayerController
     */
    PlayerController.prototype.SetRotate = function (angle, stretching) {
        this._player.transform.rotationEuler = new Laya.Vector3(0, angle, 0);
        this._stretching = stretching;
        this.DrawLine(angle, this._stretching);
    };
    /* 修改线段位置 */
    PlayerController.prototype.DrawLine = function (angle, stretching) {
        var v = this.flightPaht.GetOriginalPos(angle, stretching);
        for (var i = 0; i < v.length - 1; i++) {
            if (i % 2 == 0) {
                var start = new Laya.Vector3(v[i].x, 1, v[i].y);
                var end = new Laya.Vector3(v[i + 1].x, 1, v[i + 1].y);
                this._line.setLine(i, start, end, Laya.Color.RED, Laya.Color.RED);
            }
        }
    };
    /**
     * 清空线段
     *
     * @memberof PlayerController
     */
    PlayerController.prototype.ClearLine = function () {
        for (var i = 0; i < this._line.lineCount; i++) {
            var start = new Laya.Vector3();
            var end = new Laya.Vector3();
            this._line.setLine(i, start, end, Laya.Color.BLACK, Laya.Color.BLACK);
        }
    };
    return PlayerController;
}(Laya.Script3D));
exports.default = PlayerController;
},{"../../Mgr/GameMgr":10,"./Boomerang":40,"./FlightPath":42}],45:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var StorageMgr_1 = require("../../Mgr/StorageMgr");
var SkinMgr = /** @class */ (function () {
    function SkinMgr() {
    }
    Object.defineProperty(SkinMgr, "Instance", {
        /**
         * 单例模式
         *
         * @readonly
         * @static
         * @type {SkinMgr}
         * @memberof SkinMgr
         */
        get: function () {
            if (this._instance == null) {
                this._instance = new SkinMgr();
            }
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 得到当前的皮肤名
     *
     * @returns {string}
     * @memberof SkinMgr
     */
    SkinMgr.prototype.GetCurrentSkin = function () {
        var skin = this.CurrentSkinDate.CurrentSkin;
        // return "subRes/LayaScene_Main/Conventional/Boomrang-03.lh";
        return skin;
    };
    SkinMgr.prototype.SetCurrentSkin = function (index) {
        this.CurrentSkinDate.CurrentSkin = index;
        console.log("设置当前皮肤使用为: " + index);
        this.SaveSkinDate();
    };
    Object.defineProperty(SkinMgr.prototype, "CurrentSkinDate", {
        /**
         * 得到当前的SkinDate
         *
         * @readonly
         * @type {SkinDate}
         * @memberof SkinMgr
         */
        get: function () {
            if (this._skinDate == null) {
                var dataStr = StorageMgr_1.default.getStorage("SkinDate");
                if (dataStr == null || dataStr == "") {
                    this._skinDate = new SkinDate();
                    this.SaveSkinDate();
                }
                else {
                    var data = JSON.parse(dataStr);
                    if (data != null && data.Price != null) {
                        this._skinDate = data;
                    }
                    else {
                        this._skinDate = new SkinDate();
                        this.SaveSkinDate();
                    }
                }
                /* 增加的需求 */
                if (this._skinDate.Owned.filter(function (u) { return u == true; }).length == 0) {
                    if (this._skinDate.UnlockByVidelo) {
                        this._skinDate.UnlockByVidelo = false;
                        this.SaveSkinDate();
                    }
                }
            }
            return this._skinDate;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 保存皮肤数据
     *
     * @memberof SkinMgr
     */
    SkinMgr.prototype.SaveSkinDate = function () {
        var storage = new StorageMgr_1.StorageReq();
        storage.key = "SkinDate";
        storage.data = this._skinDate;
        StorageMgr_1.default.setStorage(storage);
    };
    ;
    // /**
    //  * 设置当前的皮肤名
    //  * 
    //  * @param {string} name 
    //  * @memberof SkinMgr
    //  */
    // SetSKin(name: string) {
    //     let storage = new StorageReq();
    //     storage.key = "SkinDate";
    //     storage.key = JSON.stringify(this._skinDate);
    //     storage.data = name;
    //     StorageMgr.setStorage(storage);
    // }
    /**
     * 封装好的更换当前皮肤
     *
     * @param {Laya.Sprite3D} zhujue 主角的Sprite3D组件，需要更换的回旋镖为主角的子物体
     * @param {Function} compelete 完成时执行的回调函数
     * @memberof SkinMgr
     */
    SkinMgr.prototype.ChangeSkin = function (zhujue, compelete) {
        var index = this.GetCurrentSkin();
        //测试等删
        if (index != null && index != -1) {
            var url = "res/Model/Boomrang-0" + (index + 1) + ".lh";
            var res = Laya.Sprite3D.load(url, Laya.Handler.create(this, function (prefab) {
                var boomerang = zhujue.getChildByName("Boomrang");
                for (var index = 0; index < boomerang._children.length; index++) {
                    var child = boomerang.getChildAt(index);
                    if (child.name != "TailRender") {
                        child.destroy();
                        index--;
                    }
                }
                var replace = Laya.Sprite3D.instantiate(prefab, boomerang, false);
                replace.transform.worldMatrix = boomerang.transform.worldMatrix;
                compelete();
            }));
        }
        else {
            compelete();
        }
    };
    ;
    /**
     * 按照皮肤的名字得到皮肤是否可用
     *
     * @param {string} name
     * @memberof SkinMgr
     */
    SkinMgr.prototype.GetSkinAvailable = function (index) {
        return this.CurrentSkinDate.Owned[index];
    };
    /**
     * 得到皮肤的解锁费用
     *
     * @returns {number}
     * @memberof SkinMgr
     */
    SkinMgr.prototype.GetSkinUnlockCost = function (index) {
        return this.CurrentSkinDate.Price[index];
    };
    /**
     * 解锁皮肤
     *
     * @memberof SkinMgr
     */
    SkinMgr.prototype.UnLockSkin = function (index) {
        this.CurrentSkinDate.Owned[index] = true;
        this.SaveSkinDate();
    };
    return SkinMgr;
}());
exports.default = SkinMgr;
var SkinDate = /** @class */ (function () {
    function SkinDate() {
        this.CurrentSkin = -1;
        this.UnlockByVidelo = false;
        this.Price = [50, 100, 150, 300, 400, 500, 600, 700, 800];
        this.Owned = [false, false, false, false, false, false, false, false, false];
        // public Owned: Array<boolean> = [true, true, true, true, true, true, true, true, true];
    }
    return SkinDate;
}());
;
},{"../../Mgr/StorageMgr":12}],46:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PlayerController_1 = require("./PlayerController");
var TouchPad = /** @class */ (function (_super) {
    __extends(TouchPad, _super);
    function TouchPad() {
        return _super.call(this) || this;
        // //鼠标按下事件监听
        // this.touchRect.on(Laya.Event.MOUSE_DOWN,this,this.onMouseDown);
        // //鼠标抬起事件监听
        // this.touchRect.on(Laya.Event.MOUSE_UP,this,this.onMouseUp);
        //鼠标是否移除屏幕事件监听
        // this.touchRect.on(Laya.Event.MOUSE_OUT,this,this.onBlur);
    }
    TouchPad.prototype.onAwake = function () {
        this._isMouseDown = false;
        this.touchRect = this.owner;
        this.originPiont = new Laya.Vector2();
        this._touchPos = this.owner.getChildByName("touchPos");
        this._touchPosheight = this._touchPos.height;
        // this.Btn_01.mouseEnabled = false;
        // //鼠标按下事件监听
        // this.touchRect.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown);
        // //鼠标抬起事件监听
        // this.touchRect.on(Laya.Event.MOUSE_UP, this, this.onMouseUp);
        // console.log("Controller Added");
        // Laya.timer.once(3000, this, this.method1)
    };
    Object.defineProperty(TouchPad.prototype, "Direction", {
        get: function () {
            return this._diection;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TouchPad.prototype, "Distance", {
        get: function () {
            return this._distance;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 按键按下时，开始计算偏移
     *
     * @memberof TouchPad
     */
    TouchPad.prototype.onMouseDown = function () {
        this._isMouseDown = true;
        this.originPiont.setValue(Laya.stage.mouseX, Laya.stage.mouseY);
        this._touchPos.pos(Laya.stage.mouseX, Laya.stage.mouseY);
        PlayerController_1.default.Instance.ReadyToThrow();
        this._lastX = 0;
    };
    TouchPad.prototype.DisableInput = function () {
        this._isMouseDown = false;
        this.enabled = false;
        this._touchPos.visible = false;
    };
    TouchPad.prototype.EnableInput = function () {
        this.enabled = true;
    };
    /**
     * 按键抬起时，偏移计算结束
     *
     * @memberof TouchPad
     */
    TouchPad.prototype.onMouseUp = function () {
        if (!this._isMouseDown)
            return;
        this._touchPos.height = this._touchPosheight;
        this._isMouseDown = false;
        this._touchPos.visible = false;
        if (this._canThrow) {
            PlayerController_1.default.Instance.ThrowBoomerang();
        }
        else {
            PlayerController_1.default.Instance.GiveUpThrow();
        }
    };
    // /**
    //  * 移动主角位置的函数原版
    //  * 
    //  * @memberof TouchPad
    //  */
    // onMouseMove() {
    //     if (!this._isMouseDown) {
    //         this._canThrow = false;
    //         return;
    //     }
    //     if (this._isMouseDown) {
    //         this._canThrow = false;
    //         let currentpos = new Laya.Vector2(Laya.stage.mouseX, Laya.stage.mouseY);
    //         /* dir是鼠标按下后的偏移向量
    //             x轴 决定主角左右移动专项
    //             y轴 决定主角回旋镖丢出去的力度
    //         */
    //         let mouseOffset = new Laya.Vector2(
    //             currentpos.x - this.originPiont.x, currentpos.y - this.originPiont.y
    //         )
    //         if ((currentpos.y - this.originPiont.y) > 0) return;
    //         /* 
    //             左右移动角度按键移动累加值算法，用于控制精细操作
    //             原理在于如果连续移动，那么每移动一次都会使下一次移动值会更大
    //             这样一开始移动时，如果移动距离不远就可以很精确的控制移动距离
    //             如果移动距离很远，由于累加值增加了，所以移动距离也会增加
    //         */
    //         let currentX = mouseOffset.x / 2;
    //         let offset = currentX - this._lastX;
    //         let abs = Math.abs(currentX);
    //         if (abs > 0 && abs <= 30) {
    //             offset = offset * 0.2;
    //         }
    //         else if (abs > 30 && abs <= 60) {
    //             offset = offset * 0.4;
    //         }
    //         else if (abs > 60) {
    //             offset = offset * 0.6;
    //             offset = offset > 0 ? Math.min(offset, 5) : Math.max(offset, -5);
    //         }
    //         // else if (abs >= 90) {
    //         //     offset = offset * 1.2;
    //         //     offset = offset > 0 ? Math.min(offset, 7) : Math.max(offset, -7);
    //         // }
    //         this._lastX = currentX;
    //         //
    //         let currentY = Math.abs(mouseOffset.y) / 500;
    //         currentY = Math.min(currentY, 0.55);
    //         if (currentY > 0.05) {
    //             this._canThrow = true;
    //             PlayerController.Instance.Rotate(offset, currentY, true);
    //             this.SetTouchPosImage(offset);
    //         }
    //         else {
    //             this._canThrow = false;
    //             PlayerController.Instance.Rotate(offset, currentY, false);
    //         }
    //     }
    // }
    /**
     * 移动主角位置修改版
     *
     * @returns
     * @memberof TouchPad
     */
    TouchPad.prototype.onMouseMove = function () {
        if (!this._isMouseDown) {
            this._canThrow = false;
            return;
        }
        if (!this._touchPos.visible && PlayerController_1.default.Instance.CanThrowBoomerang) {
            this._touchPos.visible = true;
        }
        if (this._isMouseDown) {
            this._canThrow = false;
            var currentpos = new Laya.Vector2(Laya.stage.mouseX, Laya.stage.mouseY);
            /* dir是鼠标按下后的偏移向量
                x轴 决定主角左右移动专项
                y轴 决定主角回旋镖丢出去的力度
            */
            var mouseOffset = new Laya.Vector2(currentpos.x - this.originPiont.x, currentpos.y - this.originPiont.y);
            if ((currentpos.y - this.originPiont.y) > 0)
                return;
            /*
                左右移动角度按键移动累加值算法，用于控制精细操作
                原理在于如果连续移动，那么每移动一次都会使下一次移动值会更大
                这样一开始移动时，如果移动距离不远就可以很精确的控制移动距离
                如果移动距离很远，由于累加值增加了，所以移动距离也会增加
            */
            var currentX = mouseOffset.x / 2;
            var offset = currentX - this._lastX;
            var abs = Math.abs(currentX);
            if (abs > 0 && abs <= 30) {
                offset = offset * 0.2;
            }
            else if (abs > 30 && abs <= 60) {
                offset = offset * 0.4;
            }
            else if (abs > 60) {
                offset = offset * 0.6;
                offset = offset > 0 ? Math.min(offset, 5) : Math.max(offset, -5);
            }
            // else if (abs >= 90) {
            //     offset = offset * 1.2;
            //     offset = offset > 0 ? Math.min(offset, 7) : Math.max(offset, -7);
            // }
            this._lastX = currentX;
            //
            var currentY = Math.abs(mouseOffset.y) / 500;
            currentY = Math.min(currentY, 0.55);
            if (currentY > 0.05) {
                this._canThrow = true;
                var angel = PlayerController_1.default.Instance.Rotate(offset, currentY, true);
                this.SetTouchPosImage(angel, currentY);
            }
            else {
                this._canThrow = false;
                var angel = PlayerController_1.default.Instance.Rotate(offset, currentY, false);
                this.SetTouchPosImage(angel, currentY);
            }
        }
    };
    TouchPad.prototype.SetTouchPosImage = function (angle, stretching) {
        this._touchPos.rotation = -angle;
        this._touchPos.height = this._touchPosheight + stretching * 400;
        this._touchPos.pivotY = this._touchPos.height;
    };
    return TouchPad;
}(Laya.Script));
exports.default = TouchPad;
},{"./PlayerController":44}],47:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var HideAdvVideoIco = /** @class */ (function (_super) {
    __extends(HideAdvVideoIco, _super);
    function HideAdvVideoIco() {
        return _super.call(this) || this;
    }
    HideAdvVideoIco.prototype.onEnable = function () {
        if (AppSwitchConfig_1.default.getInstance().getAppSwitchData().shipintubiao == 1) {
            this._videoIco.visible = true;
            this._noIco.visible = false;
        }
        else {
            this._videoIco.visible = false;
            this._noIco.visible = true;
        }
    };
    HideAdvVideoIco.prototype.onAwake = function () {
        this._videoIco = this.owner.getChildByName("VideoIco");
        this._noIco = this.owner.getChildByName("NoIco");
    };
    return HideAdvVideoIco;
}(Laya.Script));
exports.default = HideAdvVideoIco;
},{"../../Config/AppSwitchConfig":4}],48:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var LoopAdView_1 = require("../../ShareAd/View/LoopAdView");
var MyPopAdView = /** @class */ (function (_super) {
    __extends(MyPopAdView, _super);
    function MyPopAdView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MyPopAdView.prototype.onAwake = function () {
        this._bg = this.owner.getChildByName("BG");
        this._popBtn = this._bg.getChildByName("PopADBtn");
        this._popOut = this._popBtn.getChildByName("PopOut");
        this._popIn = this._popBtn.getChildByName("PopIn");
        this._loopAd = this._bg.getChildByName("LoopAD").getComponent(LoopAdView_1.default);
        this._popIn.visible = false;
        this._popOut.visible = true;
    };
    MyPopAdView.prototype.onEnable = function () {
        this._popBtn.on(Laya.Event.CLICK, this, this.onPopBtnClick);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.AD_OnShareAdFail, this, this.onShareAdFail);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.AD_OpenSideView, this, this.SinglePopUp);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.AD_CloseSideView, this, this.SingelPopDown);
    };
    MyPopAdView.prototype.onDisable = function () {
        this._popBtn.off(Laya.Event.CLICK, this, this.onPopBtnClick);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.AD_OnShareAdFail, this, this.onShareAdFail);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.AD_OpenSideView, this, this.SinglePopUp);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.AD_CloseSideView, this, this.SingelPopDown);
    };
    MyPopAdView.prototype.onPopBtnClick = function () {
        if (this._bg.x > 0) {
            this.popDown();
        }
        else {
            this.popUp();
        }
    };
    MyPopAdView.prototype.SinglePopUp = function () {
        var _this = this;
        Laya.Tween.to(this._bg, { x: 520 }, 250, Laya.Ease.circIn, Laya.Handler.create(this, function () {
            _this._loopAd.enabled = true;
            _this._popOut.visible = false;
            _this._popIn.visible = true;
        }), null, true);
    };
    MyPopAdView.prototype.SingelPopDown = function () {
        var _this = this;
        Laya.Tween.to(this._bg, { x: 0 }, 250, Laya.Ease.circIn, Laya.Handler.create(this, function () {
            _this._loopAd.enabled = false;
            _this._popOut.visible = true;
            _this._popIn.visible = false;
        }), null, true);
    };
    MyPopAdView.prototype.popDown = function () {
        var _this = this;
        Laya.Tween.to(this._bg, { x: 0 }, 250, Laya.Ease.circIn, Laya.Handler.create(this, function () {
            _this._loopAd.enabled = false;
            _this._popOut.visible = true;
            _this._popIn.visible = false;
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_CloseBanner);
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OpenBottomLoopView);
            console.log("EventDef.AD_CloseSideView");
        }), null, true);
    };
    MyPopAdView.prototype.popUp = function () {
        var _this = this;
        this._loopAd.onEnable();
        Laya.Tween.to(this._bg, { x: 510 }, 250, Laya.Ease.circIn, Laya.Handler.create(this, function () {
            _this._loopAd.enabled = true;
            _this._popOut.visible = false;
            _this._popIn.visible = true;
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OpenBanner);
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_CloseBottomLoopView);
        }), null, true);
    };
    MyPopAdView.prototype.onShareAdFail = function () {
        this.popUp();
    };
    return MyPopAdView;
}(Laya.Script));
exports.default = MyPopAdView;
},{"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../ShareAd/View/LoopAdView":26}],49:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LoopAdBox_1 = require("../../ShareAd/View/LoopAdBox");
var WXAPI_1 = require("../../WXAPI");
var ShareAd_1 = require("../../ShareAd/ShareAd");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var OPPOAPI_1 = require("../../OPPOAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var MyLoopAdBox = /** @class */ (function (_super) {
    __extends(MyLoopAdBox, _super);
    function MyLoopAdBox() {
        return _super.call(this) || this;
    }
    MyLoopAdBox.prototype.onSpClick = function () {
        var data = this._data;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                    ALD_1.default.aldSendReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    // EventMgr.instance.dispatch(EventDef.AD_OnShareAdFail);
                    var data = {};
                    data.onCloseEvent = function () {
                        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_CloseBanner);
                    };
                    ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.MoreGame, data);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.aldSendReportAdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigateToMiniProgram(data.appid, data.title, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQQMiniGame) //qq小游戏
             {
                QQMiniGameAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    return MyLoopAdBox;
}(LoopAdBox_1.default));
exports.default = MyLoopAdBox;
},{"../../ALD":1,"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../Mgr/ViewMgr":14,"../../OPPOAPI":20,"../../QQMiniGameAPI":21,"../../ShareAd/ShareAd":22,"../../ShareAd/View/LoopAdBox":25,"../../WXAPI":39}],50:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MySoundMgr = /** @class */ (function () {
    function MySoundMgr() {
    }
    MySoundMgr.prototype.getSoundUrl = function (name) {
        var url = MySoundMgr.soundResPath + name + ".mp3";
        return url;
    };
    MySoundMgr.prototype.playSound = function (name) {
        var url = this.getSoundUrl(name);
        if (Laya.Browser.onMiniGame) {
            var sound = laya.utils.Pool.getItem(name);
            if (sound == null) {
                sound = wx.createInnerAudioContext();
                sound.src = MySoundMgr.soundResPath + name + ".mp3";
                sound.onEnded(function () {
                    laya.utils.Pool.recover(name, sound);
                    sound.offEnded();
                });
            }
            sound.play();
        }
        else {
            Laya.SoundManager.playSound(url, 1);
        }
    };
    MySoundMgr.prototype.playBGM = function (name) {
        var url = this.getSoundUrl(name);
        if (Laya.Browser.onMiniGame) {
            if (!this.bgm) {
                this.bgm = wx.createInnerAudioContext();
            }
            if (this._bgmname == name) {
                if (this.bgm.paused) {
                    this.bgm.play();
                }
            }
            else {
                this._bgmname = name;
                this.bgm.stop();
                this.bgm.src = url;
                this.bgm.loop = true;
                this.bgm.play();
            }
        }
        else {
            Laya.SoundManager.playMusic(url, 0);
        }
    };
    MySoundMgr.prototype.stopBGM = function () {
        if (Laya.Browser.onMiniGame) {
            if (this.bgm) {
                this.bgm.stop();
            }
        }
        else {
            Laya.SoundManager.stopMusic();
        }
    };
    MySoundMgr.prototype.setBGMVolume = function (volume) {
        if (Laya.Browser.onMiniGame) {
            if (this.bgm) {
                this.bgm.volume = volume;
            }
        }
        else {
            Laya.SoundManager.stopMusic();
        }
    };
    MySoundMgr.soundResPath = "subRes/sound/";
    MySoundMgr.instance = new MySoundMgr();
    return MySoundMgr;
}());
exports.default = MySoundMgr;
},{}],51:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var ShareAd_1 = require("../../ShareAd/ShareAd");
var AdvertisementView = /** @class */ (function (_super) {
    __extends(AdvertisementView, _super);
    function AdvertisementView() {
        return _super.call(this) || this;
    }
    // /**
    //  * 用于标识是否同时显示LoopAd和Banner2个广告
    //  * 当2个广告同时显示时，屏幕底部的空间会被占用更多
    //  * 某些UI逻辑需要这个值，例如游戏主界面的按钮位置
    //  * @readonly
    //  * @static
    //  * @type {boolean}
    //  * @memberof AdvertisementView
    //  */
    // public static get ShowBothAd(): boolean {
    //     return this._showBothAd;
    // }
    // private static _showBothAd = false;
    AdvertisementView.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._ownerSp = this.owner;
        // this._bottomZone = this.owner.getChildByName("BottomZone") as Laya.UIComponent;
        this._loopADZone = this.owner.getChildByName("LoopAD");
        this._bannerADZone = this.owner.getChildByName("BannerAD");
        this._siderAdZone = this.owner.getChildByName("SideAD");
        if (!ShareAd_1.default.isNeedShowAd()) {
            this._ownerSp.visible = false;
            // this._bottomZone.visible = false;
            this._loopADZone.visible = false;
            this._bannerADZone.visible = false;
            this._siderAdZone.visible = false;
        }
        else {
            /* 下面注册的事件,用于控制LoopAd和BannerAd的开关
                在所有广告都关闭的开关为打开的情况下，不能注册这些事件否则广告会被打开 */
            // var aspectRatio = Laya.stage.width / Laya.stage.height;
            // if (aspectRatio < 0.5) {
            //     this._loopADZone.bottom = this._bannerADZone.height;
            //     this._bannerADZone.visible = true;
            //     this._bannerADZone.active = true;
            //     AdvertisementView._showBothAd = true;
            // }
            // else {
            //     this._loopADZone.bottom = 0;
            //     this._bannerADZone.visible = false;
            //     this._bannerADZone.active = false;
            //     AdvertisementView._showBothAd = false;
            // }
        }
    };
    AdvertisementView.prototype.addEvent = function () {
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.AD_CloseBottomLoopView, this, this.CloseLoopView);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.AD_CloseSideView, this, this.CloseSiderAd);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.AD_CloseBanner, this, this.CloseBanner);
        if (!ShareAd_1.default.isNeedShowAd())
            return;
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.AD_OpenBottomLoopView, this, this.OpenLoopView);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.AD_OpenBanner, this, this.OpenBanner);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.AD_OpenSideView, this, this.OpenSiderAd);
    };
    AdvertisementView.prototype.removeEvent = function () {
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.AD_CloseBottomLoopView, this, this.CloseLoopView);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.AD_CloseSideView, this, this.CloseSiderAd);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.AD_CloseBanner, this, this.CloseBanner);
        if (!ShareAd_1.default.isNeedShowAd())
            return;
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.AD_OpenBottomLoopView, this, this.OpenLoopView);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.AD_OpenBanner, this, this.OpenBanner);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.AD_OpenSideView, this, this.OpenSiderAd);
    };
    // onEnable(): void {
    //     if (AppSwitchConfig.getInstance().getAppSwitchData().closeAllAd == 1 || !ShareAd.isNeedShowAd()) return;
    // }
    /**
     * 关闭LoopAd事件，如果同时显示2个广告则不关闭
     *
     * @memberof AdvertisementView
     */
    AdvertisementView.prototype.CloseLoopView = function () {
        // this._loopADZone.onEnable();
        /* if (!AdvertisementView._showBothAd) */ {
            this._loopADZone.visible = false;
        }
    };
    /**
     * 打开LoopAd
     *
     * @memberof AdvertisementView
     */
    AdvertisementView.prototype.OpenLoopView = function () {
        this._loopADZone.visible = false;
    };
    AdvertisementView.prototype.OpenBanner = function () {
        console.log("Open Banner");
        this._bannerADZone.active = false;
        this._bannerADZone.visible = false;
        // this._bannerADZone.onEnable();
    };
    AdvertisementView.prototype.CloseBanner = function ( /* res */) {
        console.log("Close Banner");
        // if (!AdvertisementView._showBothAd || res) {
        this._bannerADZone.active = false;
        this._bannerADZone.visible = false;
        // }
    };
    AdvertisementView.prototype.OpenSiderAd = function () {
        console.log("Open SiderAd");
        // if (!AdvertisementView._showBothAd || res) {
        this._siderAdZone.visible = false;
    };
    AdvertisementView.prototype.CloseSiderAd = function () {
        console.log("Close SiderAd");
        // if (!AdvertisementView._showBothAd || res) {
        this._siderAdZone.visible = false;
    };
    return AdvertisementView;
}(ViewBase_1.default));
exports.default = AdvertisementView;
},{"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../ShareAd/ShareAd":22,"../../View/ViewBase":38}],52:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var ShareAd_1 = require("../../ShareAd/ShareAd");
var WXAPI_1 = require("../../WXAPI");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var FriendInviteView = /** @class */ (function (_super) {
    __extends(FriendInviteView, _super);
    function FriendInviteView() {
        var _this = _super.call(this) || this;
        _this._headUrl = "https://oss.renyouwangluo.cn/biaozhahuixuanbiao/wxhead/";
        _this._adNumber = ShareAd_1.default.LoopAdLocationID;
        _this.maxNum = 75;
        return _this;
    }
    FriendInviteView.prototype.onAwake = function () {
        this._bg = this.owner.getChildByName("BG");
        this._close_Btn = this._bg.getChildByName("Close_Btn");
        this._head_Img = this._bg.getChildByName("Head_Img");
        this._gameName = this._bg.getChildByName("GameName_Text");
        this._bg.visible = false;
    };
    FriendInviteView.prototype.onShow = function () {
        var _this = this;
        var rd = Math.floor(Math.random() * 75) + 1;
        this._head_Img.loadImage(this._headUrl + rd + ".jpg", Laya.Handler.create(this, function () {
            _this._bg.visible = true;
        }));
        ShareAd_1.default.getADVs(this._adNumber, function (datas) {
            if (datas && datas.length > 0) {
                _this._advdata = datas[Math.floor(Math.random() * datas.length)];
                console.log(_this._advdata);
                _this._gameName.text = _this._advdata.title;
            }
        }, false);
        Laya.timer.once(1000, this, function () {
            _this._bg.visible = true;
        });
    };
    FriendInviteView.prototype.addEvent = function () {
        this._bg.on(Laya.Event.CLICK, this, this.jump);
        this._close_Btn.on(Laya.Event.CLICK, this, this.closeView);
    };
    FriendInviteView.prototype.removeEvent = function () {
        this._bg.off(Laya.Event.CLICK, this, this.jump);
        this._close_Btn.off(Laya.Event.CLICK, this, this.closeView);
    };
    FriendInviteView.prototype.jump = function () {
        var data = this._advdata;
        if (data) {
            console.log("跳转游戏： " + data.title);
            WXAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                console.log("跳转成功");
                ShareAd_1.default.reportUserClick(data.appid);
                ALD_1.default.aldSendReportAdClickSuccess(data);
            }, function (res) {
                console.log("跳转失败");
                EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                    console.log("用户取消跳转");
                    ALD_1.default.aldSendReportAdClickFail(data);
                }
            }, function (res) {
                console.log("跳转完成");
            });
        }
    };
    return FriendInviteView;
}(ViewBase_1.default));
exports.default = FriendInviteView;
},{"../../ALD":1,"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../ShareAd/ShareAd":22,"../../View/ViewBase":38,"../../WXAPI":39}],53:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var WudianMgr_1 = require("../../Mgr/WudianMgr");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var GameMgr_1 = require("../../Mgr/GameMgr");
var ShareAd_1 = require("../../ShareAd/ShareAd");
var WXAPI_1 = require("../../WXAPI");
var SkinMgr_1 = require("../GameLogic/SkinMgr");
var GameMain = /** @class */ (function (_super) {
    __extends(GameMain, _super);
    function GameMain() {
        return _super.call(this) || this;
    }
    GameMain.prototype.onAwake = function () {
        this._changeSkin_Btn = this.owner.getChildByName("Buttons").getChildByName("ChangeSkin_Btn");
        this._start_Btn = this.owner.getChildByName("Buttons").getChildByName("Start_Btn");
        this._share_Btn = this.owner.getChildByName("Share_Btn");
        // this._jump_Btn = this.owner.getChildByName("Jump_Btn") as Laya.UIComponent;
        this._unlockSkin_Btn = this.owner.getChildByName("Buttons").getChildByName("UnlockSkin_Btn");
        this._skin_Img = this._unlockSkin_Btn.getChildByName("Skin_Img");
        this._moreGame_Btn = this.owner.getChildByName("Buttons").getChildByName("MoreGame_Btn");
        this._prizeDraw_Btn = this.owner.getChildByName("PrizeDraw_Btn");
        this._signIn_Btn = this.owner.getChildByName("SignIn_Btn");
        this._diamonds_Box = this.owner.getChildByName("Diamonds_Box");
        this._diamondsCount_Text = this._diamonds_Box.getChildByName("DiamondsCount_Text");
        this._diamondsCount_Text.text = GameMgr_1.default.getInstance().CurrentDiamond.toString();
        this.GetNextSkin();
        if (!ShareAd_1.default.isNeedShowAd()) {
            this._moreGame_Btn.visible = false;
        }
    };
    GameMain.prototype.addEvent = function () {
        this._changeSkin_Btn.on(Laya.Event.CLICK, this, this.unlockSkin);
        this._start_Btn.on(Laya.Event.CLICK, this, this.startBtnClick);
        this._share_Btn.on(Laya.Event.CLICK, this, this.ShareGame);
        this._unlockSkin_Btn.on(Laya.Event.CLICK, this, this.getUnlockSkin);
        // this._jump_Btn.on(Laya.Event.CLICK, this, this.randomJump);
        this._moreGame_Btn.on(Laya.Event.CLICK, this, this.moreGame);
        this._prizeDraw_Btn.on(Laya.Event.CLICK, this, this.prizeDraw);
        this._signIn_Btn.on(Laya.Event.CLICK, this, this.signIn);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserMoneyChange, this, this.diamondsChange);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Skin_UnlockSuccess, this, this.GetNextSkin);
    };
    GameMain.prototype.removeEvent = function () {
        this._changeSkin_Btn.off(Laya.Event.CLICK, this, this.unlockSkin);
        this._start_Btn.off(Laya.Event.CLICK, this, this.startBtnClick);
        this._share_Btn.off(Laya.Event.CLICK, this, this.ShareGame);
        this._unlockSkin_Btn.on(Laya.Event.CLICK, this, this.getUnlockSkin);
        // this._jump_Btn.off(Laya.Event.CLICK, this, this.randomJump);        
        this._moreGame_Btn.off(Laya.Event.CLICK, this, this.moreGame);
        this._prizeDraw_Btn.off(Laya.Event.CLICK, this, this.prizeDraw);
        this._signIn_Btn.off(Laya.Event.CLICK, this, this.signIn);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserMoneyChange, this, this.diamondsChange);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Skin_UnlockSuccess, this, this.GetNextSkin);
    };
    GameMain.prototype.onStart = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
    };
    GameMain.prototype.unlockSkin = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_CloseBanner, true);
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.UnlockSkin);
    };
    GameMain.prototype.GetNextSkin = function () {
        var count = SkinMgr_1.default.Instance.CurrentSkinDate.Owned.length;
        var index = Math.floor(Math.random() * 9);
        for (var i = 0; i < count; i++) {
            if (SkinMgr_1.default.Instance.CurrentSkinDate.Owned[i] == false) {
                index = i;
                break;
            }
        }
        this._skinIndex = index;
        this.RefreshSkin(this._skinIndex);
    };
    GameMain.prototype.RefreshSkin = function (index) {
        this._skin_Img.loadImage("Skin/" + index + ".png");
    };
    GameMain.prototype.startBtnClick = function () {
        var _this = this;
        if (WudianMgr_1.default.FirstWudianFlag /* && AppSwitchConfig.getInstance().getAppSwitchData().version == AppConfig.Versions */) {
            var data = {};
            data.CompleteHander = Laya.Handler.create(this, function () {
                GameMgr_1.default.getInstance().CurrentDiamond += 30;
                _this.getUnlockSkin();
                _this.closeView();
            });
            data.PrizeCount = "恭喜您获得钻石30个";
            // data.ClickType = 1;
            ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.ClickGetPrize, data);
        }
        else {
            this.getUnlockSkin();
            this.closeView();
        }
    };
    GameMain.prototype.getUnlockSkin = function () {
        this.closeView();
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.GetUnlockSkin, this._skinIndex);
    };
    GameMain.prototype.gameStart = function () {
        GameMgr_1.default.getInstance().RefreshSkin();
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.GamePlaying);
        this.closeView();
    };
    GameMain.prototype.ShareGame = function () {
        if (Laya.Browser.onMiniGame) {
            WXAPI_1.default.share(null, "速度要快，姿势要帅！赶紧来和我一起玩吧！", "subRes/Image/分享.png");
        }
    };
    GameMain.prototype.moreGame = function () {
        // EventMgr.instance.dispatch(EventDef.AD_CloseSideView);
        // EventMgr.instance.dispatch(EventDef.AD_CloseBanner);
        // EventMgr.instance.dispatch(EventDef.AD_CloseBottomLoopView);
        var data = {};
        data.onCloseEvent = function () {
            ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.GameMain);
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_CloseBanner);
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OpenBottomLoopView);
        };
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.MoreGame, data);
    };
    GameMain.prototype.randomJump = function () {
        var index = AppSwitchConfig_1.default.getInstance().getAppSwitchData().indexpopup;
        ShareAd_1.default.RandomJump(index);
    };
    GameMain.prototype.prizeDraw = function () {
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.PrizeDraw);
    };
    GameMain.prototype.signIn = function () {
        var data = {};
        data.SignInEvent = this.signInResult;
        data.SignReward = [25, 40, 50, 60, 70, 80, 100];
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_CloseBanner);
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.SignIn, data);
    };
    GameMain.prototype.diamondsChange = function (count) {
        this._diamondsCount_Text.text = count.toString();
    };
    GameMain.prototype.signInResult = function (res) {
        // 25，40，50，60，70，80，100，
        var dia = 0;
        switch (res) {
            case 0:
                dia = 25;
                break;
            case 1:
                dia = 40;
                break;
            case 2:
                dia = 50;
                break;
            case 3:
                dia = 60;
                break;
            case 4:
                dia = 70;
                break;
            case 5:
                dia = 80;
                break;
            case 6:
                dia = 100;
                break;
        }
        GameMgr_1.default.getInstance().CurrentDiamond += dia;
    };
    return GameMain;
}(ViewBase_1.default));
exports.default = GameMain;
},{"../../Config/AppSwitchConfig":4,"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../Mgr/GameMgr":10,"../../Mgr/ViewMgr":14,"../../Mgr/WudianMgr":15,"../../ShareAd/ShareAd":22,"../../View/ViewBase":38,"../../WXAPI":39,"../GameLogic/SkinMgr":45}],54:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var GameMgr_1 = require("../../Mgr/GameMgr");
var WXAPI_1 = require("../../WXAPI");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var CachedWXBannerAd_1 = require("../../CachedWXBannerAd");
var WudianMgr_1 = require("../../Mgr/WudianMgr");
var GameOver = /** @class */ (function (_super) {
    __extends(GameOver, _super);
    function GameOver() {
        return _super.call(this) || this;
    }
    GameOver.prototype.onAwake = function () {
        this._addDia_Text = this.owner.getChildByName("AddDia_Box").getChildByName("AddDia_Text");
        this._doubleDa_Btn = this.owner.getChildByName("DoubleDa_Btn");
        this._returnMain_Btn = this.owner.getChildByName("ReturnMain_Btn");
        this._continueGame_Btn = this.owner.getChildByName("ContinueGame_Btn");
        this._diamonds_Box = this.owner.getChildByName("Diamonds_Box");
        this._diamondsCount_Text = this._diamonds_Box.getChildByName("DiamondsCount_Text");
        this._diamondsCount_Text.text = GameMgr_1.default.getInstance().CurrentDiamond.toString();
        // EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_CloseSideView);
    };
    GameOver.prototype.addEvent = function () {
        this._doubleDa_Btn.on(Laya.Event.CLICK, this, this.DoubleDa);
        this._returnMain_Btn.on(Laya.Event.CLICK, this, this.ReturnMain);
        this._continueGame_Btn.on(Laya.Event.CLICK, this, this.ContinueGame);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserMoneyChange, this, this.diamondsChange);
    };
    GameOver.prototype.removeEvent = function () {
        this._doubleDa_Btn.off(Laya.Event.CLICK, this, this.DoubleDa);
        this._returnMain_Btn.off(Laya.Event.CLICK, this, this.ReturnMain);
        this._continueGame_Btn.off(Laya.Event.CLICK, this, this.ContinueGame);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserMoneyChange, this, this.diamondsChange);
    };
    GameOver.prototype.onShow = function () {
        GameMgr_1.default.getInstance().CurrentDiamond += 5;
        if (WudianMgr_1.default.WudianFlag) {
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_CloseBanner);
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_CloseBottomLoopView);
            this._returnMain_Btn.bottom = 70;
            this._continueGame_Btn.bottom = 70;
            this._returnMain_Btn.offAll(Laya.Event.CLICK);
            this._continueGame_Btn.offAll(Laya.Event.CLICK);
            this._returnMain_Btn.on(Laya.Event.CLICK, this, this.InduceClick);
            this._continueGame_Btn.on(Laya.Event.CLICK, this, this.InduceClick);
            CachedWXBannerAd_1.default.hide();
        }
        else {
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OpenBanner);
        }
        // else {
        //     CachedWXBannerAd.show();
        // }
    };
    GameOver.prototype.onClose = function () {
        CachedWXBannerAd_1.default.hide();
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OpenSideView);
    };
    GameOver.prototype.InduceClick = function () {
        this._returnMain_Btn.mouseEnabled = false;
        this._continueGame_Btn.mouseEnabled = false;
        var time = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer * 1000;
        Laya.timer.once(time, this, this.InduceMethod);
    };
    GameOver.prototype.InduceMethod = function () {
        var _this = this;
        CachedWXBannerAd_1.default.show();
        var time = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer * 1000;
        Laya.timer.once(time, this, function () {
            _this._returnMain_Btn.bottom = 270;
            _this._continueGame_Btn.bottom = 270;
            _this._returnMain_Btn.mouseEnabled = true;
            _this._continueGame_Btn.mouseEnabled = true;
            _this._returnMain_Btn.offAll(Laya.Event.CLICK);
            _this._continueGame_Btn.offAll(Laya.Event.CLICK);
            _this._returnMain_Btn.on(Laya.Event.CLICK, _this, _this.ReturnMain);
            _this._continueGame_Btn.on(Laya.Event.CLICK, _this, _this.ContinueGame);
        });
    };
    GameOver.prototype.diamondsChange = function (count) {
        this._diamondsCount_Text.text = count.toString();
    };
    GameOver.prototype.DoubleDa = function () {
        var _this = this;
        WXAPI_1.default.showRewardedVideoAd(function (res) {
            if (res) {
                GameMgr_1.default.getInstance().CurrentDiamond += 5;
                _this._doubleDa_Btn.visible = false;
            }
        }, null);
    };
    GameOver.prototype.ReturnMain = function () {
        var data = {};
        data.onCloseEvent = function () {
            ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.GameMain);
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_CloseBanner);
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OpenBottomLoopView);
        };
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.MoreGame, data);
        this.closeView();
    };
    GameOver.prototype.ContinueGame = function () {
        if (WudianMgr_1.default.FirstWudianFlag /* && AppSwitchConfig.getInstance().getAppSwitchData().version == AppConfig.Versions */) {
            var data = {};
            data.PrizeCount = "恭喜您获得钻石30个";
            // data.ClickType = 2;
            data.CompleteHander = Laya.Handler.create(this, function () {
                {
                    GameMgr_1.default.getInstance().CurrentDiamond += 30;
                    ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.GamePlaying);
                }
            });
            ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.ClickGetPrize, data);
            this.closeView();
        }
        else {
            ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.GamePlaying);
            this.closeView();
        }
    };
    return GameOver;
}(ViewBase_1.default));
exports.default = GameOver;
},{"../../CachedWXBannerAd":3,"../../Config/AppSwitchConfig":4,"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../Mgr/GameMgr":10,"../../Mgr/ViewMgr":14,"../../Mgr/WudianMgr":15,"../../View/ViewBase":38,"../../WXAPI":39}],55:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var MySoundMgr_1 = require("../MyMgr/MySoundMgr");
var WudianMgr_1 = require("../../Mgr/WudianMgr");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var GameMgr_1 = require("../../Mgr/GameMgr");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var PlayerController_1 = require("../GameLogic/PlayerController");
var WXAPI_1 = require("../../WXAPI");
var GamePlaying = /** @class */ (function (_super) {
    __extends(GamePlaying, _super);
    function GamePlaying() {
        var _this = _super.call(this) || this;
        _this._isGameOver = false;
        return _this;
    }
    GamePlaying.prototype.onAwake = function () {
        this._returnMain_Btn = this.owner.getChildByName("ReturnMain_Btn");
        this._level_Text = this.owner.getChildByName("Level_Box").getChildByName("Level_Text");
        this._level_Text.text = "LEVEL:" + GameMgr_1.default.getInstance().CurrentLevel;
        this._diamonds_Box = this.owner.getChildByName("Diamonds_Box");
        this._diamondsCount_Text = this._diamonds_Box.getChildByName("DiamondsCount_Text");
        this._diamondsCount_Text.text = GameMgr_1.default.getInstance().CurrentDiamond.toString();
        this._invincible_Btn = this.owner.getChildByName("Invincible_Btn");
    };
    GamePlaying.prototype.addEvent = function () {
        this._returnMain_Btn.on(Laya.Event.CLICK, this, this.openGameMainView);
        this._invincible_Btn.on(Laya.Event.CLICK, this, this.nextLevel);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnLevelComplate, this, this.GameOver);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserMoneyChange, this, this.diamondsChange);
    };
    GamePlaying.prototype.removeEvent = function () {
        this._returnMain_Btn.off(Laya.Event.CLICK, this, this.openGameMainView);
        this._invincible_Btn.off(Laya.Event.CLICK, this, this.nextLevel);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnLevelComplate, this, this.GameOver);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserMoneyChange, this, this.diamondsChange);
    };
    GamePlaying.prototype.onShow = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
    };
    GamePlaying.prototype.diamondsChange = function (count) {
        this._diamondsCount_Text.text = count.toString();
    };
    GamePlaying.prototype.GameOver = function () {
        var _this = this;
        this._isGameOver = true;
        MySoundMgr_1.default.instance.playSound("恭喜过关");
        // this._reset_Btn.mouseEnabled = false;
        console.log("等待回旋镖飞回玩家手中");
        Laya.timer.frameLoop(1, this, function () {
            if (PlayerController_1.default.Instance.CanThrowBoomerang) {
                Laya.timer.clearAll(_this);
                Laya.timer.once(500, _this, function () {
                    // this._addDia_Text.text = "+5";
                    _this.gameOverEvent();
                    // if (GameMgr.getInstance().CurrentLevel == 0) {
                    //     // if (this._currentLevel == 0) {
                    //     this.gameOverEvent();
                    // }
                    // else {
                    //     //将这段代码插入需要调用狂点窗口的地方
                    //     let data: any = {};
                    //     //狂点逻辑完成后的回调方法
                    //     data.Complete = () => {
                    //         GameMgr.getInstance().CurrentDiamond += 30;
                    //         this.gameOverEvent();
                    //         console.log("狂点按钮结束");//在这里写入狂点窗口结束后需要调用的逻辑，例如弹出结算页面
                    //     }
                    //     // 完成点击之后获得的奖励数量，依照各项目不同自行实现
                    //     data.PrizeCount = 30;
                    //     // 在调用窗口前必须关闭当前正在显示的官方Banner广告，这个窗口才能正常运行，具体的逻辑各人需自行实现
                    //     // 而且关闭官方Banner可以稍微提早一些，避免频繁调用出错或者不稳定
                    //     EventMgr.instance.dispatch(EventDef.AD_CloseBanner, true);//这句代码是我用来关闭官方Banner，各项目自行实现
                    //     ViewMgr.instance.openView(ViewDef.ClickGetPrize, data);
                    // }
                });
            }
        });
    };
    GamePlaying.prototype.gameOverEvent = function () {
        if (this._isGameOver) {
            this._isGameOver = false;
            GameMgr_1.default.getInstance().LoadNextScene();
            if (WudianMgr_1.default.SecondWudianFlag /* && AppSwitchConfig.getInstance().getAppSwitchData().version == AppConfig.Versions */) {
                var data = {};
                data.PrizeCount = "恭喜您获得钻石30个";
                // data.ClickType = 2;
                data.CompleteHander = Laya.Handler.create(this, function () {
                    {
                        GameMgr_1.default.getInstance().CurrentDiamond += 30;
                        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.GameOver);
                    }
                });
                ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.ClickGetPrize, data);
            }
            else {
                ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.GameOver);
            }
        }
        this.closeView();
    };
    // openGameOverView() {
    //     if (this._isGameOver) {
    //         this._isGameOver = false;
    //         ViewMgr.instance.openView(ViewDef.GameOver);
    //         GameMgr.getInstance().LoadNextScene();
    //         this.closeView();
    //     }
    // }
    GamePlaying.prototype.openGameMainView = function () {
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.GameMain);
        GameMgr_1.default.getInstance().LoadCurrentScene();
        this.closeView();
    };
    GamePlaying.prototype.nextLevel = function () {
        WXAPI_1.default.showRewardedVideoAd(function (res) {
            if (res) {
                GameMgr_1.default.getInstance().LoadNextScene();
            }
        }, null);
    };
    return GamePlaying;
}(ViewBase_1.default));
exports.default = GamePlaying;
},{"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../Mgr/GameMgr":10,"../../Mgr/ViewMgr":14,"../../Mgr/WudianMgr":15,"../../View/ViewBase":38,"../../WXAPI":39,"../GameLogic/PlayerController":44,"../MyMgr/MySoundMgr":50}],56:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var WXAPI_1 = require("../../WXAPI");
var SkinMgr_1 = require("../GameLogic/SkinMgr");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var GameMgr_1 = require("../../Mgr/GameMgr");
var CachedWXBannerAd_1 = require("../../CachedWXBannerAd");
var WudianMgr_1 = require("../../Mgr/WudianMgr");
var GetUnlockSkin = /** @class */ (function (_super) {
    __extends(GetUnlockSkin, _super);
    function GetUnlockSkin() {
        return _super.call(this) || this;
    }
    GetUnlockSkin.prototype.onAwake = function () {
        this._close_Btn = this.owner.getChildByName("Close_Btn");
        this._bg = this.owner.getChildByName("BG");
        this._receive_Btn = this._bg.getChildByName("Receive_Btn");
        this._slotItem = this._bg.getChildByName("Slot").getChildByName("SlotItem");
        this._unlockSuccess_Img = this._bg.getChildByName("UnlockSuccess_Img");
        this._unlockSuccess_Img.visible = false;
        this._confirm_Btn = this._bg.getChildByName("Confirm_Btn");
        this._confirm_Btn.visible = false;
    };
    GetUnlockSkin.prototype.addEvent = function () {
        this._close_Btn.on(Laya.Event.CLICK, this, this.Close);
        this._receive_Btn.on(Laya.Event.CLICK, this, this.UnlockSkin);
        this._confirm_Btn.on(Laya.Event.CLICK, this, this.UnlockSuccess);
    };
    GetUnlockSkin.prototype.removeEvent = function () {
        this._close_Btn.off(Laya.Event.CLICK, this, this.Close);
        this._receive_Btn.off(Laya.Event.CLICK, this, this.UnlockSkin);
        this._confirm_Btn.off(Laya.Event.CLICK, this, this.UnlockSuccess);
    };
    GetUnlockSkin.prototype.openView = function (index) {
        // if (index == 99) index = 0;
        this._slotItem.loadImage("Skin/" + index + ".png");
        this._skinIndex = index;
        _super.prototype.openView.call(this, index);
    };
    GetUnlockSkin.prototype.onShow = function () {
        if (WudianMgr_1.default.WudianFlag) {
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_CloseBanner);
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_CloseBottomLoopView);
            this._close_Btn.bottom = 70;
            this._close_Btn.offAll(Laya.Event.CLICK);
            this._close_Btn.on(Laya.Event.CLICK, this, this.InduceClick);
            CachedWXBannerAd_1.default.hide();
        }
        else {
            CachedWXBannerAd_1.default.show();
        }
    };
    GetUnlockSkin.prototype.InduceClick = function () {
        this._close_Btn.mouseEnabled = false;
        var time = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer * 1000;
        Laya.timer.once(time, this, this.InduceMethod);
    };
    GetUnlockSkin.prototype.InduceMethod = function () {
        var _this = this;
        CachedWXBannerAd_1.default.show();
        var time = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer * 1000;
        Laya.timer.once(time, this, function () {
            _this._close_Btn.bottom = 270;
            _this._close_Btn.mouseEnabled = true;
            _this._close_Btn.offAll(Laya.Event.CLICK);
            _this._close_Btn.on(Laya.Event.CLICK, _this, _this.Close);
            _this._close_Btn.on(Laya.Event.CLICK, _this, _this.Close);
        });
    };
    GetUnlockSkin.prototype.UnlockSkin = function () {
        var self = this;
        WXAPI_1.default.showRewardedVideoAd(function (res) {
            if (res) {
                if (self._skinIndex != 99) {
                    SkinMgr_1.default.Instance.UnLockSkin(self._skinIndex);
                    SkinMgr_1.default.Instance.SetCurrentSkin(self._skinIndex);
                    self._unlockSuccess_Img.visible = true;
                    self._confirm_Btn.visible = true;
                }
            }
        }, null);
    };
    GetUnlockSkin.prototype.UnlockSuccess = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Skin_UnlockSuccess);
        GameMgr_1.default.getInstance().LoadCurrentScene();
        this._confirm_Btn.visible = false;
        this.DelayClose();
    };
    GetUnlockSkin.prototype.DelayClose = function () {
        var _this = this;
        Laya.timer.once(500, this, function () {
            _this.Close();
        });
    };
    GetUnlockSkin.prototype.Close = function () {
        CachedWXBannerAd_1.default.hide();
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.GamePlaying);
        this.closeView();
    };
    return GetUnlockSkin;
}(ViewBase_1.default));
exports.default = GetUnlockSkin;
},{"../../CachedWXBannerAd":3,"../../Config/AppSwitchConfig":4,"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../Mgr/GameMgr":10,"../../Mgr/ViewMgr":14,"../../Mgr/WudianMgr":15,"../../View/ViewBase":38,"../../WXAPI":39,"../GameLogic/SkinMgr":45}],57:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var ShareAd_1 = require("../../ShareAd/ShareAd");
var MoreGame = /** @class */ (function (_super) {
    __extends(MoreGame, _super);
    function MoreGame() {
        return _super.call(this) || this;
    }
    MoreGame.prototype.onAwake = function () {
        this._return_Btn = this.owner.getChildByName("Return_Btn");
    };
    MoreGame.prototype.addEvent = function () {
        this._return_Btn.on(Laya.Event.CLICK, this, this.closeView);
    };
    MoreGame.prototype.removeEvent = function () {
        this._return_Btn.off(Laya.Event.CLICK, this, this.closeView);
    };
    MoreGame.prototype.openView = function (data) {
        if (data) {
            if (data.onCloseEvent) {
                this.onCloseEvent = data.onCloseEvent;
            }
        }
        _super.prototype.openView.call(this, data);
    };
    MoreGame.prototype.onShow = function () {
        if (!ShareAd_1.default.isNeedShowAd()) {
            this.closeView();
            return;
        }
    };
    return MoreGame;
}(ViewBase_1.default));
exports.default = MoreGame;
},{"../../ShareAd/ShareAd":22,"../../View/ViewBase":38}],58:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var WXAPI_1 = require("../../WXAPI");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var StorageMgr_1 = require("../../Mgr/StorageMgr");
var GameMgr_1 = require("../../Mgr/GameMgr");
var PrizeDraw = /** @class */ (function (_super) {
    __extends(PrizeDraw, _super);
    function PrizeDraw() {
        var _this = _super.call(this) || this;
        _this._rate = [0.60, 0.25, 0.1, 0.05];
        return _this;
    }
    PrizeDraw.prototype.onAwake = function () {
        this._prizeWheel = this.owner.getChildByName("PrizeWheel");
        this._startPoint_Btn = this.owner.getChildByName("StartPointer_Btn");
        this._close_Btn = this.owner.getChildByName("Close_Btn");
        this._close_Btn.on(Laya.Event.CLICK, this, this.closeView);
        this._button_Box = this.owner.getChildByName("Receive_Box");
        this._receive_Btn = this._button_Box.getChildByName("Receive_Btn");
        this._receive_Btn.on(Laya.Event.CLICK, this, this.ReceivePrize);
        this._share_Btn = this._button_Box.getChildByName("Share_Btn");
        this._share_Btn.on(Laya.Event.CLICK, this, this.ShareGame);
        this._receiveTimes_Text = this.owner.getChildByName("Receive_Box").getChildByName("ReceiveTimes_Text");
        this._start_Btn = this._button_Box.getChildByName("Start_Btn");
        this._start_Btn.on(Laya.Event.CLICK, this, this.StartPrizeDraw);
        this._bannerAd_View = this.owner.getChildByName("BannerAd_View");
        this._getPrize_View = this.owner.getChildByName("GetPrize_View");
        this._prizeCount_Text = this._getPrize_View.getChildByName("PrizeCount_Text");
        this._confirm_Btn = this._getPrize_View.getChildByName("Confirm_Btn");
        this.GetDrawPrizeTime();
        this.ResetDraw();
    };
    PrizeDraw.prototype.onShow = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OpenBanner);
    };
    PrizeDraw.prototype.GetDrawPrizeTime = function () {
        var times = StorageMgr_1.default.getStorage("DrawPrizeTimes");
        if (times == null || times == "") {
            times = "3";
        }
        this._drawTimes = parseInt(times);
        var exTimes = StorageMgr_1.default.getStorage("ExDrawPrizeTimes");
        if (exTimes == null || exTimes == "") {
            exTimes = "0";
        }
        this._exDrawTimes = parseInt(exTimes);
    };
    PrizeDraw.prototype.StoragetDrawPrizeTime = function () {
        var Drawtimes = new StorageMgr_1.StorageReq();
        Drawtimes.key = "DrawPrizeTimes";
        Drawtimes.data = this._drawTimes != null ? this._drawTimes : 0;
        StorageMgr_1.default.setStorage(Drawtimes);
        var ExDrawtimes = new StorageMgr_1.StorageReq();
        ExDrawtimes.key = "ExDrawPrizeTimes";
        ExDrawtimes.data = this._exDrawTimes != null ? this._exDrawTimes : 0;
        StorageMgr_1.default.setStorage(ExDrawtimes);
    };
    // onShow() {
    //     this._bannerAd_View.onEnable();
    // }
    // onHide(){
    //     this._bannerAd_View.onDisable();
    // }
    PrizeDraw.prototype.StartPrizeDraw = function () {
        if (!this._isDrawing) {
            this._isDrawing = true;
            var result = Math.random();
            var target = 0;
            this._start_Btn.active = false;
            this._startPoint_Btn.off(Laya.Event.CLICK, this, this.StartPrizeDraw);
            if (result >= 0.95) {
                target = 36 - (Math.random() * 72);
                this._prizeCount = 50;
                console.log("抽奖结果是50钻石");
            }
            else if (result >= 0.85) {
                target = (72 * 4) + 36 - (Math.random() * 72);
                this._prizeCount = 25;
                console.log("抽奖结果是25钻石");
            }
            else if (result >= 0.6) {
                target = (72 * 1) + 36 - (Math.random() * 72);
                this._prizeCount = 10;
                console.log("抽奖结果是10钻石");
            }
            else {
                target = (72 * 3) + 36 - (Math.random() * 72);
                this._prizeCount = 5;
                console.log("抽奖结果是5钻石");
            }
            target = this._prizeWheel.rotation + 720 + target;
            var time = (target / 360) * 1000;
            Laya.Tween.to(this._prizeWheel, { rotation: target }, time, Laya.Ease.sineInOut, Laya.Handler.create(this, this.ShowDrawResult), 300);
        }
    };
    /**
     * 显示抽奖的结果
     *
     * @memberof PrizeDraw
     */
    PrizeDraw.prototype.ShowDrawResult = function () {
        this._isDrawing = false;
        this._button_Box.visible = true;
        this._start_Btn.visible = false;
        if (this._drawTimes > 0) {
            this._receive_Btn.visible = true;
            this._share_Btn.visible = false;
            this._receiveTimes_Text.visible = true;
            this._receiveTimes_Text.text = "免费次数" + this._drawTimes + "/3";
        }
        else if (this._exDrawTimes > 0) {
            this._receive_Btn.visible = true;
            this._share_Btn.visible = false;
            this._receiveTimes_Text.visible = true;
            this._receiveTimes_Text.text = "额外次数" + this._exDrawTimes + "/3";
        }
        else {
            this._receive_Btn.visible = false;
            this._share_Btn.visible = true;
            this._receiveTimes_Text.visible = true;
            this._receiveTimes_Text.text = "领取次数用完，分享后可重新获得";
        }
    };
    /**
     * 收到奖励
     *
     * @private
     * @memberof PrizeDraw
     */
    PrizeDraw.prototype.ReceivePrize = function () {
        var self = this;
        WXAPI_1.default.showRewardedVideoAd(function (res) {
            self.ShowPrizeCount(res);
        }, null);
    };
    /**
     * 重置抽奖次数
     *
     * @private
     * @memberof PrizeDraw
     */
    PrizeDraw.prototype.ResetDraw = function () {
        this._button_Box.visible = true;
        this._getPrize_View.visible = false;
        this._prizeWheel.rotation = 0;
        this._prizeCount = 0;
        this._isDrawing = false;
        this._receive_Btn.visible = false;
        this._receiveTimes_Text.visible = false;
        this._start_Btn.visible = true;
        this._start_Btn.active = true;
        this._share_Btn.visible = false;
        this._startPoint_Btn.on(Laya.Event.CLICK, this, this.StartPrizeDraw);
    };
    PrizeDraw.prototype.ShowPrizeCount = function (res) {
        if (res) {
            this._receive_Btn.visible = false;
            this._receiveTimes_Text.visible = false;
            this._prizeCount_Text.text = this._prizeCount.toString();
            this._getPrize_View.visible = true;
            GameMgr_1.default.getInstance().CurrentDiamond += this._prizeCount;
            this._button_Box.visible = false;
            if (this._drawTimes > 0) {
                this._drawTimes--;
            }
            else {
                this._exDrawTimes--;
            }
            this.StoragetDrawPrizeTime();
            this._confirm_Btn.once(Laya.Event.CLICK, this, this.ResetDraw);
        }
    };
    PrizeDraw.prototype.ShareGame = function () {
        var self = this;
        if (Laya.Browser.onMiniGame) {
            WXAPI_1.default.share(function () {
                WXAPI_1.default.showRewardedVideoAd(function (res) {
                    if (res) {
                        self.AddDrawTime();
                    }
                    else {
                        WXAPI_1.default.share(function () {
                            self.AddDrawTime();
                        }, "速度要快，姿势要帅！赶紧来和我一起玩吧！", "subRes/Image/分享.png");
                    }
                }, function () {
                    WXAPI_1.default.share(function () {
                        self.AddDrawTime();
                    }, "速度要快，姿势要帅！赶紧来和我一起玩吧！", "subRes/Image/分享.png");
                });
            }, "速度要快，姿势要帅！赶紧来和我一起玩吧！", "subRes/Image/分享.png");
        }
        else {
            this.AddDrawTime();
        }
    };
    PrizeDraw.prototype.AddDrawTime = function () {
        this._exDrawTimes = 3;
        this.ShowDrawResult();
    };
    return PrizeDraw;
}(ViewBase_1.default));
exports.default = PrizeDraw;
},{"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../Mgr/GameMgr":10,"../../Mgr/StorageMgr":12,"../../View/ViewBase":38,"../../WXAPI":39}],59:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var SignInMgr_1 = require("../../Mgr/SignInMgr");
var TwinkleSprite_1 = require("../../View/TwinkleSprite");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
/**
 * 7天签到的ViewBase类，用于签到系统
 * 注意签到系统所有数据均存在本地,一旦清除后会消失
 * 调用此类的范例为
 * @export
 * @class SignInView
 * @extends {ViewBase}
 */
var SignInView = /** @class */ (function (_super) {
    __extends(SignInView, _super);
    function SignInView() {
        var _this = _super.call(this) || this;
        /* 7天签到完成后每天的事件，获取奖励之类的，传入的参数为当前签到的数据*/
        _this._signInEvent = null;
        _this._signReward = [];
        _this._daylist = []; //签到组件引用的数组
        return _this;
    }
    SignInView.prototype.onAwake = function () {
        var _this = this;
        this._bg = this.owner.getChildByName("BG");
        this._close_Btn = this._bg.getChildByName("Close_Btn");
        this._close_Btn.on(Laya.Event.CLICK, this, this.closeView);
        this._signInDays_View = this._bg.getChildByName("SignInDays_View");
        this._list = this._signInDays_View.getChildByName("List");
        this._7thday = this._signInDays_View.getChildByName("Day6_Slot");
        this._reward_View = this.owner.getChildByName("Receive_View");
        this._reward_Img = this._reward_View.getChildByName("Reward_Img");
        this._rewardDescript_Text = this._reward_View.getChildByName("RewardDescript_Text");
        this._rewardConfrim_Btn = this._reward_View.getChildByName("Confirm_Btn");
        this._rewardConfrim_Btn.on(Laya.Event.CLICK, this, function () {
            _this._bg.visible = true;
            _this._reward_View.visible = false;
        });
        this._reward_View.visible = false;
    };
    SignInView.prototype.openView = function (data) {
        var _this = this;
        this._signData = SignInMgr_1.default.Instance.SignInData;
        this._list.cells.forEach(function (u) {
            _this._daylist.push(u);
        });
        this._daylist.push(this._7thday);
        this._signInEvent = data.SignInEvent;
        this._signReward = data.SignReward;
        for (var i = 0; i < this._signData.SignInDays.length; i++) {
            this._daylist[i].getChildByName("Count_Text").text = this._signReward[i].toString();
            if (i < SignInMgr_1.default.Instance.DayInPeriod) {
                this._daylist[i].getChildByName("Mask").visible = true;
                if (this._signData.SignInDays[i]) {
                    this._daylist[i].getChildByName("SignIn").visible = true;
                    this._daylist[i].getChildByName("UnSignIn").visible = false;
                }
                else {
                    this._daylist[i].getChildByName("SignIn").visible = false;
                    this._daylist[i].getChildByName("UnSignIn").visible = true;
                }
            }
            else if (i == SignInMgr_1.default.Instance.DayInPeriod) {
                if (this._signData.SignInDays[i]) {
                    this._daylist[i].getChildByName("Mask").visible = true;
                    this._daylist[i].getChildByName("SignIn").visible = true;
                    this._daylist[i].getChildByName("UnSignIn").visible = false;
                }
                else {
                    this._daylist[i].getChildByName("Mask").visible = false;
                    this._daylist[i].getChildByName("SignIn").visible = false;
                    this._daylist[i].getChildByName("UnSignIn").visible = true;
                    this._today = this._daylist[i];
                    this._today.on(Laya.Event.CLICK, this, this.daySlotClicked, [i, this._signReward[i].toString()]);
                    var tw = this._daylist[i].getChildByName("UnSignIn").addComponent(TwinkleSprite_1.default);
                    tw.TwinkleSpeed = 1500;
                    tw.TwinkleMaxSize = 1.1;
                }
            }
            else {
                this._daylist[i].getChildByName("Mask").visible = false;
                this._daylist[i].getChildByName("SignIn").visible = false;
                this._daylist[i].getChildByName("UnSignIn").visible = false;
            }
            // }
            // else {
            //     (this._daylist[i].getChildByName("Mask") as Laya.Sprite).visible = false;
            // }
            // if (i == SignMgr.Instance.DayInPeriod) {
            //     let tw = this._daylist[i].getChildByName("UnSignIn").addComponent(TwinkleSprite) as TwinkleSprite;
            //     tw.TwinkleSpeed = 4000;
            // }
        }
        _super.prototype.openView.call(this, data);
    };
    SignInView.prototype.onShow = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OpenBanner);
    };
    /**
     * 点击某个签到按钮
     *
     * @param {number} day
     * @memberof SignInView
     */
    SignInView.prototype.daySlotClicked = function (res, rewardcount) {
        if (this._signInEvent) {
            this._signInEvent(res);
        }
        this.showRewardView(rewardcount);
        this.signIn();
    };
    /**
     * 确认签到功能
     *
     * @memberof SignInView
     */
    SignInView.prototype.signIn = function () {
        console.log("签到完毕");
        SignInMgr_1.default.Instance.SignIn();
        this._today.off(Laya.Event.CLICK, this, this.daySlotClicked);
        this._today.getChildByName("Mask").visible = true;
        this._today.getChildByName("SignIn").visible = true;
        this._today.getChildByName("UnSignIn").visible = false;
    };
    SignInView.prototype.showRewardView = function (text) {
        var str = "";
        if (text) {
            str = text;
        }
        this._rewardDescript_Text.text = str;
        this._reward_View.visible = true;
        this._bg.visible = false;
    };
    return SignInView;
}(ViewBase_1.default));
exports.default = SignInView;
},{"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../Mgr/SignInMgr":11,"../../View/TwinkleSprite":37,"../../View/ViewBase":38}],60:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var SkipSuccess = /** @class */ (function (_super) {
    __extends(SkipSuccess, _super);
    function SkipSuccess() {
        return _super.call(this) || this;
    }
    SkipSuccess.prototype.onAwake = function () {
        this._confirm_Btn = this.owner.getChildAt(0).getChildByName("Confirm_Btn");
        this._confirm_Btn.on(Laya.Event.CLICK, this, this.closeView);
    };
    return SkipSuccess;
}(ViewBase_1.default));
exports.default = SkipSuccess;
},{"../../View/ViewBase":38}],61:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var ViewBase_1 = require("../../View/ViewBase");
var UnlockSkinSuccess = /** @class */ (function (_super) {
    __extends(UnlockSkinSuccess, _super);
    function UnlockSkinSuccess() {
        return _super.call(this) || this;
    }
    UnlockSkinSuccess.prototype.onAwake = function () {
        this._owenSpr = this.owner.getChildAt(0);
        this._skin_Img = this._owenSpr.getChildByName("Skin_Img");
        this._confirm_Btn = this._owenSpr.getChildByName("Confirm_Btn");
        this._confirm_Btn.on(Laya.Event.CLICK, this, this.closeView);
        this.owner.on(Laya.Event.CLICK, this, this.closeView);
    };
    UnlockSkinSuccess.prototype.openView = function (index) {
        this._skin_Img.loadImage("Skin/" + index + ".png");
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Skin_UnlockSuccess);
    };
    return UnlockSkinSuccess;
}(ViewBase_1.default));
exports.default = UnlockSkinSuccess;
},{"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../View/ViewBase":38}],62:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SkinMgr_1 = require("../GameLogic/SkinMgr");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var WXAPI_1 = require("../../WXAPI");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var ViewBase_1 = require("../../View/ViewBase");
var GameMgr_1 = require("../../Mgr/GameMgr");
var UnlockSkinView = /** @class */ (function (_super) {
    __extends(UnlockSkinView, _super);
    function UnlockSkinView() {
        var _this = _super.call(this) || this;
        _this._lastSelect = -1;
        return _this;
    }
    /**
     *
     *
     * @memberof UnlockSkinView
     */
    UnlockSkinView.prototype.onAwake = function () {
        this._ownerBox = this.owner.getChildByName("UnlockSkin_View");
        this._unlockByVideo_Btn = this._ownerBox.getChildByName("UnlockByVideo_Btn");
        this._unlockByVideo_View = this._ownerBox.getChildByName("UnlockByVideo_View");
        this._unlockByDia_Btn = this._ownerBox.getChildByName("UnlockByDia_Btn");
        this._useSkin_Btn = this._ownerBox.getChildByName("UseSkin_Btn");
        this._selectSkin_Text = this._ownerBox.getChildByName("SelectSkin_Text");
        this._unlockByVideo_Btn.on(Laya.Event.CLICK, this, this.TryUnlockSkin, [true]);
        this._unlockByVideo_View_Close_Btn = this._unlockByVideo_View.getChildByName("Close_Btn");
        this._unlockByVideo_View_Unlock_Btn = this._unlockByVideo_View.getChildByName("Unlock_Btn");
        this._unlockByVideo_View_Unlock_Btn.on(Laya.Event.CLICK, this, this.TryUnlockSkin, [true]);
        this._unlockByVideo_View_Close_Btn.on(Laya.Event.CLICK, this, this.closeView);
        // this._unlockByVideo2_Btn.on(Laya.Event.CLICK, this, this.TryUnlockSkin, [true]);
        this._unlockByDia_DiaCount_Text = this._unlockByDia_Btn.getChildByName("DiamondCount_Text");
        this._unlockByDia_Btn.on(Laya.Event.CLICK, this, this.TryUnlockSkin, [false]);
        this._useSkin_Btn.on(Laya.Event.CLICK, this, this.UsingSkin);
        this._list = this._ownerBox.getChildByName("List");
        this._list.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this._close_btn = this._ownerBox.getChildByName("Close_Btn");
        this._close_btn.on(Laya.Event.CLICK, this, this.closeView, null);
        this._list.array = [];
        this._itemArray = [];
        // EventMgr.instance.regEvemt(EventDef.View_OpenSkin, this, this.Show);
    };
    UnlockSkinView.prototype.onEnable = function () {
        this._list.array = [0, 1, 2, 3, 4, 5, 6, 7, 8];
    };
    UnlockSkinView.prototype.onShow = function () {
        this._ownerBox.visible = true;
        this._ownerBox.active = true;
        this._enabled = true;
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OpenBanner);
        // this.SetUnlockMethod(this._lastSelect);
    };
    UnlockSkinView.prototype.onClose = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_CloseBanner);
    };
    // Show() {
    // }
    UnlockSkinView.prototype.Hide = function () {
        this._ownerBox.visible = false;
        this._ownerBox.active = false;
        this._enabled = false;
    };
    /**
     * 刷新皮肤解锁界面的状态
     *
     * @memberof UnlockSkinView
     */
    UnlockSkinView.prototype.RefreshView = function () {
        for (var i = 0; i < this._itemArray.length; i++) {
            var using = this._itemArray[i].getChildByName("Using");
            var locked = this._itemArray[i].getChildByName("Locked");
            if (SkinMgr_1.default.Instance.GetSkinAvailable(i)) {
                locked.visible = false;
            }
            if (SkinMgr_1.default.Instance.GetCurrentSkin() == i) {
                using.visible = true;
            }
        }
    };
    /**
     * 设置解锁的方法是使用激励视屏还是钻石解锁;
     *
     * @memberof UnlockSkinView
     */
    UnlockSkinView.prototype.SetUnlockMethod = function (index) {
        var unlockByVidelo = SkinMgr_1.default.Instance.CurrentSkinDate.UnlockByVidelo;
        if (SkinMgr_1.default.Instance.GetSkinAvailable(index)) {
            this._unlockByDia_Btn.visible = false;
            this._useSkin_Btn.visible = true;
            this._unlockByVideo_Btn.visible = false;
            this._unlockByVideo_View.visible = false;
            this._selectSkin_Text.visible = false;
            var lab = this._useSkin_Btn.getChildByName("lab");
            if (SkinMgr_1.default.Instance.GetCurrentSkin() == index) {
                lab.text = "取消使用";
            }
            else {
                lab.text = "使用皮肤";
            }
        }
        else if (unlockByVidelo) {
            if (index != -1 && index >= 0 && index <= 8) {
                this._unlockByDia_Btn.visible = false;
                this._useSkin_Btn.visible = false;
                this._unlockByVideo_Btn.visible = true;
                this._unlockByVideo_View.visible = false;
                this._selectSkin_Text.visible = false;
            }
            else {
                this._unlockByDia_Btn.visible = false;
                this._unlockByVideo_View.visible = false;
                this._unlockByVideo_Btn.visible = false;
                this._useSkin_Btn.visible = false;
                this._selectSkin_Text.visible = true;
            }
        }
        else {
            this._unlockByDia_Btn.visible = true;
            this._unlockByVideo_Btn.visible = false;
            this._useSkin_Btn.visible = false;
            if (index != -1 && index >= 0 && index <= 8) {
                this._useSkin_Btn.visible = false;
                this._selectSkin_Text.visible = false;
                var skincost = SkinMgr_1.default.Instance.GetSkinUnlockCost(index);
                this._unlockByDia_DiaCount_Text.text = SkinMgr_1.default.Instance.GetSkinUnlockCost(index).toString();
                this._unlockByDia_Btn.visible = true;
                this._unlockByVideo_View.visible = false;
            }
            else {
                this._unlockByDia_Btn.visible = false;
                this._unlockByVideo_Btn.visible = false;
                this._unlockByVideo_View.visible = false;
                this._useSkin_Btn.visible = false;
                this._selectSkin_Text.visible = true;
                this._selectSkin_Text.text = "点击图标选择您想要的皮肤";
            }
        }
    };
    /**
     *
     *
     * @param {Laya.Box} cell
     * @param {number} index
     * @memberof UnlockSkinView
     */
    UnlockSkinView.prototype.onListRender = function (cell, index) {
        var data = this._list.array[index];
        this._itemArray[index] = cell;
        cell.on(Laya.Event.CLICK, this, this.ItemClick, [index]);
        var skin = cell.getChildByName("Skin");
        skin.loadImage("Skin/" + index + ".png");
        var using = this._itemArray[index].getChildByName("Using");
        var locked = this._itemArray[index].getChildByName("Locked");
        if (SkinMgr_1.default.Instance.GetSkinAvailable(index)) {
            locked.visible = false;
            if (SkinMgr_1.default.Instance.GetCurrentSkin() == index) {
                using.visible = true;
            }
        }
        else {
            locked.visible = true;
            using.visible = false;
        }
        // this.Hide();
    };
    /**
     * Item点击事件
     *
     * @param {number} index
     * @memberof UnlockSkinView
     */
    UnlockSkinView.prototype.ItemClick = function (index) {
        var data = this._list.array[index];
        for (var i = 0; i < this._itemArray.length; i++) {
            var selected = this._itemArray[i].getChildByName("Selected");
            var normal = this._itemArray[i].getChildByName("Normal");
            if (i == index) {
                if (this._lastSelect == index) {
                    selected.visible = false;
                    normal.visible = true;
                    this._lastSelect = -1;
                }
                else {
                    selected.visible = true;
                    normal.visible = false;
                    this._lastSelect = index;
                }
            }
            else {
                selected.visible = false;
                normal.visible = true;
            }
        }
        this.SetUnlockMethod(this._lastSelect);
    };
    /**
     * 解锁皮肤的方法
     *
     * @param {number} index
     * @param {boolean} ByVideo
     * @memberof UnlockSkinView
     */
    UnlockSkinView.prototype.TryUnlockSkin = function (ByVideo) {
        var index = this._lastSelect;
        var self = this;
        if (index != -1) {
            if (ByVideo) {
                WXAPI_1.default.showRewardedVideoAd(function (res) {
                    if (res) {
                        self.UnlockSkin(index);
                    }
                }, null);
            }
            else {
                var skincost = SkinMgr_1.default.Instance.GetSkinUnlockCost(index);
                if (GameMgr_1.default.getInstance().CurrentDiamond >= skincost) {
                    GameMgr_1.default.getInstance().CurrentDiamond -= skincost;
                    this.UnlockSkin(index);
                }
                else {
                    // this._unlockByDia_Btn.visible = false;
                    this._unlockByVideo_View.visible = true;
                }
                // else {
                //     this._unlockByDia_Btn.visible = false;
                //     this._unlockByVideo_Btn.visible = false;
                //     this._useSkin_Btn.visible = false;
                //     this._selectSkin_Text.visible = true;
                //     this._selectSkin_Text.text = "钻石不足，无法解锁皮肤";
                // }
            }
        }
    };
    UnlockSkinView.prototype.UnlockSkin = function (index) {
        SkinMgr_1.default.Instance.UnLockSkin(index);
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.UnlockSkinSuccess, index);
        SkinMgr_1.default.Instance.CurrentSkinDate.UnlockByVidelo = !SkinMgr_1.default.Instance.CurrentSkinDate.UnlockByVidelo;
        this.UsingSkin();
        SkinMgr_1.default.Instance.SaveSkinDate();
        this.RefreshView();
        this.SetUnlockMethod(this._lastSelect);
    };
    /**
     * 设置使用的皮肤
     *
     * @param {any} index
     * @memberof UnlockSkinView
     */
    UnlockSkinView.prototype.UsingSkin = function () {
        var index = this._lastSelect;
        var lab = this._useSkin_Btn.getChildByName("lab");
        for (var i = 0; i < this._itemArray.length; i++) {
            var using = this._itemArray[i].getChildByName("Using");
            if (i == index && SkinMgr_1.default.Instance.GetSkinAvailable(index)) {
                if (SkinMgr_1.default.Instance.GetCurrentSkin() != index) {
                    using.visible = true;
                    SkinMgr_1.default.Instance.SetCurrentSkin(index);
                    lab.text = "取消使用";
                }
                else {
                    using.visible = false;
                    SkinMgr_1.default.Instance.SetCurrentSkin(-1);
                    lab.text = "使用皮肤";
                }
            }
            else {
                using.visible = false;
            }
        }
    };
    return UnlockSkinView;
}(ViewBase_1.default));
exports.default = UnlockSkinView;
},{"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../Mgr/GameMgr":10,"../../Mgr/ViewMgr":14,"../../View/ViewBase":38,"../../WXAPI":39,"../GameLogic/SkinMgr":45}],63:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Scene = Laya.Scene;
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var View;
    (function (View) {
        var LoadingUI = /** @class */ (function (_super) {
            __extends(LoadingUI, _super);
            function LoadingUI() {
                return _super.call(this) || this;
            }
            LoadingUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(LoadingUI.uiView);
            };
            LoadingUI.uiView = { "type": "Scene", "props": { "width": 750, "top": 0, "right": 0, "left": 0, "height": 1334, "bottom": 0 }, "compId": 2, "child": [{ "type": "Image", "props": { "skin": "Loading/1_0011_背景.png", "centerY": 13, "centerX": 0 }, "compId": 11 }, { "type": "Clip", "props": { "top": 0, "right": 0, "name": "Bg", "left": 0, "bottom": 0 }, "compId": 6, "child": [{ "type": "Clip", "props": { "skin": "Loading/未标题-1_0002_图层-2.png", "right": 35, "pivotY": 22, "name": "processBar", "left": 60, "height": 50, "bottom": 211 }, "compId": 5 }, { "type": "Image", "props": { "top": 170, "skin": "Boomerang_UI/新logo.png", "name": "Bg", "centerX": 0 }, "compId": 9 }, { "type": "Sprite", "props": { "y": 515, "x": 304.5, "texture": "Boomerang_UI/图层 533 拷贝 2.png", "scaleY": 1, "scaleX": 1 }, "compId": 10 }] }, { "type": "Script", "props": { "y": 0, "x": 0, "runtime": "View/LoadingView/LoadingView.ts" }, "compId": 7 }], "loadList": ["Loading/1_0011_背景.png", "Loading/未标题-1_0002_图层-2.png", "Boomerang_UI/新logo.png", "Boomerang_UI/图层 533 拷贝 2.png"], "loadList3D": [] };
            return LoadingUI;
        }(Scene));
        View.LoadingUI = LoadingUI;
        REG("ui.View.LoadingUI", LoadingUI);
    })(View = ui.View || (ui.View = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[9])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
